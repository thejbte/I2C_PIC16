

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Apr 19 16:52:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F1938 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011D                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  020D                     	;# 
   164  0210                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0294                     	;# 
   178  0295                     	;# 
   179  0295                     	;# 
   180  0296                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  029B                     	;# 
   186  029C                     	;# 
   187  029C                     	;# 
   188  029D                     	;# 
   189  029E                     	;# 
   190  029F                     	;# 
   191  0311                     	;# 
   192  0311                     	;# 
   193  0312                     	;# 
   194  0313                     	;# 
   195  0314                     	;# 
   196  0315                     	;# 
   197  0315                     	;# 
   198  0316                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  031C                     	;# 
   204  031C                     	;# 
   205  031D                     	;# 
   206  031E                     	;# 
   207  0394                     	;# 
   208  0395                     	;# 
   209  0396                     	;# 
   210  0415                     	;# 
   211  0416                     	;# 
   212  0417                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  0791                     	;# 
   217  0792                     	;# 
   218  0793                     	;# 
   219  0794                     	;# 
   220  0795                     	;# 
   221  0798                     	;# 
   222  0799                     	;# 
   223  07A0                     	;# 
   224  07A1                     	;# 
   225  07A3                     	;# 
   226  07A4                     	;# 
   227  07A6                     	;# 
   228  07A7                     	;# 
   229  07A9                     	;# 
   230  07AA                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  0110                     	;# 
   294  0111                     	;# 
   295  0112                     	;# 
   296  0113                     	;# 
   297  0114                     	;# 
   298  0115                     	;# 
   299  0116                     	;# 
   300  0117                     	;# 
   301  0118                     	;# 
   302  0119                     	;# 
   303  011A                     	;# 
   304  011B                     	;# 
   305  011D                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0191                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0194                     	;# 
   315  0195                     	;# 
   316  0196                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020D                     	;# 
   329  0210                     	;# 
   330  0211                     	;# 
   331  0212                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0216                     	;# 
   337  0217                     	;# 
   338  0291                     	;# 
   339  0291                     	;# 
   340  0292                     	;# 
   341  0293                     	;# 
   342  0294                     	;# 
   343  0295                     	;# 
   344  0295                     	;# 
   345  0296                     	;# 
   346  0298                     	;# 
   347  0298                     	;# 
   348  0299                     	;# 
   349  029A                     	;# 
   350  029B                     	;# 
   351  029C                     	;# 
   352  029C                     	;# 
   353  029D                     	;# 
   354  029E                     	;# 
   355  029F                     	;# 
   356  0311                     	;# 
   357  0311                     	;# 
   358  0312                     	;# 
   359  0313                     	;# 
   360  0314                     	;# 
   361  0315                     	;# 
   362  0315                     	;# 
   363  0316                     	;# 
   364  0318                     	;# 
   365  0318                     	;# 
   366  0319                     	;# 
   367  031A                     	;# 
   368  031C                     	;# 
   369  031C                     	;# 
   370  031D                     	;# 
   371  031E                     	;# 
   372  0394                     	;# 
   373  0395                     	;# 
   374  0396                     	;# 
   375  0415                     	;# 
   376  0416                     	;# 
   377  0417                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  0791                     	;# 
   382  0792                     	;# 
   383  0793                     	;# 
   384  0794                     	;# 
   385  0795                     	;# 
   386  0798                     	;# 
   387  0799                     	;# 
   388  07A0                     	;# 
   389  07A1                     	;# 
   390  07A3                     	;# 
   391  07A4                     	;# 
   392  07A6                     	;# 
   393  07A7                     	;# 
   394  07A9                     	;# 
   395  07AA                     	;# 
   396  0FE4                     	;# 
   397  0FE5                     	;# 
   398  0FE6                     	;# 
   399  0FE7                     	;# 
   400  0FE8                     	;# 
   401  0FE9                     	;# 
   402  0FEA                     	;# 
   403  0FEB                     	;# 
   404  0FED                     	;# 
   405  0FEE                     	;# 
   406  0FEF                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  008E                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  0110                     	;# 
   459  0111                     	;# 
   460  0112                     	;# 
   461  0113                     	;# 
   462  0114                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020D                     	;# 
   494  0210                     	;# 
   495  0211                     	;# 
   496  0212                     	;# 
   497  0213                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0298                     	;# 
   512  0298                     	;# 
   513  0299                     	;# 
   514  029A                     	;# 
   515  029B                     	;# 
   516  029C                     	;# 
   517  029C                     	;# 
   518  029D                     	;# 
   519  029E                     	;# 
   520  029F                     	;# 
   521  0311                     	;# 
   522  0311                     	;# 
   523  0312                     	;# 
   524  0313                     	;# 
   525  0314                     	;# 
   526  0315                     	;# 
   527  0315                     	;# 
   528  0316                     	;# 
   529  0318                     	;# 
   530  0318                     	;# 
   531  0319                     	;# 
   532  031A                     	;# 
   533  031C                     	;# 
   534  031C                     	;# 
   535  031D                     	;# 
   536  031E                     	;# 
   537  0394                     	;# 
   538  0395                     	;# 
   539  0396                     	;# 
   540  0415                     	;# 
   541  0416                     	;# 
   542  0417                     	;# 
   543  041C                     	;# 
   544  041D                     	;# 
   545  041E                     	;# 
   546  0791                     	;# 
   547  0792                     	;# 
   548  0793                     	;# 
   549  0794                     	;# 
   550  0795                     	;# 
   551  0798                     	;# 
   552  0799                     	;# 
   553  07A0                     	;# 
   554  07A1                     	;# 
   555  07A3                     	;# 
   556  07A4                     	;# 
   557  07A6                     	;# 
   558  07A7                     	;# 
   559  07A9                     	;# 
   560  07AA                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  0090                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0093                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  010E                     	;# 
   623  0110                     	;# 
   624  0111                     	;# 
   625  0112                     	;# 
   626  0113                     	;# 
   627  0114                     	;# 
   628  0115                     	;# 
   629  0116                     	;# 
   630  0117                     	;# 
   631  0118                     	;# 
   632  0119                     	;# 
   633  011A                     	;# 
   634  011B                     	;# 
   635  011D                     	;# 
   636  018C                     	;# 
   637  018D                     	;# 
   638  0191                     	;# 
   639  0191                     	;# 
   640  0192                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0193                     	;# 
   644  0194                     	;# 
   645  0195                     	;# 
   646  0196                     	;# 
   647  0199                     	;# 
   648  019A                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019C                     	;# 
   654  019C                     	;# 
   655  019D                     	;# 
   656  019E                     	;# 
   657  019F                     	;# 
   658  020D                     	;# 
   659  0210                     	;# 
   660  0211                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0214                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0216                     	;# 
   667  0217                     	;# 
   668  0291                     	;# 
   669  0291                     	;# 
   670  0292                     	;# 
   671  0293                     	;# 
   672  0294                     	;# 
   673  0295                     	;# 
   674  0295                     	;# 
   675  0296                     	;# 
   676  0298                     	;# 
   677  0298                     	;# 
   678  0299                     	;# 
   679  029A                     	;# 
   680  029B                     	;# 
   681  029C                     	;# 
   682  029C                     	;# 
   683  029D                     	;# 
   684  029E                     	;# 
   685  029F                     	;# 
   686  0311                     	;# 
   687  0311                     	;# 
   688  0312                     	;# 
   689  0313                     	;# 
   690  0314                     	;# 
   691  0315                     	;# 
   692  0315                     	;# 
   693  0316                     	;# 
   694  0318                     	;# 
   695  0318                     	;# 
   696  0319                     	;# 
   697  031A                     	;# 
   698  031C                     	;# 
   699  031C                     	;# 
   700  031D                     	;# 
   701  031E                     	;# 
   702  0394                     	;# 
   703  0395                     	;# 
   704  0396                     	;# 
   705  0415                     	;# 
   706  0416                     	;# 
   707  0417                     	;# 
   708  041C                     	;# 
   709  041D                     	;# 
   710  041E                     	;# 
   711  0791                     	;# 
   712  0792                     	;# 
   713  0793                     	;# 
   714  0794                     	;# 
   715  0795                     	;# 
   716  0798                     	;# 
   717  0799                     	;# 
   718  07A0                     	;# 
   719  07A1                     	;# 
   720  07A3                     	;# 
   721  07A4                     	;# 
   722  07A6                     	;# 
   723  07A7                     	;# 
   724  07A9                     	;# 
   725  07AA                     	;# 
   726  0FE4                     	;# 
   727  0FE5                     	;# 
   728  0FE6                     	;# 
   729  0FE7                     	;# 
   730  0FE8                     	;# 
   731  0FE9                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEF                     	;# 
   737  0000                     	;# 
   738  0001                     	;# 
   739  0002                     	;# 
   740  0003                     	;# 
   741  0004                     	;# 
   742  0005                     	;# 
   743  0006                     	;# 
   744  0007                     	;# 
   745  0008                     	;# 
   746  0009                     	;# 
   747  000A                     	;# 
   748  000B                     	;# 
   749  000C                     	;# 
   750  000D                     	;# 
   751  000E                     	;# 
   752  0010                     	;# 
   753  0011                     	;# 
   754  0012                     	;# 
   755  0013                     	;# 
   756  0015                     	;# 
   757  0016                     	;# 
   758  0016                     	;# 
   759  0017                     	;# 
   760  0018                     	;# 
   761  0019                     	;# 
   762  001A                     	;# 
   763  001B                     	;# 
   764  001C                     	;# 
   765  001E                     	;# 
   766  001F                     	;# 
   767  008C                     	;# 
   768  008D                     	;# 
   769  008E                     	;# 
   770  0090                     	;# 
   771  0091                     	;# 
   772  0092                     	;# 
   773  0093                     	;# 
   774  0095                     	;# 
   775  0096                     	;# 
   776  0097                     	;# 
   777  0098                     	;# 
   778  0099                     	;# 
   779  009A                     	;# 
   780  009B                     	;# 
   781  009B                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  0110                     	;# 
   789  0111                     	;# 
   790  0112                     	;# 
   791  0113                     	;# 
   792  0114                     	;# 
   793  0115                     	;# 
   794  0116                     	;# 
   795  0117                     	;# 
   796  0118                     	;# 
   797  0119                     	;# 
   798  011A                     	;# 
   799  011B                     	;# 
   800  011D                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  0191                     	;# 
   804  0191                     	;# 
   805  0192                     	;# 
   806  0193                     	;# 
   807  0193                     	;# 
   808  0193                     	;# 
   809  0194                     	;# 
   810  0195                     	;# 
   811  0196                     	;# 
   812  0199                     	;# 
   813  019A                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019C                     	;# 
   819  019C                     	;# 
   820  019D                     	;# 
   821  019E                     	;# 
   822  019F                     	;# 
   823  020D                     	;# 
   824  0210                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0213                     	;# 
   828  0214                     	;# 
   829  0215                     	;# 
   830  0215                     	;# 
   831  0216                     	;# 
   832  0217                     	;# 
   833  0291                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0293                     	;# 
   837  0294                     	;# 
   838  0295                     	;# 
   839  0295                     	;# 
   840  0296                     	;# 
   841  0298                     	;# 
   842  0298                     	;# 
   843  0299                     	;# 
   844  029A                     	;# 
   845  029B                     	;# 
   846  029C                     	;# 
   847  029C                     	;# 
   848  029D                     	;# 
   849  029E                     	;# 
   850  029F                     	;# 
   851  0311                     	;# 
   852  0311                     	;# 
   853  0312                     	;# 
   854  0313                     	;# 
   855  0314                     	;# 
   856  0315                     	;# 
   857  0315                     	;# 
   858  0316                     	;# 
   859  0318                     	;# 
   860  0318                     	;# 
   861  0319                     	;# 
   862  031A                     	;# 
   863  031C                     	;# 
   864  031C                     	;# 
   865  031D                     	;# 
   866  031E                     	;# 
   867  0394                     	;# 
   868  0395                     	;# 
   869  0396                     	;# 
   870  0415                     	;# 
   871  0416                     	;# 
   872  0417                     	;# 
   873  041C                     	;# 
   874  041D                     	;# 
   875  041E                     	;# 
   876  0791                     	;# 
   877  0792                     	;# 
   878  0793                     	;# 
   879  0794                     	;# 
   880  0795                     	;# 
   881  0798                     	;# 
   882  0799                     	;# 
   883  07A0                     	;# 
   884  07A1                     	;# 
   885  07A3                     	;# 
   886  07A4                     	;# 
   887  07A6                     	;# 
   888  07A7                     	;# 
   889  07A9                     	;# 
   890  07AA                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE9                     	;# 
   897  0FEA                     	;# 
   898  0FEB                     	;# 
   899  0FED                     	;# 
   900  0FEE                     	;# 
   901  0FEF                     	;# 
   902                           
   903 ;; Function _Wrappers_I2CMaster_Write is unused but had its address taken
   904  0011                     _PIR1bits	set	17
   905  0095                     _OPTION_REGbits	set	149
   906  008E                     _TRISC	set	142
   907  008D                     _TRISB	set	141
   908  008C                     _TRISA	set	140
   909  0090                     _TRISE	set	144
   910  0098                     _OSCTUNE	set	152
   911  0099                     _OSCCON	set	153
   912  0473                     _TRISC3	set	1139
   913  0474                     _TRISC4	set	1140
   914  011D                     _APFCON	set	285
   915  010E                     _LATC	set	270
   916  010D                     _LATB	set	269
   917  010C                     _LATA	set	268
   918  0110                     _LATE	set	272
   919  0116                     _BORCON	set	278
   920  018C                     _ANSELA	set	396
   921  018D                     _ANSELB	set	397
   922  0199                     _RCREG	set	409
   923  019D                     _RCSTAbits	set	413
   924  019A                     _TXREG	set	410
   925  019C                     _SPBRGH	set	412
   926  019B                     _SPBRGL	set	411
   927  019E                     _TXSTA	set	414
   928  019D                     _RCSTA	set	413
   929  019F                     _BAUDCON	set	415
   930  020D                     _WPUB	set	525
   931  0210                     _WPUE	set	528
   932  0211                     _SSPBUF	set	529
   933  0216                     _SSPCON2bits	set	534
   934  0214                     _SSPSTAT	set	532
   935  0216                     _SSPCON2	set	534
   936  0212                     _SSPADD	set	530
   937  0215                     _SSPCON1	set	533
   938  10B5                     _ACKDT	set	4277
   939                           
   940                           	psect	stringtext1
   941  0800                     __pstringtext1:	
   942  0800                     STR_1:	
   943  0800  3454               	retlw	84	;'T'
   944  0801  3465               	retlw	101	;'e'
   945  0802  346D               	retlw	109	;'m'
   946  0803  3470               	retlw	112	;'p'
   947  0804  3465               	retlw	101	;'e'
   948  0805  3472               	retlw	114	;'r'
   949  0806  3461               	retlw	97	;'a'
   950  0807  3474               	retlw	116	;'t'
   951  0808  3475               	retlw	117	;'u'
   952  0809  3472               	retlw	114	;'r'
   953  080A  3465               	retlw	101	;'e'
   954  080B  3420               	retlw	32	;' '
   955  080C  3425               	retlw	37	;'%'
   956  080D  3464               	retlw	100	;'d'
   957  080E  3420               	retlw	32	;' '
   958  080F  3443               	retlw	67	;'C'
   959  0810  340D               	retlw	13
   960  0811  340A               	retlw	10
   961  0812  3400               	retlw	0
   962                           
   963                           	psect	stringtext2
   964  0000                     __pstringtext2:	
   965                           
   966                           ; #config settings
   967  0000                     
   968                           	psect	cinit
   969  07F5                     start_initialization:	
   970  07F5                     __initialization:	
   971                           
   972                           ; Clear objects allocated to BANK1
   973  07F5  30A0               	movlw	low __pbssBANK1
   974  07F6  0084               	movwf	4
   975  07F7  3000               	movlw	high __pbssBANK1
   976  07F8  0085               	movwf	5
   977  07F9  302D               	movlw	45
   978  07FA  3181  2121  3187   	fcall	clear_ram0
   979  07FD                     end_of_initialization:	
   980                           ;End of C runtime variable initialization code
   981                           
   982  07FD                     __end_of__initialization:	
   983  07FD  0020               	movlb	0
   984  07FE  3182  2AEC         	ljmp	_main	;jump to C main() function
   985                           
   986                           	psect	bssBANK1
   987  00A0                     __pbssBANK1:	
   988  00A0                     _nout:	
   989  00A0                     	ds	2
   990  00A2                     _width:	
   991  00A2                     	ds	2
   992  00A4                     _prec:	
   993  00A4                     	ds	2
   994  00A6                     _flags:	
   995  00A6                     	ds	2
   996  00A8                     _dbuf:	
   997  00A8                     	ds	32
   998  00C8                     _TC74Data:	
   999  00C8                     	ds	5
  1000                           
  1001                           	psect	clrtext
  1002  0121                     clear_ram0:	
  1003                           ;	Called with FSR0 containing the base address, and
  1004                           ;	WREG with the size to clear
  1005                           
  1006  0121  0064               	clrwdt	;clear the watchdog before getting into this loop
  1007  0122                     clrloop0:	
  1008  0122  0180               	clrf	0	;clear RAM location pointed to by FSR
  1009  0123  3101               	addfsr 0,1
  1010  0124  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1011  0125  2922               	goto	clrloop0	;have we reached the end yet?
  1012  0126  3400               	retlw	0	;all done for this memory range, return
  1013                           
  1014                           	psect	cstackCOMMON
  1015  0070                     __pcstackCOMMON:	
  1016  0070                     ?_OSCILLATOR_Initialize:	
  1017  0070                     ??_OSCILLATOR_Initialize:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_PIN_MANAGER_Initialize:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ??_PIN_MANAGER_Initialize:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ?_EUSART_Initialize:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ??_EUSART_Initialize:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ?_I2C_Initialize:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ??_I2C_Initialize:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0070                     ?_TC74_Initialize:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0070                     ?_TC74_Temperature:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0070                     ?_main:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0070                     ?_TC74_Ready:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0070                     ?_I2C_Wait1:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0070                     ??_I2C_Wait1:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0070                     ?_I2C_Start:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0070                     ??_I2C_Start:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_I2C_RStart:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ??_I2C_RStart:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_I2C_Stop:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ??_I2C_Stop:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_I2C_Send_ACK:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ??_I2C_Send_ACK:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ??_I2C_Write:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_I2C_Read:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_EUSART_Write:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ??_EUSART_Write:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_putch:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ??___aodiv:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ??___aomod:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_strlen:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_I2C_Write:	
  1105                           ; 2 bytes @ 0x0
  1106                           
  1107  0070                     TC74_Initialize@AddrSlave:	
  1108                           ; 2 bytes @ 0x0
  1109                           
  1110  0070                     I2C_Write@data:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     EUSART_Write@txData:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     I2C_Read@ack:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x0
  1121  0070                     	ds	1
  1122  0071                     ??_putch:	
  1123  0071                     putch@txData:	
  1124                           ; 1 bytes @ 0x1
  1125                           
  1126  0071                     ___aodiv@counter:	
  1127                           ; 1 bytes @ 0x1
  1128                           
  1129  0071                     ___aomod@counter:	
  1130                           ; 1 bytes @ 0x1
  1131                           
  1132  0071                     TC74_Initialize@write_fcn:	
  1133                           ; 1 bytes @ 0x1
  1134                           
  1135                           
  1136                           ; 2 bytes @ 0x1
  1137  0071                     	ds	1
  1138  0072                     ??_strlen:	
  1139  0072                     ??_I2C_Read:	
  1140                           ; 1 bytes @ 0x2
  1141                           
  1142  0072                     ?_fputc:	
  1143                           ; 1 bytes @ 0x2
  1144                           
  1145  0072                     ___aodiv@sign:	
  1146                           ; 2 bytes @ 0x2
  1147                           
  1148  0072                     ___aomod@sign:	
  1149                           ; 1 bytes @ 0x2
  1150                           
  1151  0072                     fputc@c:	
  1152                           ; 1 bytes @ 0x2
  1153                           
  1154                           
  1155                           ; 2 bytes @ 0x2
  1156  0072                     	ds	1
  1157  0073                     ?_abs:	
  1158  0073                     strlen@a:	
  1159                           ; 2 bytes @ 0x3
  1160                           
  1161  0073                     TC74_Initialize@read_fcn:	
  1162                           ; 1 bytes @ 0x3
  1163                           
  1164  0073                     abs@a:	
  1165                           ; 2 bytes @ 0x3
  1166                           
  1167  0073                     ___aodiv@quotient:	
  1168                           ; 2 bytes @ 0x3
  1169                           
  1170                           
  1171                           ; 8 bytes @ 0x3
  1172  0073                     	ds	1
  1173  0074                     fputc@fp:	
  1174  0074                     strlen@s:	
  1175                           ; 1 bytes @ 0x4
  1176                           
  1177  0074                     I2C_Read@tempbuf:	
  1178                           ; 1 bytes @ 0x4
  1179                           
  1180                           
  1181                           ; 2 bytes @ 0x4
  1182  0074                     	ds	1
  1183  0075                     ??_TC74_Initialize:	
  1184  0075                     ??_fputc:	
  1185                           ; 1 bytes @ 0x5
  1186                           
  1187  0075                     ??_abs:	
  1188                           ; 1 bytes @ 0x5
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x5
  1192  0075                     	ds	1
  1193  0076                     ?_Wrappers_I2CMaster_Read:	
  1194  0076                     TC74_Initialize@Obj:	
  1195                           ; 1 bytes @ 0x6
  1196                           
  1197  0076                     Wrappers_I2CMaster_Read@Address7b:	
  1198                           ; 1 bytes @ 0x6
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0x6
  1202  0076                     	ds	1
  1203  0077                     Wrappers_I2CMaster_Read@Register:	
  1204                           
  1205                           ; 1 bytes @ 0x7
  1206  0077                     	ds	1
  1207  0078                     Wrappers_I2CMaster_Read@amount:	
  1208                           
  1209                           ; 1 bytes @ 0x8
  1210  0078                     	ds	1
  1211  0079                     ??_Wrappers_I2CMaster_Read:	
  1212                           
  1213                           ; 1 bytes @ 0x9
  1214  0079                     	ds	1
  1215  007A                     ?_fputs:	
  1216  007A                     Wrappers_I2CMaster_Read@DatatoSend:	
  1217                           ; 2 bytes @ 0xA
  1218                           
  1219  007A                     fputs@fp:	
  1220                           ; 1 bytes @ 0xA
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0xA
  1224  007A                     	ds	1
  1225  007B                     ??_fputs:	
  1226  007B                     ?_TC74_Read:	
  1227                           ; 1 bytes @ 0xB
  1228                           
  1229  007B                     TC74_Read@TC74_Register:	
  1230                           ; 1 bytes @ 0xB
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0xB
  1234  007B                     	ds	1
  1235  007C                     TC74_Read@amount:	
  1236                           
  1237                           ; 1 bytes @ 0xC
  1238  007C                     	ds	1
  1239  007D                     ??_TC74_Ready:	
  1240                           
  1241                           ; 1 bytes @ 0xD
  1242  007D                     	ds	1
  1243                           
  1244                           	psect	cstackBANK0
  1245  0020                     __pcstackBANK0:	
  1246  0020                     ??_TC74_Read:	
  1247  0020                     ?___aodiv:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0020                     ?___aomod:	
  1251                           ; 8 bytes @ 0x0
  1252                           
  1253  0020                     fputs@c:	
  1254                           ; 8 bytes @ 0x0
  1255                           
  1256  0020                     ___aodiv@divisor:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0020                     ___aomod@divisor:	
  1260                           ; 8 bytes @ 0x0
  1261                           
  1262                           
  1263                           ; 8 bytes @ 0x0
  1264  0020                     	ds	1
  1265  0021                     fputs@i:	
  1266                           
  1267                           ; 2 bytes @ 0x1
  1268  0021                     	ds	1
  1269  0022                     TC74_Read@buffer:	
  1270                           
  1271                           ; 2 bytes @ 0x2
  1272  0022                     	ds	1
  1273  0023                     fputs@s:	
  1274                           
  1275                           ; 1 bytes @ 0x3
  1276  0023                     	ds	1
  1277  0024                     ?_pad:	
  1278  0024                     TC74_Read@Obj:	
  1279                           ; 2 bytes @ 0x4
  1280                           
  1281  0024                     pad@buf:	
  1282                           ; 1 bytes @ 0x4
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x4
  1286  0024                     	ds	1
  1287  0025                     TC74_Ready@Obj:	
  1288  0025                     pad@p:	
  1289                           ; 1 bytes @ 0x5
  1290                           
  1291                           
  1292                           ; 2 bytes @ 0x5
  1293  0025                     	ds	1
  1294  0026                     TC74_Ready@Ready:	
  1295                           
  1296                           ; 1 bytes @ 0x6
  1297  0026                     	ds	1
  1298  0027                     ??_TC74_Temperature:	
  1299  0027                     ??_pad:	
  1300                           ; 1 bytes @ 0x7
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304  0027                     	ds	1
  1305  0028                     TC74_Temperature@Temperature:	
  1306  0028                     pad@i:	
  1307                           ; 1 bytes @ 0x8
  1308                           
  1309  0028                     ___aodiv@dividend:	
  1310                           ; 2 bytes @ 0x8
  1311                           
  1312  0028                     ___aomod@dividend:	
  1313                           ; 8 bytes @ 0x8
  1314                           
  1315                           
  1316                           ; 8 bytes @ 0x8
  1317  0028                     	ds	1
  1318  0029                     TC74_Temperature@Obj:	
  1319                           
  1320                           ; 1 bytes @ 0x9
  1321  0029                     	ds	1
  1322  002A                     TC74_Temperature@Digital_Temperature:	
  1323  002A                     pad@w:	
  1324                           ; 1 bytes @ 0xA
  1325                           
  1326                           
  1327                           ; 2 bytes @ 0xA
  1328  002A                     	ds	2
  1329  002C                     pad@fp:	
  1330                           
  1331                           ; 1 bytes @ 0xC
  1332  002C                     	ds	4
  1333  0030                     ?_dtoa:	
  1334  0030                     dtoa@d:	
  1335                           ; 2 bytes @ 0x10
  1336                           
  1337                           
  1338                           ; 8 bytes @ 0x10
  1339  0030                     	ds	8
  1340  0038                     ??_dtoa:	
  1341                           
  1342                           ; 1 bytes @ 0x18
  1343  0038                     	ds	3
  1344  003B                     _dtoa$646:	
  1345                           
  1346                           ; 2 bytes @ 0x1B
  1347  003B                     	ds	2
  1348  003D                     dtoa@p:	
  1349                           
  1350                           ; 2 bytes @ 0x1D
  1351  003D                     	ds	2
  1352  003F                     dtoa@fp:	
  1353                           
  1354                           ; 1 bytes @ 0x1F
  1355  003F                     	ds	1
  1356  0040                     dtoa@w:	
  1357                           
  1358                           ; 2 bytes @ 0x20
  1359  0040                     	ds	2
  1360  0042                     dtoa@s:	
  1361                           
  1362                           ; 2 bytes @ 0x22
  1363  0042                     	ds	2
  1364  0044                     dtoa@n:	
  1365                           
  1366                           ; 8 bytes @ 0x24
  1367  0044                     	ds	8
  1368  004C                     dtoa@i:	
  1369                           
  1370                           ; 2 bytes @ 0x2C
  1371  004C                     	ds	2
  1372  004E                     ?_vfpfcnvrt:	
  1373  004E                     vfpfcnvrt@fmt:	
  1374                           ; 2 bytes @ 0x2E
  1375                           
  1376                           
  1377                           ; 1 bytes @ 0x2E
  1378  004E                     	ds	1
  1379  004F                     vfpfcnvrt@ap:	
  1380                           
  1381                           ; 1 bytes @ 0x2F
  1382  004F                     	ds	1
  1383  0050                     ??_vfpfcnvrt:	
  1384                           
  1385                           ; 1 bytes @ 0x30
  1386  0050                     	ds	5
  1387  0055                     vfpfcnvrt@ll:	
  1388                           
  1389                           ; 8 bytes @ 0x35
  1390  0055                     	ds	8
  1391  005D                     vfpfcnvrt@fp:	
  1392                           
  1393                           ; 1 bytes @ 0x3D
  1394  005D                     	ds	1
  1395  005E                     ?_vfprintf:	
  1396  005E                     vfprintf@fmt:	
  1397                           ; 2 bytes @ 0x3E
  1398                           
  1399                           
  1400                           ; 2 bytes @ 0x3E
  1401  005E                     	ds	2
  1402  0060                     vfprintf@ap:	
  1403                           
  1404                           ; 1 bytes @ 0x40
  1405  0060                     	ds	1
  1406  0061                     ??_vfprintf:	
  1407                           
  1408                           ; 1 bytes @ 0x41
  1409  0061                     	ds	2
  1410  0063                     vfprintf@fp:	
  1411                           
  1412                           ; 1 bytes @ 0x43
  1413  0063                     	ds	1
  1414  0064                     vfprintf@cfmt:	
  1415                           
  1416                           ; 2 bytes @ 0x44
  1417  0064                     	ds	2
  1418  0066                     ?_printf:	
  1419  0066                     printf@fmt:	
  1420                           ; 2 bytes @ 0x46
  1421                           
  1422                           
  1423                           ; 2 bytes @ 0x46
  1424  0066                     	ds	4
  1425  006A                     ??_printf:	
  1426                           
  1427                           ; 1 bytes @ 0x4A
  1428  006A                     	ds	3
  1429  006D                     printf@ap:	
  1430                           
  1431                           ; 1 bytes @ 0x4D
  1432  006D                     	ds	1
  1433  006E                     ??_main:	
  1434                           
  1435                           ; 1 bytes @ 0x4E
  1436  006E                     	ds	2
  1437                           
  1438                           	psect	maintext
  1439  02EC                     __pmaintext:	
  1440 ;;
  1441 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1442 ;;
  1443 ;; *************** function _main *****************
  1444 ;; Defined at:
  1445 ;;		line 50 in file "newmain.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : B1F/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels required when called:    9
  1465 ;; This function calls:
  1466 ;;		_EUSART_Initialize
  1467 ;;		_I2C_Initialize
  1468 ;;		_OSCILLATOR_Initialize
  1469 ;;		_PIN_MANAGER_Initialize
  1470 ;;		_TC74_Initialize
  1471 ;;		_TC74_Temperature
  1472 ;;		_printf
  1473 ;; This function is called by:
  1474 ;;		Startup code after reset
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _main
  1480  02EC                     _main:	
  1481  02EC                     l1726:	
  1482                           ;incstack = 0
  1483                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1484                           
  1485                           
  1486                           ;newmain.c: 51:     OSCILLATOR_Initialize();
  1487  02EC  3181  2127  3182   	fcall	_OSCILLATOR_Initialize
  1488                           
  1489                           ;newmain.c: 52:     PIN_MANAGER_Initialize();
  1490  02EF  3181  21D7  3182   	fcall	_PIN_MANAGER_Initialize
  1491                           
  1492                           ;newmain.c: 53:     EUSART_Initialize();
  1493  02F2  3181  214C  3182   	fcall	_EUSART_Initialize
  1494                           
  1495                           ;newmain.c: 55:     I2C_Initialize();
  1496  02F5  3181  2141  3182   	fcall	_I2C_Initialize
  1497  02F8                     l1728:	
  1498                           
  1499                           ;newmain.c: 56:     TC74_Initialize(&TC74Data,ADDR_A5,Wrappers_I2CMaster_Write,Wrappers_
      +                          I2CMaster_Read);
  1500  02F8  304D               	movlw	77
  1501  02F9  0020               	movlb	0	; select bank0
  1502  02FA  00EE               	movwf	??_main
  1503  02FB  086E               	movf	??_main,w
  1504  02FC  00F0               	movwf	TC74_Initialize@AddrSlave
  1505  02FD  3000               	movlw	0
  1506  02FE  00F1               	movwf	TC74_Initialize@write_fcn
  1507  02FF  3000               	movlw	0
  1508  0300  00F2               	movwf	TC74_Initialize@write_fcn+1
  1509  0301  3063               	movlw	low _Wrappers_I2CMaster_Read
  1510  0302  00F3               	movwf	TC74_Initialize@read_fcn
  1511  0303  3002               	movlw	high _Wrappers_I2CMaster_Read
  1512  0304  00F4               	movwf	TC74_Initialize@read_fcn+1
  1513  0305  30C8               	movlw	(low (_TC74Data| 0))& (0+255)
  1514  0306  3181  218B  3182   	fcall	_TC74_Initialize
  1515  0309                     l1730:	
  1516                           
  1517                           ;newmain.c: 58:        _delay((unsigned long)((100)*(16000000/4000.0)));
  1518  0309  3003               	movlw	3
  1519  030A  0020               	movlb	0	; select bank0
  1520  030B  00EF               	movwf	??_main+1
  1521  030C  3008               	movlw	8
  1522  030D  00EE               	movwf	??_main
  1523  030E  3077               	movlw	119
  1524  030F                     u1337:	
  1525  030F  0B89               	decfsz	9,f
  1526  0310  2B0F               	goto	u1337
  1527  0311  0BEE               	decfsz	??_main,f
  1528  0312  2B0F               	goto	u1337
  1529  0313  0BEF               	decfsz	??_main+1,f
  1530  0314  2B0F               	goto	u1337
  1531  0315                     l1732:	
  1532                           
  1533                           ;newmain.c: 59:        printf("Temperature %d C\r\n", TC74_Temperature(&TC74Data));
  1534  0315  3000               	movlw	low (STR_1| (0+32768))
  1535  0316  0020               	movlb	0	; select bank0
  1536  0317  00E6               	movwf	printf@fmt
  1537  0318  3088               	movlw	high (STR_1| (0+32768))
  1538  0319  00E7               	movwf	printf@fmt+1
  1539  031A  30C8               	movlw	(low (_TC74Data| 0))& (0+255)
  1540  031B  3182  228E  3182   	fcall	_TC74_Temperature
  1541  031E  0020               	movlb	0	; select bank0
  1542  031F  00E8               	movwf	?_printf+2
  1543  0320  01E9               	clrf	?_printf+3
  1544  0321  1BE8               	btfsc	?_printf+2,7
  1545  0322  03E9               	decf	?_printf+3,f
  1546  0323  3181  2164  3182   	fcall	_printf
  1547  0326  2B09               	goto	l1730
  1548  0327  3180  2802         	ljmp	start
  1549  0329                     __end_of_main:	
  1550                           
  1551                           	psect	text1
  1552  0164                     __ptext1:	
  1553 ;; *************** function _printf *****************
  1554 ;; Defined at:
  1555 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1558 ;;		 -> STR_1(19), 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  ret             2    0        int 
  1561 ;;  ap              1   77[BANK0 ] PTR void [1]
  1562 ;;		 -> ?_printf(2), 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2   70[BANK0 ] int 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1573 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1574 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1575 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;Total ram usage:        8 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    8
  1579 ;; This function calls:
  1580 ;;		_vfprintf
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _printf
  1588  0164                     _printf:	
  1589  0164                     l1720:	
  1590                           ;incstack = 0
  1591                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1592                           
  1593  0164  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1594  0165  0020               	movlb	0	; select bank0
  1595  0166  00EA               	movwf	??_printf
  1596  0167  086A               	movf	??_printf,w
  1597  0168  00ED               	movwf	printf@ap
  1598  0169                     l1722:	
  1599  0169  0867               	movf	printf@fmt+1,w
  1600  016A  00DF               	movwf	vfprintf@fmt+1
  1601  016B  0866               	movf	printf@fmt,w
  1602  016C  00DE               	movwf	vfprintf@fmt
  1603  016D  306D               	movlw	(low (printf@ap| 0))& (0+255)
  1604  016E  00EA               	movwf	??_printf
  1605  016F  086A               	movf	??_printf,w
  1606  0170  00E0               	movwf	vfprintf@ap
  1607  0171  3000               	movlw	0
  1608  0172  3182  22BB  3181   	fcall	_vfprintf
  1609  0175                     l900:	
  1610  0175  0008               	return
  1611  0176                     __end_of_printf:	
  1612                           
  1613                           	psect	text2
  1614  02BB                     __ptext2:	
  1615 ;; *************** function _vfprintf *****************
  1616 ;; Defined at:
  1617 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  fp              1    wreg     PTR struct _IO_FILE
  1620 ;;		 -> NULL(0), 
  1621 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1622 ;;		 -> STR_1(19), 
  1623 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1624 ;;		 -> printf@ap(1), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1627 ;;		 -> NULL(0), 
  1628 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1629 ;;		 -> STR_1(19), 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  2   62[BANK0 ] int 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1639 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1643 ;;Total ram usage:        8 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    7
  1646 ;; This function calls:
  1647 ;;		_vfpfcnvrt
  1648 ;; This function is called by:
  1649 ;;		_printf
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _vfprintf
  1655  02BB                     _vfprintf:	
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1659                           ;vfprintf@fp stored from wreg
  1660  02BB  0020               	movlb	0	; select bank0
  1661  02BC  00E3               	movwf	vfprintf@fp
  1662  02BD                     l1656:	
  1663                           
  1664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1665  02BD  085F               	movf	vfprintf@fmt+1,w
  1666  02BE  00E5               	movwf	vfprintf@cfmt+1
  1667  02BF  085E               	movf	vfprintf@fmt,w
  1668  02C0  00E4               	movwf	vfprintf@cfmt
  1669  02C1                     l1658:	
  1670                           
  1671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1672  02C1  0021               	movlb	1	; select bank1
  1673  02C2  01A0               	clrf	_nout^(0+128)
  1674  02C3  01A1               	clrf	(_nout+1)^(0+128)
  1675                           
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1677  02C4  2AD9               	goto	l1662
  1678  02C5                     l1660:	
  1679                           
  1680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1681  02C5  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1682  02C6  00E1               	movwf	??_vfprintf
  1683  02C7  0861               	movf	??_vfprintf,w
  1684  02C8  00CE               	movwf	vfpfcnvrt@fmt
  1685  02C9  0860               	movf	vfprintf@ap,w
  1686  02CA  00E2               	movwf	??_vfprintf+1
  1687  02CB  0862               	movf	??_vfprintf+1,w
  1688  02CC  00CF               	movwf	vfpfcnvrt@ap
  1689  02CD  0863               	movf	vfprintf@fp,w
  1690  02CE  3183  23C1  3182   	fcall	_vfpfcnvrt
  1691  02D1  0020               	movlb	0	; select bank0
  1692  02D2  084E               	movf	?_vfpfcnvrt,w
  1693  02D3  0021               	movlb	1	; select bank1
  1694  02D4  07A0               	addwf	_nout^(0+128),f
  1695  02D5  0020               	movlb	0	; select bank0
  1696  02D6  084F               	movf	?_vfpfcnvrt+1,w
  1697  02D7  0021               	movlb	1	; select bank1
  1698  02D8  3DA1               	addwfc	(_nout+1)^(0+128),f
  1699  02D9                     l1662:	
  1700                           
  1701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1702  02D9  0020               	movlb	0	; select bank0
  1703  02DA  0864               	movf	vfprintf@cfmt,w
  1704  02DB  0084               	movwf	4
  1705  02DC  0865               	movf	vfprintf@cfmt+1,w
  1706  02DD  0085               	movwf	5
  1707  02DE  0012               	moviw fsr0++
  1708  02DF  1D03               	btfss	3,2
  1709  02E0  2AE2               	goto	u1291
  1710  02E1  2AE3               	goto	u1290
  1711  02E2                     u1291:	
  1712  02E2  2AC5               	goto	l1660
  1713  02E3                     u1290:	
  1714  02E3                     l1664:	
  1715                           
  1716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1717  02E3  0021               	movlb	1	; select bank1
  1718  02E4  0821               	movf	(_nout+1)^(0+128),w
  1719  02E5  0020               	movlb	0	; select bank0
  1720  02E6  00DF               	movwf	?_vfprintf+1
  1721  02E7  0021               	movlb	1	; select bank1
  1722  02E8  0820               	movf	_nout^(0+128),w
  1723  02E9  0020               	movlb	0	; select bank0
  1724  02EA  00DE               	movwf	?_vfprintf
  1725  02EB                     l412:	
  1726  02EB  0008               	return
  1727  02EC                     __end_of_vfprintf:	
  1728                           
  1729                           	psect	text3
  1730  03C1                     __ptext3:	
  1731 ;; *************** function _vfpfcnvrt *****************
  1732 ;; Defined at:
  1733 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  fp              1    wreg     PTR struct _IO_FILE
  1736 ;;		 -> NULL(0), 
  1737 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1738 ;;		 -> vfprintf@cfmt(2), 
  1739 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1740 ;;		 -> printf@ap(1), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1743 ;;		 -> NULL(0), 
  1744 ;;  ll              8   53[BANK0 ] long long 
  1745 ;;  llu             8    0        unsigned long long 
  1746 ;;  f               4    0        unsigned long long 
  1747 ;;  ct              3    0        unsigned char [3]
  1748 ;;  vp              2    0        PTR void 
  1749 ;;  i               2    0        int 
  1750 ;;  done            2    0        int 
  1751 ;;  cp              2    0        PTR unsigned char 
  1752 ;;  c               1    0        unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  2   46[BANK0 ] int 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;Total ram usage:       16 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    6
  1769 ;; This function calls:
  1770 ;;		_dtoa
  1771 ;;		_fputc
  1772 ;; This function is called by:
  1773 ;;		_vfprintf
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _vfpfcnvrt
  1779  03C1                     _vfpfcnvrt:	
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1783                           ;vfpfcnvrt@fp stored from wreg
  1784  03C1  0020               	movlb	0	; select bank0
  1785  03C2  00DD               	movwf	vfpfcnvrt@fp
  1786  03C3                     l1604:	
  1787                           
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1789  03C3  084E               	movf	vfpfcnvrt@fmt,w
  1790  03C4  0086               	movwf	6
  1791  03C5  0187               	clrf	7
  1792  03C6  3F40               	moviw [0]fsr1
  1793  03C7  00D0               	movwf	??_vfpfcnvrt
  1794  03C8  3F41               	moviw [1]fsr1
  1795  03C9  00D1               	movwf	??_vfpfcnvrt+1
  1796  03CA  0850               	movf	??_vfpfcnvrt,w
  1797  03CB  0084               	movwf	4
  1798  03CC  0851               	movf	??_vfpfcnvrt+1,w
  1799  03CD  0085               	movwf	5
  1800  03CE  0012               	moviw fsr0++
  1801  03CF  3A25               	xorlw	37
  1802  03D0  1D03               	btfss	3,2
  1803  03D1  2BD3               	goto	u1231
  1804  03D2  2BD4               	goto	u1230
  1805  03D3                     u1231:	
  1806  03D3  2C78               	goto	l1640
  1807  03D4                     u1230:	
  1808  03D4                     l1606:	
  1809                           
  1810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1811  03D4  084E               	movf	vfpfcnvrt@fmt,w
  1812  03D5  0086               	movwf	6
  1813  03D6  0187               	clrf	7
  1814  03D7  3001               	movlw	1
  1815  03D8  0781               	addwf	1,f
  1816  03D9  3141               	addfsr 1,1
  1817  03DA  1803               	skipnc
  1818  03DB  0A81               	incf	1,f
  1819  03DC                     l1608:	
  1820                           
  1821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1822  03DC  0021               	movlb	1	; select bank1
  1823  03DD  01A2               	clrf	_width^(0+128)
  1824  03DE  01A3               	clrf	(_width+1)^(0+128)
  1825  03DF  01A6               	clrf	_flags^(0+128)
  1826  03E0  01A7               	clrf	(_flags+1)^(0+128)
  1827  03E1                     l1610:	
  1828                           
  1829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1830  03E1  30FF               	movlw	255
  1831  03E2  00A4               	movwf	_prec^(0+128)
  1832  03E3  30FF               	movlw	255
  1833  03E4  00A5               	movwf	(_prec^(0+128)+1)
  1834  03E5                     l1612:	
  1835                           
  1836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1837  03E5  0020               	movlb	0	; select bank0
  1838  03E6  084E               	movf	vfpfcnvrt@fmt,w
  1839  03E7  0086               	movwf	6
  1840  03E8  0187               	clrf	7
  1841  03E9  3F40               	moviw [0]fsr1
  1842  03EA  00D0               	movwf	??_vfpfcnvrt
  1843  03EB  3F41               	moviw [1]fsr1
  1844  03EC  00D1               	movwf	??_vfpfcnvrt+1
  1845  03ED  0850               	movf	??_vfpfcnvrt,w
  1846  03EE  0084               	movwf	4
  1847  03EF  0851               	movf	??_vfpfcnvrt+1,w
  1848  03F0  0085               	movwf	5
  1849  03F1  0012               	moviw fsr0++
  1850  03F2  3A64               	xorlw	100
  1851  03F3  1903               	btfsc	3,2
  1852  03F4  2BF6               	goto	u1241
  1853  03F5  2BF7               	goto	u1240
  1854  03F6                     u1241:	
  1855  03F6  2C08               	goto	l1616
  1856  03F7                     u1240:	
  1857  03F7                     l1614:	
  1858  03F7  084E               	movf	vfpfcnvrt@fmt,w
  1859  03F8  0086               	movwf	6
  1860  03F9  0187               	clrf	7
  1861  03FA  3F40               	moviw [0]fsr1
  1862  03FB  00D0               	movwf	??_vfpfcnvrt
  1863  03FC  3F41               	moviw [1]fsr1
  1864  03FD  00D1               	movwf	??_vfpfcnvrt+1
  1865  03FE  0850               	movf	??_vfpfcnvrt,w
  1866  03FF  0084               	movwf	4
  1867  0400  0851               	movf	??_vfpfcnvrt+1,w
  1868  0401  0085               	movwf	5
  1869  0402  0012               	moviw fsr0++
  1870  0403  3A69               	xorlw	105
  1871  0404  1D03               	btfss	3,2
  1872  0405  2C07               	goto	u1251
  1873  0406  2C08               	goto	u1250
  1874  0407                     u1251:	
  1875  0407  2C43               	goto	l1624
  1876  0408                     u1250:	
  1877  0408                     l1616:	
  1878                           
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1880  0408  084E               	movf	vfpfcnvrt@fmt,w
  1881  0409  0086               	movwf	6
  1882  040A  0187               	clrf	7
  1883  040B  3001               	movlw	1
  1884  040C  0781               	addwf	1,f
  1885  040D  3141               	addfsr 1,1
  1886  040E  1803               	skipnc
  1887  040F  0A81               	incf	1,f
  1888  0410                     l1618:	
  1889                           
  1890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1891  0410  084F               	movf	vfpfcnvrt@ap,w
  1892  0411  0086               	movwf	6
  1893  0412  0187               	clrf	7
  1894  0413  0801               	movf	1,w
  1895  0414  0084               	movwf	4
  1896  0415  0185               	clrf	5
  1897  0416  3002               	movlw	2
  1898  0417  0781               	addwf	1,f
  1899  0418  3F00               	moviw [0]fsr0
  1900  0419  00D0               	movwf	??_vfpfcnvrt
  1901  041A  3F01               	moviw [1]fsr0
  1902  041B  00D1               	movwf	??_vfpfcnvrt+1
  1903  041C  0850               	movf	??_vfpfcnvrt,w
  1904  041D  00D5               	movwf	vfpfcnvrt@ll
  1905  041E  0851               	movf	??_vfpfcnvrt+1,w
  1906  041F  00D6               	movwf	vfpfcnvrt@ll+1
  1907  0420  0D89               	rlf	9,f
  1908  0421  3B89               	subwfb	9,f
  1909  0422  0989               	comf	9,f
  1910  0423  00D7               	movwf	vfpfcnvrt@ll+2
  1911  0424  00D8               	movwf	vfpfcnvrt@ll+3
  1912  0425  00D9               	movwf	vfpfcnvrt@ll+4
  1913  0426  00DA               	movwf	vfpfcnvrt@ll+5
  1914  0427  00DB               	movwf	vfpfcnvrt@ll+6
  1915  0428  00DC               	movwf	vfpfcnvrt@ll+7
  1916  0429                     l1620:	
  1917                           
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1919  0429  0855               	movf	vfpfcnvrt@ll,w
  1920  042A  00B0               	movwf	dtoa@d
  1921  042B  0856               	movf	vfpfcnvrt@ll+1,w
  1922  042C  00B1               	movwf	dtoa@d+1
  1923  042D  0857               	movf	vfpfcnvrt@ll+2,w
  1924  042E  00B2               	movwf	dtoa@d+2
  1925  042F  0858               	movf	vfpfcnvrt@ll+3,w
  1926  0430  00B3               	movwf	dtoa@d+3
  1927  0431  0859               	movf	vfpfcnvrt@ll+4,w
  1928  0432  00B4               	movwf	dtoa@d+4
  1929  0433  085A               	movf	vfpfcnvrt@ll+5,w
  1930  0434  00B5               	movwf	dtoa@d+5
  1931  0435  085B               	movf	vfpfcnvrt@ll+6,w
  1932  0436  00B6               	movwf	dtoa@d+6
  1933  0437  085C               	movf	vfpfcnvrt@ll+7,w
  1934  0438  00B7               	movwf	dtoa@d+7
  1935  0439  085D               	movf	vfpfcnvrt@fp,w
  1936  043A  3186  2687  3183   	fcall	_dtoa
  1937  043D  0020               	movlb	0	; select bank0
  1938  043E  0831               	movf	?_dtoa+1,w
  1939  043F  00CF               	movwf	?_vfpfcnvrt+1
  1940  0440  0830               	movf	?_dtoa,w
  1941  0441  00CE               	movwf	?_vfpfcnvrt
  1942  0442  2C9B               	goto	l405
  1943  0443                     l1624:	
  1944                           
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1946  0443  084E               	movf	vfpfcnvrt@fmt,w
  1947  0444  0086               	movwf	6
  1948  0445  0187               	clrf	7
  1949  0446  3F40               	moviw [0]fsr1
  1950  0447  00D0               	movwf	??_vfpfcnvrt
  1951  0448  3F41               	moviw [1]fsr1
  1952  0449  00D1               	movwf	??_vfpfcnvrt+1
  1953  044A  0850               	movf	??_vfpfcnvrt,w
  1954  044B  0084               	movwf	4
  1955  044C  0851               	movf	??_vfpfcnvrt+1,w
  1956  044D  0085               	movwf	5
  1957  044E  0012               	moviw fsr0++
  1958  044F  3A25               	xorlw	37
  1959  0450  1D03               	btfss	3,2
  1960  0451  2C53               	goto	u1261
  1961  0452  2C54               	goto	u1260
  1962  0453                     u1261:	
  1963  0453  2C6D               	goto	l1634
  1964  0454                     u1260:	
  1965  0454                     l1626:	
  1966                           
  1967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1968  0454  084E               	movf	vfpfcnvrt@fmt,w
  1969  0455  0086               	movwf	6
  1970  0456  0187               	clrf	7
  1971  0457  3001               	movlw	1
  1972  0458  0781               	addwf	1,f
  1973  0459  3141               	addfsr 1,1
  1974  045A  1803               	skipnc
  1975  045B  0A81               	incf	1,f
  1976  045C                     l1628:	
  1977                           
  1978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1979  045C  3025               	movlw	37
  1980  045D  00F2               	movwf	fputc@c
  1981  045E  3000               	movlw	0
  1982  045F  00F3               	movwf	fputc@c+1
  1983  0460  085D               	movf	vfpfcnvrt@fp,w
  1984  0461  00D0               	movwf	??_vfpfcnvrt
  1985  0462  0850               	movf	??_vfpfcnvrt,w
  1986  0463  00F4               	movwf	fputc@fp
  1987  0464  3183  2329  3183   	fcall	_fputc
  1988  0467                     l1630:	
  1989                           
  1990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1991  0467  3001               	movlw	1
  1992  0468  0020               	movlb	0	; select bank0
  1993  0469  00CE               	movwf	?_vfpfcnvrt
  1994  046A  3000               	movlw	0
  1995  046B  00CF               	movwf	?_vfpfcnvrt+1
  1996  046C  2C9B               	goto	l405
  1997  046D                     l1634:	
  1998                           
  1999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2000  046D  084E               	movf	vfpfcnvrt@fmt,w
  2001  046E  0086               	movwf	6
  2002  046F  0187               	clrf	7
  2003  0470  3001               	movlw	1
  2004  0471  0781               	addwf	1,f
  2005  0472  3141               	addfsr 1,1
  2006  0473  1803               	skipnc
  2007  0474  0A81               	incf	1,f
  2008  0475                     l1636:	
  2009                           
  2010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2011  0475  01CE               	clrf	?_vfpfcnvrt
  2012  0476  01CF               	clrf	?_vfpfcnvrt+1
  2013  0477  2C9B               	goto	l405
  2014  0478                     l1640:	
  2015                           
  2016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2017  0478  084E               	movf	vfpfcnvrt@fmt,w
  2018  0479  0086               	movwf	6
  2019  047A  0187               	clrf	7
  2020  047B  3F40               	moviw [0]fsr1
  2021  047C  00D0               	movwf	??_vfpfcnvrt
  2022  047D  3F41               	moviw [1]fsr1
  2023  047E  00D1               	movwf	??_vfpfcnvrt+1
  2024  047F  0850               	movf	??_vfpfcnvrt,w
  2025  0480  0084               	movwf	4
  2026  0481  0851               	movf	??_vfpfcnvrt+1,w
  2027  0482  0085               	movwf	5
  2028  0483  0800               	movf	0,w	;code access
  2029  0484  00D2               	movwf	??_vfpfcnvrt+2
  2030  0485  01D3               	clrf	??_vfpfcnvrt+3
  2031  0486  0852               	movf	??_vfpfcnvrt+2,w
  2032  0487  00F2               	movwf	fputc@c
  2033  0488  0853               	movf	??_vfpfcnvrt+3,w
  2034  0489  00F3               	movwf	fputc@c+1
  2035  048A  085D               	movf	vfpfcnvrt@fp,w
  2036  048B  00D4               	movwf	??_vfpfcnvrt+4
  2037  048C  0854               	movf	??_vfpfcnvrt+4,w
  2038  048D  00F4               	movwf	fputc@fp
  2039  048E  3183  2329  3183   	fcall	_fputc
  2040  0491                     l1642:	
  2041                           
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2043  0491  0020               	movlb	0	; select bank0
  2044  0492  084E               	movf	vfpfcnvrt@fmt,w
  2045  0493  0086               	movwf	6
  2046  0494  0187               	clrf	7
  2047  0495  3001               	movlw	1
  2048  0496  0781               	addwf	1,f
  2049  0497  3141               	addfsr 1,1
  2050  0498  1803               	skipnc
  2051  0499  0A81               	incf	1,f
  2052  049A  2C67               	goto	l1630
  2053  049B                     l405:	
  2054  049B  0008               	return
  2055  049C                     __end_of_vfpfcnvrt:	
  2056                           
  2057                           	psect	text4
  2058  0687                     __ptext4:	
  2059 ;; *************** function _dtoa *****************
  2060 ;; Defined at:
  2061 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  fp              1    wreg     PTR struct _IO_FILE
  2064 ;;		 -> NULL(0), 
  2065 ;;  d               8   16[BANK0 ] long long 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  2068 ;;		 -> NULL(0), 
  2069 ;;  n               8   36[BANK0 ] long long 
  2070 ;;  i               2   44[BANK0 ] int 
  2071 ;;  s               2   34[BANK0 ] int 
  2072 ;;  w               2   32[BANK0 ] int 
  2073 ;;  p               2   29[BANK0 ] int 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  2   16[BANK0 ] int 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2083 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;Total ram usage:       30 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    5
  2090 ;; This function calls:
  2091 ;;		___aodiv
  2092 ;;		___aomod
  2093 ;;		_abs
  2094 ;;		_pad
  2095 ;; This function is called by:
  2096 ;;		_vfpfcnvrt
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _dtoa
  2102  0687                     _dtoa:	
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2106                           ;dtoa@fp stored from wreg
  2107  0687  0020               	movlb	0	; select bank0
  2108  0688  00BF               	movwf	dtoa@fp
  2109  0689                     l1536:	
  2110                           
  2111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2112  0689  0830               	movf	dtoa@d,w
  2113  068A  00C4               	movwf	dtoa@n
  2114  068B  0831               	movf	dtoa@d+1,w
  2115  068C  00C5               	movwf	dtoa@n+1
  2116  068D  0832               	movf	dtoa@d+2,w
  2117  068E  00C6               	movwf	dtoa@n+2
  2118  068F  0833               	movf	dtoa@d+3,w
  2119  0690  00C7               	movwf	dtoa@n+3
  2120  0691  0834               	movf	dtoa@d+4,w
  2121  0692  00C8               	movwf	dtoa@n+4
  2122  0693  0835               	movf	dtoa@d+5,w
  2123  0694  00C9               	movwf	dtoa@n+5
  2124  0695  0836               	movf	dtoa@d+6,w
  2125  0696  00CA               	movwf	dtoa@n+6
  2126  0697  0837               	movf	dtoa@d+7,w
  2127  0698  00CB               	movwf	dtoa@n+7
  2128  0699                     l1538:	
  2129                           
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2131  0699  3044               	movlw	low dtoa@n
  2132  069A  0086               	movwf	6
  2133  069B  3000               	movlw	high dtoa@n
  2134  069C  0087               	movwf	7
  2135  069D  3F47               	moviw [7]fsr1
  2136  069E  00B8               	movwf	??_dtoa
  2137  069F  1BB8               	btfsc	??_dtoa,7
  2138  06A0  2EA2               	goto	u1061
  2139  06A1  2EA4               	goto	u1060
  2140  06A2                     u1061:	
  2141  06A2  3001               	movlw	1
  2142  06A3  2EA5               	goto	u1070
  2143  06A4                     u1060:	
  2144  06A4  3000               	movlw	0
  2145  06A5                     u1070:	
  2146  06A5  0020               	movlb	0	; select bank0
  2147  06A6  00B9               	movwf	??_dtoa+1
  2148  06A7  01BA               	clrf	??_dtoa+2
  2149  06A8  0839               	movf	??_dtoa+1,w
  2150  06A9  00C2               	movwf	dtoa@s
  2151  06AA  083A               	movf	??_dtoa+2,w
  2152  06AB  00C3               	movwf	dtoa@s+1
  2153  06AC                     l1540:	
  2154                           
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2156  06AC  0842               	movf	dtoa@s,w
  2157  06AD  0443               	iorwf	dtoa@s+1,w
  2158  06AE  1903               	btfsc	3,2
  2159  06AF  2EB1               	goto	u1081
  2160  06B0  2EB2               	goto	u1080
  2161  06B1                     u1081:	
  2162  06B1  2ED0               	goto	l375
  2163  06B2                     u1080:	
  2164  06B2                     l1542:	
  2165                           
  2166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2167  06B2  09C4               	comf	dtoa@n,f
  2168  06B3  09C5               	comf	dtoa@n+1,f
  2169  06B4  09C6               	comf	dtoa@n+2,f
  2170  06B5  09C7               	comf	dtoa@n+3,f
  2171  06B6  09C8               	comf	dtoa@n+4,f
  2172  06B7  09C9               	comf	dtoa@n+5,f
  2173  06B8  09CA               	comf	dtoa@n+6,f
  2174  06B9  09CB               	comf	dtoa@n+7,f
  2175  06BA  0AC4               	incf	dtoa@n,f
  2176  06BB  1D03               	skipz
  2177  06BC  2ED0               	goto	u109lld
  2178  06BD  0AC5               	incf	dtoa@n+1,f
  2179  06BE  1D03               	skipz
  2180  06BF  2ED0               	goto	u109lld
  2181  06C0  0AC6               	incf	dtoa@n+2,f
  2182  06C1  1D03               	skipz
  2183  06C2  2ED0               	goto	u109lld
  2184  06C3  0AC7               	incf	dtoa@n+3,f
  2185  06C4  1D03               	skipz
  2186  06C5  2ED0               	goto	u109lld
  2187  06C6  0AC8               	incf	dtoa@n+4,f
  2188  06C7  1D03               	skipz
  2189  06C8  2ED0               	goto	u109lld
  2190  06C9  0AC9               	incf	dtoa@n+5,f
  2191  06CA  1D03               	skipz
  2192  06CB  2ED0               	goto	u109lld
  2193  06CC  0ACA               	incf	dtoa@n+6,f
  2194  06CD  1D03               	skipz
  2195  06CE  2ED0               	goto	u109lld
  2196  06CF  0ACB               	incf	dtoa@n+7,f
  2197  06D0                     u109lld:	
  2198  06D0                     l375:	
  2199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
  2200                           
  2201                           
  2202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2203  06D0  0021               	movlb	1	; select bank1
  2204  06D1  1BA5               	btfsc	(_prec+1)^(0+128),7
  2205  06D2  2ED4               	goto	u1101
  2206  06D3  2ED5               	goto	u1100
  2207  06D4                     u1101:	
  2208  06D4  2ED9               	goto	l376
  2209  06D5                     u1100:	
  2210  06D5                     l1544:	
  2211                           
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2213  06D5  30FD               	movlw	253
  2214  06D6  05A6               	andwf	_flags^(0+128),f
  2215  06D7  30FF               	movlw	255
  2216  06D8  05A7               	andwf	(_flags+1)^(0+128),f
  2217  06D9                     l376:	
  2218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
  2219                           
  2220                           
  2221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2222  06D9  0825               	movf	(_prec+1)^(0+128),w
  2223  06DA  3A80               	xorlw	128
  2224  06DB  0020               	movlb	0	; select bank0
  2225  06DC  00B8               	movwf	??_dtoa
  2226  06DD  3080               	movlw	128
  2227  06DE  0238               	subwf	??_dtoa,w
  2228  06DF  1D03               	skipz
  2229  06E0  2EE4               	goto	u1115
  2230  06E1  3001               	movlw	1
  2231  06E2  0021               	movlb	1	; select bank1
  2232  06E3  0224               	subwf	_prec^(0+128),w
  2233  06E4                     u1115:	
  2234  06E4  1803               	skipnc
  2235  06E5  2EE7               	goto	u1111
  2236  06E6  2EE8               	goto	u1110
  2237  06E7                     u1111:	
  2238  06E7  2EEE               	goto	l1548
  2239  06E8                     u1110:	
  2240  06E8                     l1546:	
  2241  06E8  3001               	movlw	1
  2242  06E9  0020               	movlb	0	; select bank0
  2243  06EA  00BD               	movwf	dtoa@p
  2244  06EB  3000               	movlw	0
  2245  06EC  00BE               	movwf	dtoa@p+1
  2246  06ED  2EF6               	goto	l380
  2247  06EE                     l1548:	
  2248  06EE  0021               	movlb	1	; select bank1
  2249  06EF  0825               	movf	(_prec+1)^(0+128),w
  2250  06F0  0020               	movlb	0	; select bank0
  2251  06F1  00BE               	movwf	dtoa@p+1
  2252  06F2  0021               	movlb	1	; select bank1
  2253  06F3  0824               	movf	_prec^(0+128),w
  2254  06F4  0020               	movlb	0	; select bank0
  2255  06F5  00BD               	movwf	dtoa@p
  2256  06F6                     l380:	
  2257                           
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2259  06F6  0021               	movlb	1	; select bank1
  2260  06F7  0823               	movf	(_width+1)^(0+128),w
  2261  06F8  0020               	movlb	0	; select bank0
  2262  06F9  00C1               	movwf	dtoa@w+1
  2263  06FA  0021               	movlb	1	; select bank1
  2264  06FB  0822               	movf	_width^(0+128),w
  2265  06FC  0020               	movlb	0	; select bank0
  2266  06FD  00C0               	movwf	dtoa@w
  2267  06FE                     l1550:	
  2268                           
  2269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2270  06FE  0842               	movf	dtoa@s,w
  2271  06FF  0443               	iorwf	dtoa@s+1,w
  2272  0700  1D03               	btfss	3,2
  2273  0701  2F03               	goto	u1121
  2274  0702  2F04               	goto	u1120
  2275  0703                     u1121:	
  2276  0703  2F09               	goto	l1554
  2277  0704                     u1120:	
  2278  0704                     l1552:	
  2279  0704  0021               	movlb	1	; select bank1
  2280  0705  1D26               	btfss	_flags^(0+128),2
  2281  0706  2F08               	goto	u1131
  2282  0707  2F09               	goto	u1130
  2283  0708                     u1131:	
  2284  0708  2F0E               	goto	l381
  2285  0709                     u1130:	
  2286  0709                     l1554:	
  2287                           
  2288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2289  0709  30FF               	movlw	255
  2290  070A  0020               	movlb	0	; select bank0
  2291  070B  07C0               	addwf	dtoa@w,f
  2292  070C  30FF               	movlw	255
  2293  070D  3DC1               	addwfc	dtoa@w+1,f
  2294  070E                     l381:	
  2295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
  2296                           
  2297                           
  2298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2299  070E  301F               	movlw	31
  2300  070F  0020               	movlb	0	; select bank0
  2301  0710  00CC               	movwf	dtoa@i
  2302  0711  3000               	movlw	0
  2303  0712  00CD               	movwf	dtoa@i+1
  2304  0713                     l1556:	
  2305                           
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2307  0713  0021               	movlb	1	; select bank1
  2308  0714  01C7               	clrf	(_dbuf^(0+128)+31)
  2309                           
  2310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2311  0715  2F7E               	goto	l384
  2312  0716                     l1558:	
  2313                           
  2314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2315  0716  30FF               	movlw	255
  2316  0717  0020               	movlb	0	; select bank0
  2317  0718  07CC               	addwf	dtoa@i,f
  2318  0719  30FF               	movlw	255
  2319  071A  3DCD               	addwfc	dtoa@i+1,f
  2320  071B                     l1560:	
  2321                           
  2322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2323  071B  300A               	movlw	10
  2324  071C  00A0               	movwf	___aomod@divisor
  2325  071D  01A1               	clrf	___aomod@divisor+1
  2326  071E  01A2               	clrf	___aomod@divisor+2
  2327  071F  01A3               	clrf	___aomod@divisor+3
  2328  0720  01A4               	clrf	___aomod@divisor+4
  2329  0721  01A5               	clrf	___aomod@divisor+5
  2330  0722  01A6               	clrf	___aomod@divisor+6
  2331  0723  01A7               	clrf	___aomod@divisor+7
  2332  0724  0844               	movf	dtoa@n,w
  2333  0725  00A8               	movwf	___aomod@dividend
  2334  0726  0845               	movf	dtoa@n+1,w
  2335  0727  00A9               	movwf	___aomod@dividend+1
  2336  0728  0846               	movf	dtoa@n+2,w
  2337  0729  00AA               	movwf	___aomod@dividend+2
  2338  072A  0847               	movf	dtoa@n+3,w
  2339  072B  00AB               	movwf	___aomod@dividend+3
  2340  072C  0848               	movf	dtoa@n+4,w
  2341  072D  00AC               	movwf	___aomod@dividend+4
  2342  072E  0849               	movf	dtoa@n+5,w
  2343  072F  00AD               	movwf	___aomod@dividend+5
  2344  0730  084A               	movf	dtoa@n+6,w
  2345  0731  00AE               	movwf	___aomod@dividend+6
  2346  0732  084B               	movf	dtoa@n+7,w
  2347  0733  00AF               	movwf	___aomod@dividend+7
  2348  0734  3184  249C  3186   	fcall	___aomod
  2349  0737  0020               	movlb	0	; select bank0
  2350  0738  0821               	movf	?___aomod+1,w
  2351  0739  00F4               	movwf	abs@a+1
  2352  073A  0820               	movf	?___aomod,w
  2353  073B  00F3               	movwf	abs@a
  2354  073C  3181  21BD  3186   	fcall	_abs
  2355  073F  0873               	movf	?_abs,w
  2356  0740  3E30               	addlw	48
  2357  0741  0020               	movlb	0	; select bank0
  2358  0742  00B8               	movwf	??_dtoa
  2359  0743  084C               	movf	dtoa@i,w
  2360  0744  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2361  0745  0086               	movwf	6
  2362  0746  0187               	clrf	7
  2363  0747  0838               	movf	??_dtoa,w
  2364  0748  0081               	movwf	1
  2365  0749                     l1562:	
  2366                           
  2367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2368  0749  30FF               	movlw	255
  2369  074A  07BD               	addwf	dtoa@p,f
  2370  074B  30FF               	movlw	255
  2371  074C  3DBE               	addwfc	dtoa@p+1,f
  2372  074D                     l1564:	
  2373                           
  2374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2375  074D  30FF               	movlw	255
  2376  074E  07C0               	addwf	dtoa@w,f
  2377  074F  30FF               	movlw	255
  2378  0750  3DC1               	addwfc	dtoa@w+1,f
  2379  0751                     l1566:	
  2380                           
  2381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2382  0751  300A               	movlw	10
  2383  0752  00A0               	movwf	___aodiv@divisor
  2384  0753  01A1               	clrf	___aodiv@divisor+1
  2385  0754  01A2               	clrf	___aodiv@divisor+2
  2386  0755  01A3               	clrf	___aodiv@divisor+3
  2387  0756  01A4               	clrf	___aodiv@divisor+4
  2388  0757  01A5               	clrf	___aodiv@divisor+5
  2389  0758  01A6               	clrf	___aodiv@divisor+6
  2390  0759  01A7               	clrf	___aodiv@divisor+7
  2391  075A  0844               	movf	dtoa@n,w
  2392  075B  00A8               	movwf	___aodiv@dividend
  2393  075C  0845               	movf	dtoa@n+1,w
  2394  075D  00A9               	movwf	___aodiv@dividend+1
  2395  075E  0846               	movf	dtoa@n+2,w
  2396  075F  00AA               	movwf	___aodiv@dividend+2
  2397  0760  0847               	movf	dtoa@n+3,w
  2398  0761  00AB               	movwf	___aodiv@dividend+3
  2399  0762  0848               	movf	dtoa@n+4,w
  2400  0763  00AC               	movwf	___aodiv@dividend+4
  2401  0764  0849               	movf	dtoa@n+5,w
  2402  0765  00AD               	movwf	___aodiv@dividend+5
  2403  0766  084A               	movf	dtoa@n+6,w
  2404  0767  00AE               	movwf	___aodiv@dividend+6
  2405  0768  084B               	movf	dtoa@n+7,w
  2406  0769  00AF               	movwf	___aodiv@dividend+7
  2407  076A  3185  2586  3186   	fcall	___aodiv
  2408  076D  0020               	movlb	0	; select bank0
  2409  076E  0820               	movf	?___aodiv,w
  2410  076F  00C4               	movwf	dtoa@n
  2411  0770  0821               	movf	?___aodiv+1,w
  2412  0771  00C5               	movwf	dtoa@n+1
  2413  0772  0822               	movf	?___aodiv+2,w
  2414  0773  00C6               	movwf	dtoa@n+2
  2415  0774  0823               	movf	?___aodiv+3,w
  2416  0775  00C7               	movwf	dtoa@n+3
  2417  0776  0824               	movf	?___aodiv+4,w
  2418  0777  00C8               	movwf	dtoa@n+4
  2419  0778  0825               	movf	?___aodiv+5,w
  2420  0779  00C9               	movwf	dtoa@n+5
  2421  077A  0826               	movf	?___aodiv+6,w
  2422  077B  00CA               	movwf	dtoa@n+6
  2423  077C  0827               	movf	?___aodiv+7,w
  2424  077D  00CB               	movwf	dtoa@n+7
  2425  077E                     l384:	
  2426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
  2427                           
  2428                           
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2430  077E  0020               	movlb	0	; select bank0
  2431  077F  084D               	movf	dtoa@i+1,w
  2432  0780  3A80               	xorlw	128
  2433  0781  00B8               	movwf	??_dtoa
  2434  0782  3080               	movlw	128
  2435  0783  0238               	subwf	??_dtoa,w
  2436  0784  1D03               	skipz
  2437  0785  2F88               	goto	u1145
  2438  0786  3001               	movlw	1
  2439  0787  024C               	subwf	dtoa@i,w
  2440  0788                     u1145:	
  2441  0788  1C03               	skipc
  2442  0789  2F8B               	goto	u1141
  2443  078A  2F8C               	goto	u1140
  2444  078B                     u1141:	
  2445  078B  2FB9               	goto	l1576
  2446  078C                     u1140:	
  2447  078C                     l1568:	
  2448  078C  0020               	movlb	0	; select bank0
  2449  078D  0844               	movf	dtoa@n,w
  2450  078E  0445               	iorwf	dtoa@n+1,w
  2451  078F  0446               	iorwf	dtoa@n+2,w
  2452  0790  0447               	iorwf	dtoa@n+3,w
  2453  0791  0448               	iorwf	dtoa@n+4,w
  2454  0792  0449               	iorwf	dtoa@n+5,w
  2455  0793  044A               	iorwf	dtoa@n+6,w
  2456  0794  044B               	iorwf	dtoa@n+7,w
  2457  0795  1D03               	skipz
  2458  0796  2F98               	goto	u1151
  2459  0797  2F99               	goto	u1150
  2460  0798                     u1151:	
  2461  0798  2F16               	goto	l1558
  2462  0799                     u1150:	
  2463  0799                     l1570:	
  2464  0799  083E               	movf	dtoa@p+1,w
  2465  079A  3A80               	xorlw	128
  2466  079B  00B8               	movwf	??_dtoa
  2467  079C  3080               	movlw	128
  2468  079D  0238               	subwf	??_dtoa,w
  2469  079E  1D03               	skipz
  2470  079F  2FA2               	goto	u1165
  2471  07A0  3001               	movlw	1
  2472  07A1  023D               	subwf	dtoa@p,w
  2473  07A2                     u1165:	
  2474  07A2  1803               	skipnc
  2475  07A3  2FA5               	goto	u1161
  2476  07A4  2FA6               	goto	u1160
  2477  07A5                     u1161:	
  2478  07A5  2F16               	goto	l1558
  2479  07A6                     u1160:	
  2480  07A6                     l1572:	
  2481  07A6  0020               	movlb	0	; select bank0
  2482  07A7  0841               	movf	dtoa@w+1,w
  2483  07A8  3A80               	xorlw	128
  2484  07A9  00B8               	movwf	??_dtoa
  2485  07AA  3080               	movlw	128
  2486  07AB  0238               	subwf	??_dtoa,w
  2487  07AC  1D03               	skipz
  2488  07AD  2FB0               	goto	u1175
  2489  07AE  3001               	movlw	1
  2490  07AF  0240               	subwf	dtoa@w,w
  2491  07B0                     u1175:	
  2492  07B0  1C03               	skipc
  2493  07B1  2FB3               	goto	u1171
  2494  07B2  2FB4               	goto	u1170
  2495  07B3                     u1171:	
  2496  07B3  2FB9               	goto	l1576
  2497  07B4                     u1170:	
  2498  07B4                     l1574:	
  2499  07B4  0021               	movlb	1	; select bank1
  2500  07B5  18A6               	btfsc	_flags^(0+128),1
  2501  07B6  2FB8               	goto	u1181
  2502  07B7  2FB9               	goto	u1180
  2503  07B8                     u1181:	
  2504  07B8  2F16               	goto	l1558
  2505  07B9                     u1180:	
  2506  07B9                     l1576:	
  2507                           
  2508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2509  07B9  0020               	movlb	0	; select bank0
  2510  07BA  0842               	movf	dtoa@s,w
  2511  07BB  0443               	iorwf	dtoa@s+1,w
  2512  07BC  1D03               	btfss	3,2
  2513  07BD  2FBF               	goto	u1191
  2514  07BE  2FC0               	goto	u1190
  2515  07BF                     u1191:	
  2516  07BF  2FC5               	goto	l1580
  2517  07C0                     u1190:	
  2518  07C0                     l1578:	
  2519  07C0  0021               	movlb	1	; select bank1
  2520  07C1  1D26               	btfss	_flags^(0+128),2
  2521  07C2  2FC4               	goto	u1201
  2522  07C3  2FC5               	goto	u1200
  2523  07C4                     u1201:	
  2524  07C4  2FE1               	goto	l1590
  2525  07C5                     u1200:	
  2526  07C5                     l1580:	
  2527                           
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2529  07C5  30FF               	movlw	255
  2530  07C6  0020               	movlb	0	; select bank0
  2531  07C7  07CC               	addwf	dtoa@i,f
  2532  07C8  30FF               	movlw	255
  2533  07C9  3DCD               	addwfc	dtoa@i+1,f
  2534  07CA                     l1582:	
  2535                           
  2536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2537  07CA  0842               	movf	dtoa@s,w
  2538  07CB  0443               	iorwf	dtoa@s+1,w
  2539  07CC  1D03               	btfss	3,2
  2540  07CD  2FCF               	goto	u1211
  2541  07CE  2FD0               	goto	u1210
  2542  07CF                     u1211:	
  2543  07CF  2FD5               	goto	l1586
  2544  07D0                     u1210:	
  2545  07D0                     l1584:	
  2546  07D0  302B               	movlw	43
  2547  07D1  00BB               	movwf	_dtoa$646
  2548  07D2  3000               	movlw	0
  2549  07D3  00BC               	movwf	_dtoa$646+1
  2550  07D4  2FD9               	goto	l1588
  2551  07D5                     l1586:	
  2552  07D5  302D               	movlw	45
  2553  07D6  00BB               	movwf	_dtoa$646
  2554  07D7  3000               	movlw	0
  2555  07D8  00BC               	movwf	_dtoa$646+1
  2556  07D9                     l1588:	
  2557  07D9  083B               	movf	_dtoa$646,w
  2558  07DA  00B8               	movwf	??_dtoa
  2559  07DB  084C               	movf	dtoa@i,w
  2560  07DC  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2561  07DD  0086               	movwf	6
  2562  07DE  0187               	clrf	7
  2563  07DF  0838               	movf	??_dtoa,w
  2564  07E0  0081               	movwf	1
  2565  07E1                     l1590:	
  2566                           
  2567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2568  07E1  0020               	movlb	0	; select bank0
  2569  07E2  084C               	movf	dtoa@i,w
  2570  07E3  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2571  07E4  00B8               	movwf	??_dtoa
  2572  07E5  0838               	movf	??_dtoa,w
  2573  07E6  00A4               	movwf	pad@buf
  2574  07E7  0841               	movf	dtoa@w+1,w
  2575  07E8  00A6               	movwf	pad@p+1
  2576  07E9  0840               	movf	dtoa@w,w
  2577  07EA  00A5               	movwf	pad@p
  2578  07EB  083F               	movf	dtoa@fp,w
  2579  07EC  3183  2368  3186   	fcall	_pad
  2580  07EF  0020               	movlb	0	; select bank0
  2581  07F0  0825               	movf	?_pad+1,w
  2582  07F1  00B1               	movwf	?_dtoa+1
  2583  07F2  0824               	movf	?_pad,w
  2584  07F3  00B0               	movwf	?_dtoa
  2585  07F4                     l398:	
  2586  07F4  0008               	return
  2587  07F5                     __end_of_dtoa:	
  2588                           
  2589                           	psect	text5
  2590  0368                     __ptext5:	
  2591 ;; *************** function _pad *****************
  2592 ;; Defined at:
  2593 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  fp              1    wreg     PTR struct _IO_FILE
  2596 ;;		 -> NULL(0), 
  2597 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2598 ;;		 -> dbuf(32), 
  2599 ;;  p               2    5[BANK0 ] int 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  2602 ;;		 -> NULL(0), 
  2603 ;;  w               2   10[BANK0 ] int 
  2604 ;;  i               2    8[BANK0 ] int 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  2    4[BANK0 ] int 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2614 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2615 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2616 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2617 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2618 ;;Total ram usage:        9 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    4
  2621 ;; This function calls:
  2622 ;;		_fputc
  2623 ;;		_fputs
  2624 ;;		_strlen
  2625 ;; This function is called by:
  2626 ;;		_dtoa
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _pad
  2632  0368                     _pad:	
  2633                           
  2634                           ;incstack = 0
  2635                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2636                           ;pad@fp stored from wreg
  2637  0368  0020               	movlb	0	; select bank0
  2638  0369  00AC               	movwf	pad@fp
  2639  036A                     l1428:	
  2640                           
  2641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2642  036A  0021               	movlb	1	; select bank1
  2643  036B  1C26               	btfss	_flags^(0+128),0
  2644  036C  2B6E               	goto	u801
  2645  036D  2B6F               	goto	u800
  2646  036E                     u801:	
  2647  036E  2B78               	goto	l1432
  2648  036F                     u800:	
  2649  036F                     l1430:	
  2650                           
  2651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2652  036F  0020               	movlb	0	; select bank0
  2653  0370  082C               	movf	pad@fp,w
  2654  0371  00A7               	movwf	??_pad
  2655  0372  0827               	movf	??_pad,w
  2656  0373  00FA               	movwf	fputs@fp
  2657  0374  0824               	movf	pad@buf,w
  2658  0375  3182  2212  3183   	fcall	_fputs
  2659  0378                     l1432:	
  2660                           
  2661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2662  0378  0020               	movlb	0	; select bank0
  2663  0379  1BA6               	btfsc	pad@p+1,7
  2664  037A  2B7C               	goto	u811
  2665  037B  2B7D               	goto	u810
  2666  037C                     u811:	
  2667  037C  2B82               	goto	l1436
  2668  037D                     u810:	
  2669  037D                     l1434:	
  2670  037D  0826               	movf	pad@p+1,w
  2671  037E  00AB               	movwf	pad@w+1
  2672  037F  0825               	movf	pad@p,w
  2673  0380  00AA               	movwf	pad@w
  2674  0381  2B84               	goto	l367
  2675  0382                     l1436:	
  2676  0382  01AA               	clrf	pad@w
  2677  0383  01AB               	clrf	pad@w+1
  2678  0384                     l367:	
  2679                           
  2680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2681  0384  01A8               	clrf	pad@i
  2682  0385  01A9               	clrf	pad@i+1
  2683                           
  2684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2685  0386  2B98               	goto	l1442
  2686  0387                     l1438:	
  2687                           
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2689  0387  3020               	movlw	32
  2690  0388  00F2               	movwf	fputc@c
  2691  0389  3000               	movlw	0
  2692  038A  00F3               	movwf	fputc@c+1
  2693  038B  0020               	movlb	0	; select bank0
  2694  038C  082C               	movf	pad@fp,w
  2695  038D  00A7               	movwf	??_pad
  2696  038E  0827               	movf	??_pad,w
  2697  038F  00F4               	movwf	fputc@fp
  2698  0390  3183  2329  3183   	fcall	_fputc
  2699  0393                     l1440:	
  2700                           
  2701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2702  0393  3001               	movlw	1
  2703  0394  0020               	movlb	0	; select bank0
  2704  0395  07A8               	addwf	pad@i,f
  2705  0396  3000               	movlw	0
  2706  0397  3DA9               	addwfc	pad@i+1,f
  2707  0398                     l1442:	
  2708                           
  2709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2710  0398  0829               	movf	pad@i+1,w
  2711  0399  3A80               	xorlw	128
  2712  039A  00A7               	movwf	??_pad
  2713  039B  082B               	movf	pad@w+1,w
  2714  039C  3A80               	xorlw	128
  2715  039D  0227               	subwf	??_pad,w
  2716  039E  1D03               	skipz
  2717  039F  2BA2               	goto	u825
  2718  03A0  082A               	movf	pad@w,w
  2719  03A1  0228               	subwf	pad@i,w
  2720  03A2                     u825:	
  2721  03A2  1C03               	skipc
  2722  03A3  2BA5               	goto	u821
  2723  03A4  2BA6               	goto	u820
  2724  03A5                     u821:	
  2725  03A5  2B87               	goto	l1438
  2726  03A6                     u820:	
  2727  03A6                     l370:	
  2728                           
  2729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2730  03A6  0021               	movlb	1	; select bank1
  2731  03A7  1826               	btfsc	_flags^(0+128),0
  2732  03A8  2BAA               	goto	u831
  2733  03A9  2BAB               	goto	u830
  2734  03AA                     u831:	
  2735  03AA  2BB4               	goto	l371
  2736  03AB                     u830:	
  2737  03AB                     l1444:	
  2738                           
  2739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2740  03AB  0020               	movlb	0	; select bank0
  2741  03AC  082C               	movf	pad@fp,w
  2742  03AD  00A7               	movwf	??_pad
  2743  03AE  0827               	movf	??_pad,w
  2744  03AF  00FA               	movwf	fputs@fp
  2745  03B0  0824               	movf	pad@buf,w
  2746  03B1  3182  2212  3183   	fcall	_fputs
  2747  03B4                     l371:	
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 92:     }
  2749                           
  2750                           
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2752  03B4  0020               	movlb	0	; select bank0
  2753  03B5  0824               	movf	pad@buf,w
  2754  03B6  3181  21A4  3183   	fcall	_strlen
  2755  03B9  0020               	movlb	0	; select bank0
  2756  03BA  082A               	movf	pad@w,w
  2757  03BB  0770               	addwf	?_strlen,w
  2758  03BC  00A4               	movwf	?_pad
  2759  03BD  082B               	movf	pad@w+1,w
  2760  03BE  3D71               	addwfc	?_strlen+1,w
  2761  03BF  00A5               	movwf	?_pad+1
  2762  03C0                     l372:	
  2763  03C0  0008               	return
  2764  03C1                     __end_of_pad:	
  2765                           
  2766                           	psect	text6
  2767  01A4                     __ptext6:	
  2768 ;; *************** function _strlen *****************
  2769 ;; Defined at:
  2770 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  s               1    wreg     PTR const unsigned char 
  2773 ;;		 -> dbuf(32), 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  s               1    4[COMMON] PTR const unsigned char 
  2776 ;;		 -> dbuf(32), 
  2777 ;;  a               1    3[COMMON] PTR const unsigned char 
  2778 ;;		 -> dbuf(32), 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  2    0[COMMON] unsigned int 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;Total ram usage:        5 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_pad
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _strlen
  2803  01A4                     _strlen:	
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2807                           ;strlen@s stored from wreg
  2808  01A4  00F4               	movwf	strlen@s
  2809  01A5                     l1382:	
  2810  01A5  0874               	movf	strlen@s,w
  2811  01A6  00F2               	movwf	??_strlen
  2812  01A7  0872               	movf	??_strlen,w
  2813  01A8  00F3               	movwf	strlen@a
  2814  01A9  29AE               	goto	l1386
  2815  01AA                     l1384:	
  2816  01AA  3001               	movlw	1
  2817  01AB  00F2               	movwf	??_strlen
  2818  01AC  0872               	movf	??_strlen,w
  2819  01AD  07F4               	addwf	strlen@s,f
  2820  01AE                     l1386:	
  2821  01AE  0874               	movf	strlen@s,w
  2822  01AF  0086               	movwf	6
  2823  01B0  0187               	clrf	7
  2824  01B1  0801               	movf	1,w
  2825  01B2  1D03               	btfss	3,2
  2826  01B3  29B5               	goto	u771
  2827  01B4  29B6               	goto	u770
  2828  01B5                     u771:	
  2829  01B5  29AA               	goto	l1384
  2830  01B6                     u770:	
  2831  01B6                     l1388:	
  2832  01B6  0873               	movf	strlen@a,w
  2833  01B7  0274               	subwf	strlen@s,w
  2834  01B8  00F0               	movwf	?_strlen
  2835  01B9  01F1               	clrf	?_strlen+1
  2836  01BA  1BF0               	btfsc	?_strlen,7
  2837  01BB  03F1               	decf	?_strlen+1,f
  2838  01BC                     l906:	
  2839  01BC  0008               	return
  2840  01BD                     __end_of_strlen:	
  2841                           
  2842                           	psect	text7
  2843  0212                     __ptext7:	
  2844 ;; *************** function _fputs *****************
  2845 ;; Defined at:
  2846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  s               1    wreg     PTR const unsigned char 
  2849 ;;		 -> dbuf(32), 
  2850 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  2851 ;;		 -> NULL(0), 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2854 ;;		 -> dbuf(32), 
  2855 ;;  i               2    1[BANK0 ] int 
  2856 ;;  c               1    0[BANK0 ] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  2   10[COMMON] int 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;Total ram usage:        8 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    3
  2873 ;; This function calls:
  2874 ;;		_fputc
  2875 ;; This function is called by:
  2876 ;;		_pad
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           
  2881                           ;psect for function _fputs
  2882  0212                     _fputs:	
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2886                           ;fputs@s stored from wreg
  2887  0212  0020               	movlb	0	; select bank0
  2888  0213  00A3               	movwf	fputs@s
  2889  0214                     l1374:	
  2890  0214  01A1               	clrf	fputs@i
  2891  0215  01A2               	clrf	fputs@i+1
  2892  0216  2A2A               	goto	l1380
  2893  0217                     l1376:	
  2894  0217  0820               	movf	fputs@c,w
  2895  0218  00FB               	movwf	??_fputs
  2896  0219  01FC               	clrf	??_fputs+1
  2897  021A  087B               	movf	??_fputs,w
  2898  021B  00F2               	movwf	fputc@c
  2899  021C  087C               	movf	??_fputs+1,w
  2900  021D  00F3               	movwf	fputc@c+1
  2901  021E  087A               	movf	fputs@fp,w
  2902  021F  00FD               	movwf	??_fputs+2
  2903  0220  087D               	movf	??_fputs+2,w
  2904  0221  00F4               	movwf	fputc@fp
  2905  0222  3183  2329  3182   	fcall	_fputc
  2906  0225                     l1378:	
  2907  0225  3001               	movlw	1
  2908  0226  0020               	movlb	0	; select bank0
  2909  0227  07A1               	addwf	fputs@i,f
  2910  0228  3000               	movlw	0
  2911  0229  3DA2               	addwfc	fputs@i+1,f
  2912  022A                     l1380:	
  2913  022A  0821               	movf	fputs@i,w
  2914  022B  0723               	addwf	fputs@s,w
  2915  022C  00FB               	movwf	??_fputs
  2916  022D  087B               	movf	??_fputs,w
  2917  022E  0086               	movwf	6
  2918  022F  0187               	clrf	7
  2919  0230  0801               	movf	1,w
  2920  0231  00FC               	movwf	??_fputs+1
  2921  0232  087C               	movf	??_fputs+1,w
  2922  0233  00A0               	movwf	fputs@c
  2923  0234  0820               	movf	fputs@c,w
  2924  0235  1D03               	btfss	3,2
  2925  0236  2A38               	goto	u761
  2926  0237  2A39               	goto	u760
  2927  0238                     u761:	
  2928  0238  2A17               	goto	l1376
  2929  0239                     u760:	
  2930  0239                     l893:	
  2931  0239  0008               	return
  2932  023A                     __end_of_fputs:	
  2933                           
  2934                           	psect	text8
  2935  0329                     __ptext8:	
  2936 ;; *************** function _fputc *****************
  2937 ;; Defined at:
  2938 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  c               2    2[COMMON] int 
  2941 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  2942 ;;		 -> NULL(0), 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    2[COMMON] int 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2954 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;Total ram usage:        8 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    2
  2961 ;; This function calls:
  2962 ;;		_putch
  2963 ;; This function is called by:
  2964 ;;		_pad
  2965 ;;		_vfpfcnvrt
  2966 ;;		_fputs
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _fputc
  2972  0329                     _fputc:	
  2973  0329                     l1356:	
  2974                           ;incstack = 0
  2975                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2976                           
  2977  0329  0874               	movf	fputc@fp,w
  2978  032A  1903               	btfsc	3,2
  2979  032B  2B2D               	goto	u721
  2980  032C  2B2E               	goto	u720
  2981  032D                     u721:	
  2982  032D  2B33               	goto	l1360
  2983  032E                     u720:	
  2984  032E                     l1358:	
  2985  032E  0874               	movf	fputc@fp,w
  2986  032F  1D03               	btfss	3,2
  2987  0330  2B32               	goto	u731
  2988  0331  2B33               	goto	u730
  2989  0332                     u731:	
  2990  0332  2B38               	goto	l1362
  2991  0333                     u730:	
  2992  0333                     l1360:	
  2993  0333  0872               	movf	fputc@c,w
  2994  0334  3181  211B  3183   	fcall	_putch
  2995  0337  2B67               	goto	l885
  2996  0338                     l1362:	
  2997  0338  0874               	movf	fputc@fp,w
  2998  0339  3E03               	addlw	3
  2999  033A  0086               	movwf	6
  3000  033B  0187               	clrf	7
  3001  033C  0016               	moviw fsr1++
  3002  033D  0401               	iorwf	1,w
  3003  033E  1903               	btfsc	3,2
  3004  033F  2B41               	goto	u741
  3005  0340  2B42               	goto	u740
  3006  0341                     u741:	
  3007  0341  2B5F               	goto	l1366
  3008  0342                     u740:	
  3009  0342                     l1364:	
  3010  0342  0874               	movf	fputc@fp,w
  3011  0343  3E03               	addlw	3
  3012  0344  0086               	movwf	6
  3013  0345  0187               	clrf	7
  3014  0346  3F40               	moviw [0]fsr1
  3015  0347  00F5               	movwf	??_fputc
  3016  0348  3F41               	moviw [1]fsr1
  3017  0349  00F6               	movwf	??_fputc+1
  3018  034A  0A74               	incf	fputc@fp,w
  3019  034B  0086               	movwf	6
  3020  034C  0187               	clrf	7
  3021  034D  3F40               	moviw [0]fsr1
  3022  034E  00F7               	movwf	??_fputc+2
  3023  034F  3F41               	moviw [1]fsr1
  3024  0350  00F8               	movwf	??_fputc+3
  3025  0351  0878               	movf	??_fputc+3,w
  3026  0352  3A80               	xorlw	128
  3027  0353  00F9               	movwf	??_fputc+4
  3028  0354  0876               	movf	??_fputc+1,w
  3029  0355  3A80               	xorlw	128
  3030  0356  0279               	subwf	??_fputc+4,w
  3031  0357  1D03               	skipz
  3032  0358  2B5B               	goto	u755
  3033  0359  0875               	movf	??_fputc,w
  3034  035A  0277               	subwf	??_fputc+2,w
  3035  035B                     u755:	
  3036  035B  1803               	skipnc
  3037  035C  2B5E               	goto	u751
  3038  035D  2B5F               	goto	u750
  3039  035E                     u751:	
  3040  035E  2B67               	goto	l885
  3041  035F                     u750:	
  3042  035F                     l1366:	
  3043  035F  0A74               	incf	fputc@fp,w
  3044  0360  0086               	movwf	6
  3045  0361  0187               	clrf	7
  3046  0362  3001               	movlw	1
  3047  0363  0781               	addwf	1,f
  3048  0364  3141               	addfsr 1,1
  3049  0365  1803               	skipnc
  3050  0366  0A81               	incf	1,f
  3051  0367                     l885:	
  3052  0367  0008               	return
  3053  0368                     __end_of_fputc:	
  3054                           
  3055                           	psect	text9
  3056  011B                     __ptext9:	
  3057 ;; *************** function _putch *****************
  3058 ;; Defined at:
  3059 ;;		line 34 in file "uart.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  txData          1    wreg     unsigned char 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  txData          1    1[COMMON] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;Total ram usage:        1 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    1
  3080 ;; This function calls:
  3081 ;;		_EUSART_Write
  3082 ;; This function is called by:
  3083 ;;		_fputc
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _putch
  3089  011B                     _putch:	
  3090                           
  3091                           ;incstack = 0
  3092                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3093                           ;putch@txData stored from wreg
  3094  011B  00F1               	movwf	putch@txData
  3095  011C                     l1350:	
  3096                           
  3097                           ;uart.c: 34: void putch(char txData);uart.c: 35: {;uart.c: 36:     EUSART_Write(txData);
  3098  011C  0871               	movf	putch@txData,w
  3099  011D  3181  2137  3181   	fcall	_EUSART_Write
  3100  0120                     l147:	
  3101  0120  0008               	return
  3102  0121                     __end_of_putch:	
  3103                           
  3104                           	psect	text10
  3105  0137                     __ptext10:	
  3106 ;; *************** function _EUSART_Write *****************
  3107 ;; Defined at:
  3108 ;;		line 24 in file "uart.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  txData          1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  txData          1    0[COMMON] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;Total ram usage:        1 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_putch
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _EUSART_Write
  3137  0137                     _EUSART_Write:	
  3138                           
  3139                           ;incstack = 0
  3140                           ; Regs used in _EUSART_Write: [wreg]
  3141                           ;EUSART_Write@txData stored from wreg
  3142  0137  00F0               	movwf	EUSART_Write@txData
  3143  0138                     l1346:	
  3144  0138                     l141:	
  3145                           ;uart.c: 27:     {;uart.c: 28:     }
  3146                           
  3147                           
  3148                           ;uart.c: 26:     while(0 == PIR1bits.TXIF)
  3149  0138  0020               	movlb	0	; select bank0
  3150  0139  1E11               	btfss	17,4	;volatile
  3151  013A  293C               	goto	u691
  3152  013B  293D               	goto	u690
  3153  013C                     u691:	
  3154  013C  2938               	goto	l141
  3155  013D                     u690:	
  3156  013D                     l1348:	
  3157                           
  3158                           ;uart.c: 30:     TXREG = txData;
  3159  013D  0870               	movf	EUSART_Write@txData,w
  3160  013E  0023               	movlb	3	; select bank3
  3161  013F  009A               	movwf	26	;volatile
  3162  0140                     l144:	
  3163  0140  0008               	return
  3164  0141                     __end_of_EUSART_Write:	
  3165                           
  3166                           	psect	text11
  3167  01BD                     __ptext11:	
  3168 ;; *************** function _abs *****************
  3169 ;; Defined at:
  3170 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  a               2    3[COMMON] int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2    3[COMMON] int 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;Total ram usage:        4 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_dtoa
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _abs
  3199  01BD                     _abs:	
  3200  01BD                     l1448:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _abs: [wreg+status,2+status,0]
  3203                           
  3204  01BD  0874               	movf	abs@a+1,w
  3205  01BE  3A80               	xorlw	128
  3206  01BF  00F5               	movwf	??_abs
  3207  01C0  3080               	movlw	128
  3208  01C1  0275               	subwf	??_abs,w
  3209  01C2  1D03               	skipz
  3210  01C3  29C6               	goto	u845
  3211  01C4  3001               	movlw	1
  3212  01C5  0273               	subwf	abs@a,w
  3213  01C6                     u845:	
  3214  01C6  1803               	skipnc
  3215  01C7  29C9               	goto	u841
  3216  01C8  29CA               	goto	u840
  3217  01C9                     u841:	
  3218  01C9  29D6               	goto	l870
  3219  01CA                     u840:	
  3220  01CA                     l1450:	
  3221  01CA  0973               	comf	abs@a,w
  3222  01CB  00F5               	movwf	??_abs
  3223  01CC  0974               	comf	abs@a+1,w
  3224  01CD  00F6               	movwf	??_abs+1
  3225  01CE  0AF5               	incf	??_abs,f
  3226  01CF  1903               	skipnz
  3227  01D0  0AF6               	incf	??_abs+1,f
  3228  01D1  0875               	movf	??_abs,w
  3229  01D2  00F3               	movwf	?_abs
  3230  01D3  0876               	movf	??_abs+1,w
  3231  01D4  00F4               	movwf	?_abs+1
  3232  01D5  29D6               	goto	l873
  3233  01D6                     l870:	
  3234  01D6                     l873:	
  3235  01D6  0008               	return
  3236  01D7                     __end_of_abs:	
  3237                           
  3238                           	psect	text12
  3239  049C                     __ptext12:	
  3240 ;; *************** function ___aomod *****************
  3241 ;; Defined at:
  3242 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  divisor         8    0[BANK0 ] long long 
  3245 ;;  dividend        8    8[BANK0 ] long long 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  sign            1    2[COMMON] unsigned char 
  3248 ;;  counter         1    1[COMMON] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  8    0[BANK0 ] long long 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3258 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;Total ram usage:       19 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_dtoa
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           
  3272                           ;psect for function ___aomod
  3273  049C                     ___aomod:	
  3274  049C                     l1490:	
  3275                           ;incstack = 0
  3276                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3277                           
  3278  049C  01F2               	clrf	___aomod@sign
  3279  049D                     l1492:	
  3280  049D  3028               	movlw	low ___aomod@dividend
  3281  049E  0086               	movwf	6
  3282  049F  3000               	movlw	high ___aomod@dividend
  3283  04A0  0087               	movwf	7
  3284  04A1  3F47               	moviw [7]fsr1
  3285  04A2  00F0               	movwf	??___aomod
  3286  04A3  1FF0               	btfss	??___aomod,7
  3287  04A4  2CA6               	goto	u961
  3288  04A5  2CA7               	goto	u960
  3289  04A6                     u961:	
  3290  04A6  2CC8               	goto	l1496
  3291  04A7                     u960:	
  3292  04A7                     l1494:	
  3293  04A7  0020               	movlb	0	; select bank0
  3294  04A8  09A8               	comf	___aomod@dividend,f
  3295  04A9  09A9               	comf	___aomod@dividend+1,f
  3296  04AA  09AA               	comf	___aomod@dividend+2,f
  3297  04AB  09AB               	comf	___aomod@dividend+3,f
  3298  04AC  09AC               	comf	___aomod@dividend+4,f
  3299  04AD  09AD               	comf	___aomod@dividend+5,f
  3300  04AE  09AE               	comf	___aomod@dividend+6,f
  3301  04AF  09AF               	comf	___aomod@dividend+7,f
  3302  04B0  0AA8               	incf	___aomod@dividend,f
  3303  04B1  1D03               	skipz
  3304  04B2  2CC6               	goto	u97lld
  3305  04B3  0AA9               	incf	___aomod@dividend+1,f
  3306  04B4  1D03               	skipz
  3307  04B5  2CC6               	goto	u97lld
  3308  04B6  0AAA               	incf	___aomod@dividend+2,f
  3309  04B7  1D03               	skipz
  3310  04B8  2CC6               	goto	u97lld
  3311  04B9  0AAB               	incf	___aomod@dividend+3,f
  3312  04BA  1D03               	skipz
  3313  04BB  2CC6               	goto	u97lld
  3314  04BC  0AAC               	incf	___aomod@dividend+4,f
  3315  04BD  1D03               	skipz
  3316  04BE  2CC6               	goto	u97lld
  3317  04BF  0AAD               	incf	___aomod@dividend+5,f
  3318  04C0  1D03               	skipz
  3319  04C1  2CC6               	goto	u97lld
  3320  04C2  0AAE               	incf	___aomod@dividend+6,f
  3321  04C3  1D03               	skipz
  3322  04C4  2CC6               	goto	u97lld
  3323  04C5  0AAF               	incf	___aomod@dividend+7,f
  3324  04C6                     u97lld:	
  3325  04C6  01F2               	clrf	___aomod@sign
  3326  04C7  0AF2               	incf	___aomod@sign,f
  3327  04C8                     l1496:	
  3328  04C8  3020               	movlw	low ___aomod@divisor
  3329  04C9  0086               	movwf	6
  3330  04CA  3000               	movlw	high ___aomod@divisor
  3331  04CB  0087               	movwf	7
  3332  04CC  3F47               	moviw [7]fsr1
  3333  04CD  00F0               	movwf	??___aomod
  3334  04CE  1FF0               	btfss	??___aomod,7
  3335  04CF  2CD1               	goto	u981
  3336  04D0  2CD2               	goto	u980
  3337  04D1                     u981:	
  3338  04D1  2CF1               	goto	l1500
  3339  04D2                     u980:	
  3340  04D2                     l1498:	
  3341  04D2  0020               	movlb	0	; select bank0
  3342  04D3  09A0               	comf	___aomod@divisor,f
  3343  04D4  09A1               	comf	___aomod@divisor+1,f
  3344  04D5  09A2               	comf	___aomod@divisor+2,f
  3345  04D6  09A3               	comf	___aomod@divisor+3,f
  3346  04D7  09A4               	comf	___aomod@divisor+4,f
  3347  04D8  09A5               	comf	___aomod@divisor+5,f
  3348  04D9  09A6               	comf	___aomod@divisor+6,f
  3349  04DA  09A7               	comf	___aomod@divisor+7,f
  3350  04DB  0AA0               	incf	___aomod@divisor,f
  3351  04DC  1D03               	skipz
  3352  04DD  2CF1               	goto	u99lld
  3353  04DE  0AA1               	incf	___aomod@divisor+1,f
  3354  04DF  1D03               	skipz
  3355  04E0  2CF1               	goto	u99lld
  3356  04E1  0AA2               	incf	___aomod@divisor+2,f
  3357  04E2  1D03               	skipz
  3358  04E3  2CF1               	goto	u99lld
  3359  04E4  0AA3               	incf	___aomod@divisor+3,f
  3360  04E5  1D03               	skipz
  3361  04E6  2CF1               	goto	u99lld
  3362  04E7  0AA4               	incf	___aomod@divisor+4,f
  3363  04E8  1D03               	skipz
  3364  04E9  2CF1               	goto	u99lld
  3365  04EA  0AA5               	incf	___aomod@divisor+5,f
  3366  04EB  1D03               	skipz
  3367  04EC  2CF1               	goto	u99lld
  3368  04ED  0AA6               	incf	___aomod@divisor+6,f
  3369  04EE  1D03               	skipz
  3370  04EF  2CF1               	goto	u99lld
  3371  04F0  0AA7               	incf	___aomod@divisor+7,f
  3372  04F1                     u99lld:	
  3373  04F1                     l1500:	
  3374  04F1  0020               	movlb	0	; select bank0
  3375  04F2  0820               	movf	___aomod@divisor,w
  3376  04F3  0421               	iorwf	___aomod@divisor+1,w
  3377  04F4  0422               	iorwf	___aomod@divisor+2,w
  3378  04F5  0423               	iorwf	___aomod@divisor+3,w
  3379  04F6  0424               	iorwf	___aomod@divisor+4,w
  3380  04F7  0425               	iorwf	___aomod@divisor+5,w
  3381  04F8  0426               	iorwf	___aomod@divisor+6,w
  3382  04F9  0427               	iorwf	___aomod@divisor+7,w
  3383  04FA  1903               	skipnz
  3384  04FB  2CFD               	goto	u1001
  3385  04FC  2CFE               	goto	u1000
  3386  04FD                     u1001:	
  3387  04FD  2D51               	goto	l1516
  3388  04FE                     u1000:	
  3389  04FE                     l1502:	
  3390  04FE  01F1               	clrf	___aomod@counter
  3391  04FF  0AF1               	incf	___aomod@counter,f
  3392  0500  2D0D               	goto	l1508
  3393  0501                     l1504:	
  3394  0501  35A0               	lslf	___aomod@divisor,f
  3395  0502  0DA1               	rlf	___aomod@divisor+1,f
  3396  0503  0DA2               	rlf	___aomod@divisor+2,f
  3397  0504  0DA3               	rlf	___aomod@divisor+3,f
  3398  0505  0DA4               	rlf	___aomod@divisor+4,f
  3399  0506  0DA5               	rlf	___aomod@divisor+5,f
  3400  0507  0DA6               	rlf	___aomod@divisor+6,f
  3401  0508  0DA7               	rlf	___aomod@divisor+7,f
  3402  0509                     l1506:	
  3403  0509  3001               	movlw	1
  3404  050A  00F0               	movwf	??___aomod
  3405  050B  0870               	movf	??___aomod,w
  3406  050C  07F1               	addwf	___aomod@counter,f
  3407  050D                     l1508:	
  3408  050D  1FA7               	btfss	___aomod@divisor+7,7
  3409  050E  2D10               	goto	u1011
  3410  050F  2D11               	goto	u1010
  3411  0510                     u1011:	
  3412  0510  2D01               	goto	l1504
  3413  0511                     u1010:	
  3414  0511                     l1510:	
  3415  0511  0827               	movf	___aomod@divisor+7,w
  3416  0512  022F               	subwf	___aomod@dividend+7,w
  3417  0513  1D03               	skipz
  3418  0514  2D2F               	goto	u1025
  3419  0515  0826               	movf	___aomod@divisor+6,w
  3420  0516  022E               	subwf	___aomod@dividend+6,w
  3421  0517  1D03               	skipz
  3422  0518  2D2F               	goto	u1025
  3423  0519  0825               	movf	___aomod@divisor+5,w
  3424  051A  022D               	subwf	___aomod@dividend+5,w
  3425  051B  1D03               	skipz
  3426  051C  2D2F               	goto	u1025
  3427  051D  0824               	movf	___aomod@divisor+4,w
  3428  051E  022C               	subwf	___aomod@dividend+4,w
  3429  051F  1D03               	skipz
  3430  0520  2D2F               	goto	u1025
  3431  0521  0823               	movf	___aomod@divisor+3,w
  3432  0522  022B               	subwf	___aomod@dividend+3,w
  3433  0523  1D03               	skipz
  3434  0524  2D2F               	goto	u1025
  3435  0525  0822               	movf	___aomod@divisor+2,w
  3436  0526  022A               	subwf	___aomod@dividend+2,w
  3437  0527  1D03               	skipz
  3438  0528  2D2F               	goto	u1025
  3439  0529  0821               	movf	___aomod@divisor+1,w
  3440  052A  0229               	subwf	___aomod@dividend+1,w
  3441  052B  1D03               	skipz
  3442  052C  2D2F               	goto	u1025
  3443  052D  0820               	movf	___aomod@divisor,w
  3444  052E  0228               	subwf	___aomod@dividend,w
  3445  052F                     u1025:	
  3446  052F  1C03               	skipc
  3447  0530  2D32               	goto	u1021
  3448  0531  2D33               	goto	u1020
  3449  0532                     u1021:	
  3450  0532  2D43               	goto	l1514
  3451  0533                     u1020:	
  3452  0533                     l1512:	
  3453  0533  0820               	movf	___aomod@divisor,w
  3454  0534  02A8               	subwf	___aomod@dividend,f
  3455  0535  0821               	movf	___aomod@divisor+1,w
  3456  0536  3BA9               	subwfb	___aomod@dividend+1,f
  3457  0537  0822               	movf	___aomod@divisor+2,w
  3458  0538  3BAA               	subwfb	___aomod@dividend+2,f
  3459  0539  0823               	movf	___aomod@divisor+3,w
  3460  053A  3BAB               	subwfb	___aomod@dividend+3,f
  3461  053B  0824               	movf	___aomod@divisor+4,w
  3462  053C  3BAC               	subwfb	___aomod@dividend+4,f
  3463  053D  0825               	movf	___aomod@divisor+5,w
  3464  053E  3BAD               	subwfb	___aomod@dividend+5,f
  3465  053F  0826               	movf	___aomod@divisor+6,w
  3466  0540  3BAE               	subwfb	___aomod@dividend+6,f
  3467  0541  0827               	movf	___aomod@divisor+7,w
  3468  0542  3BAF               	subwfb	___aomod@dividend+7,f
  3469  0543                     l1514:	
  3470  0543  36A7               	lsrf	___aomod@divisor+7,f
  3471  0544  0CA6               	rrf	___aomod@divisor+6,f
  3472  0545  0CA5               	rrf	___aomod@divisor+5,f
  3473  0546  0CA4               	rrf	___aomod@divisor+4,f
  3474  0547  0CA3               	rrf	___aomod@divisor+3,f
  3475  0548  0CA2               	rrf	___aomod@divisor+2,f
  3476  0549  0CA1               	rrf	___aomod@divisor+1,f
  3477  054A  0CA0               	rrf	___aomod@divisor,f
  3478  054B  3001               	movlw	1
  3479  054C  02F1               	subwf	___aomod@counter,f
  3480  054D  1D03               	btfss	3,2
  3481  054E  2D50               	goto	u1031
  3482  054F  2D51               	goto	u1030
  3483  0550                     u1031:	
  3484  0550  2D11               	goto	l1510
  3485  0551                     u1030:	
  3486  0551                     l1516:	
  3487  0551  0872               	movf	___aomod@sign,w
  3488  0552  1903               	btfsc	3,2
  3489  0553  2D55               	goto	u1041
  3490  0554  2D56               	goto	u1040
  3491  0555                     u1041:	
  3492  0555  2D74               	goto	l529
  3493  0556                     u1040:	
  3494  0556                     l1518:	
  3495  0556  09A8               	comf	___aomod@dividend,f
  3496  0557  09A9               	comf	___aomod@dividend+1,f
  3497  0558  09AA               	comf	___aomod@dividend+2,f
  3498  0559  09AB               	comf	___aomod@dividend+3,f
  3499  055A  09AC               	comf	___aomod@dividend+4,f
  3500  055B  09AD               	comf	___aomod@dividend+5,f
  3501  055C  09AE               	comf	___aomod@dividend+6,f
  3502  055D  09AF               	comf	___aomod@dividend+7,f
  3503  055E  0AA8               	incf	___aomod@dividend,f
  3504  055F  1D03               	skipz
  3505  0560  2D74               	goto	u105lld
  3506  0561  0AA9               	incf	___aomod@dividend+1,f
  3507  0562  1D03               	skipz
  3508  0563  2D74               	goto	u105lld
  3509  0564  0AAA               	incf	___aomod@dividend+2,f
  3510  0565  1D03               	skipz
  3511  0566  2D74               	goto	u105lld
  3512  0567  0AAB               	incf	___aomod@dividend+3,f
  3513  0568  1D03               	skipz
  3514  0569  2D74               	goto	u105lld
  3515  056A  0AAC               	incf	___aomod@dividend+4,f
  3516  056B  1D03               	skipz
  3517  056C  2D74               	goto	u105lld
  3518  056D  0AAD               	incf	___aomod@dividend+5,f
  3519  056E  1D03               	skipz
  3520  056F  2D74               	goto	u105lld
  3521  0570  0AAE               	incf	___aomod@dividend+6,f
  3522  0571  1D03               	skipz
  3523  0572  2D74               	goto	u105lld
  3524  0573  0AAF               	incf	___aomod@dividend+7,f
  3525  0574                     u105lld:	
  3526  0574                     l529:	
  3527  0574  0020               	movlb	0	; select bank0
  3528  0575  0828               	movf	___aomod@dividend,w
  3529  0576  00A0               	movwf	?___aomod
  3530  0577  0829               	movf	___aomod@dividend+1,w
  3531  0578  00A1               	movwf	?___aomod+1
  3532  0579  082A               	movf	___aomod@dividend+2,w
  3533  057A  00A2               	movwf	?___aomod+2
  3534  057B  082B               	movf	___aomod@dividend+3,w
  3535  057C  00A3               	movwf	?___aomod+3
  3536  057D  082C               	movf	___aomod@dividend+4,w
  3537  057E  00A4               	movwf	?___aomod+4
  3538  057F  082D               	movf	___aomod@dividend+5,w
  3539  0580  00A5               	movwf	?___aomod+5
  3540  0581  082E               	movf	___aomod@dividend+6,w
  3541  0582  00A6               	movwf	?___aomod+6
  3542  0583  082F               	movf	___aomod@dividend+7,w
  3543  0584  00A7               	movwf	?___aomod+7
  3544  0585                     l530:	
  3545  0585  0008               	return
  3546  0586                     __end_of___aomod:	
  3547                           
  3548                           	psect	text13
  3549  0586                     __ptext13:	
  3550 ;; *************** function ___aodiv *****************
  3551 ;; Defined at:
  3552 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  divisor         8    0[BANK0 ] long long 
  3555 ;;  dividend        8    8[BANK0 ] long long 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  quotient        8    3[COMMON] long long 
  3558 ;;  sign            1    2[COMMON] unsigned char 
  3559 ;;  counter         1    1[COMMON] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  8    0[BANK0 ] long long 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3569 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3572 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3573 ;;Total ram usage:       27 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_dtoa
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function ___aodiv
  3584  0586                     ___aodiv:	
  3585  0586                     l1452:	
  3586                           ;incstack = 0
  3587                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3588                           
  3589  0586  01F2               	clrf	___aodiv@sign
  3590  0587                     l1454:	
  3591  0587  3020               	movlw	low ___aodiv@divisor
  3592  0588  0086               	movwf	6
  3593  0589  3000               	movlw	high ___aodiv@divisor
  3594  058A  0087               	movwf	7
  3595  058B  3F47               	moviw [7]fsr1
  3596  058C  00F0               	movwf	??___aodiv
  3597  058D  1FF0               	btfss	??___aodiv,7
  3598  058E  2D90               	goto	u851
  3599  058F  2D91               	goto	u850
  3600  0590                     u851:	
  3601  0590  2DB2               	goto	l1458
  3602  0591                     u850:	
  3603  0591                     l1456:	
  3604  0591  0020               	movlb	0	; select bank0
  3605  0592  09A0               	comf	___aodiv@divisor,f
  3606  0593  09A1               	comf	___aodiv@divisor+1,f
  3607  0594  09A2               	comf	___aodiv@divisor+2,f
  3608  0595  09A3               	comf	___aodiv@divisor+3,f
  3609  0596  09A4               	comf	___aodiv@divisor+4,f
  3610  0597  09A5               	comf	___aodiv@divisor+5,f
  3611  0598  09A6               	comf	___aodiv@divisor+6,f
  3612  0599  09A7               	comf	___aodiv@divisor+7,f
  3613  059A  0AA0               	incf	___aodiv@divisor,f
  3614  059B  1D03               	skipz
  3615  059C  2DB0               	goto	u86lld
  3616  059D  0AA1               	incf	___aodiv@divisor+1,f
  3617  059E  1D03               	skipz
  3618  059F  2DB0               	goto	u86lld
  3619  05A0  0AA2               	incf	___aodiv@divisor+2,f
  3620  05A1  1D03               	skipz
  3621  05A2  2DB0               	goto	u86lld
  3622  05A3  0AA3               	incf	___aodiv@divisor+3,f
  3623  05A4  1D03               	skipz
  3624  05A5  2DB0               	goto	u86lld
  3625  05A6  0AA4               	incf	___aodiv@divisor+4,f
  3626  05A7  1D03               	skipz
  3627  05A8  2DB0               	goto	u86lld
  3628  05A9  0AA5               	incf	___aodiv@divisor+5,f
  3629  05AA  1D03               	skipz
  3630  05AB  2DB0               	goto	u86lld
  3631  05AC  0AA6               	incf	___aodiv@divisor+6,f
  3632  05AD  1D03               	skipz
  3633  05AE  2DB0               	goto	u86lld
  3634  05AF  0AA7               	incf	___aodiv@divisor+7,f
  3635  05B0                     u86lld:	
  3636  05B0  01F2               	clrf	___aodiv@sign
  3637  05B1  0AF2               	incf	___aodiv@sign,f
  3638  05B2                     l1458:	
  3639  05B2  3028               	movlw	low ___aodiv@dividend
  3640  05B3  0086               	movwf	6
  3641  05B4  3000               	movlw	high ___aodiv@dividend
  3642  05B5  0087               	movwf	7
  3643  05B6  3F47               	moviw [7]fsr1
  3644  05B7  00F0               	movwf	??___aodiv
  3645  05B8  1FF0               	btfss	??___aodiv,7
  3646  05B9  2DBB               	goto	u871
  3647  05BA  2DBC               	goto	u870
  3648  05BB                     u871:	
  3649  05BB  2DDF               	goto	l1464
  3650  05BC                     u870:	
  3651  05BC                     l1460:	
  3652  05BC  0020               	movlb	0	; select bank0
  3653  05BD  09A8               	comf	___aodiv@dividend,f
  3654  05BE  09A9               	comf	___aodiv@dividend+1,f
  3655  05BF  09AA               	comf	___aodiv@dividend+2,f
  3656  05C0  09AB               	comf	___aodiv@dividend+3,f
  3657  05C1  09AC               	comf	___aodiv@dividend+4,f
  3658  05C2  09AD               	comf	___aodiv@dividend+5,f
  3659  05C3  09AE               	comf	___aodiv@dividend+6,f
  3660  05C4  09AF               	comf	___aodiv@dividend+7,f
  3661  05C5  0AA8               	incf	___aodiv@dividend,f
  3662  05C6  1D03               	skipz
  3663  05C7  2DDB               	goto	u88lld
  3664  05C8  0AA9               	incf	___aodiv@dividend+1,f
  3665  05C9  1D03               	skipz
  3666  05CA  2DDB               	goto	u88lld
  3667  05CB  0AAA               	incf	___aodiv@dividend+2,f
  3668  05CC  1D03               	skipz
  3669  05CD  2DDB               	goto	u88lld
  3670  05CE  0AAB               	incf	___aodiv@dividend+3,f
  3671  05CF  1D03               	skipz
  3672  05D0  2DDB               	goto	u88lld
  3673  05D1  0AAC               	incf	___aodiv@dividend+4,f
  3674  05D2  1D03               	skipz
  3675  05D3  2DDB               	goto	u88lld
  3676  05D4  0AAD               	incf	___aodiv@dividend+5,f
  3677  05D5  1D03               	skipz
  3678  05D6  2DDB               	goto	u88lld
  3679  05D7  0AAE               	incf	___aodiv@dividend+6,f
  3680  05D8  1D03               	skipz
  3681  05D9  2DDB               	goto	u88lld
  3682  05DA  0AAF               	incf	___aodiv@dividend+7,f
  3683  05DB                     u88lld:	
  3684  05DB                     l1462:	
  3685  05DB  3001               	movlw	1
  3686  05DC  00F0               	movwf	??___aodiv
  3687  05DD  0870               	movf	??___aodiv,w
  3688  05DE  06F2               	xorwf	___aodiv@sign,f
  3689  05DF                     l1464:	
  3690  05DF  3073               	movlw	low ___aodiv@quotient
  3691  05E0  0086               	movwf	6
  3692  05E1  3000               	movlw	high ___aodiv@quotient
  3693  05E2  0087               	movwf	7
  3694  05E3  3008               	movlw	8
  3695  05E4  00F0               	movwf	??___aodiv
  3696  05E5  3000               	movlw	0
  3697  05E6                     u890:	
  3698  05E6  001E               	movwi fsr1++
  3699  05E7  0BF0               	decfsz	??___aodiv,f
  3700  05E8  2DE6               	goto	u890
  3701  05E9                     l1466:	
  3702  05E9  0020               	movlb	0	; select bank0
  3703  05EA  0820               	movf	___aodiv@divisor,w
  3704  05EB  0421               	iorwf	___aodiv@divisor+1,w
  3705  05EC  0422               	iorwf	___aodiv@divisor+2,w
  3706  05ED  0423               	iorwf	___aodiv@divisor+3,w
  3707  05EE  0424               	iorwf	___aodiv@divisor+4,w
  3708  05EF  0425               	iorwf	___aodiv@divisor+5,w
  3709  05F0  0426               	iorwf	___aodiv@divisor+6,w
  3710  05F1  0427               	iorwf	___aodiv@divisor+7,w
  3711  05F2  1903               	skipnz
  3712  05F3  2DF5               	goto	u901
  3713  05F4  2DF6               	goto	u900
  3714  05F5                     u901:	
  3715  05F5  2E52               	goto	l1486
  3716  05F6                     u900:	
  3717  05F6                     l1468:	
  3718  05F6  01F1               	clrf	___aodiv@counter
  3719  05F7  0AF1               	incf	___aodiv@counter,f
  3720  05F8  2E05               	goto	l1474
  3721  05F9                     l1470:	
  3722  05F9  35A0               	lslf	___aodiv@divisor,f
  3723  05FA  0DA1               	rlf	___aodiv@divisor+1,f
  3724  05FB  0DA2               	rlf	___aodiv@divisor+2,f
  3725  05FC  0DA3               	rlf	___aodiv@divisor+3,f
  3726  05FD  0DA4               	rlf	___aodiv@divisor+4,f
  3727  05FE  0DA5               	rlf	___aodiv@divisor+5,f
  3728  05FF  0DA6               	rlf	___aodiv@divisor+6,f
  3729  0600  0DA7               	rlf	___aodiv@divisor+7,f
  3730  0601                     l1472:	
  3731  0601  3001               	movlw	1
  3732  0602  00F0               	movwf	??___aodiv
  3733  0603  0870               	movf	??___aodiv,w
  3734  0604  07F1               	addwf	___aodiv@counter,f
  3735  0605                     l1474:	
  3736  0605  1FA7               	btfss	___aodiv@divisor+7,7
  3737  0606  2E08               	goto	u911
  3738  0607  2E09               	goto	u910
  3739  0608                     u911:	
  3740  0608  2DF9               	goto	l1470
  3741  0609                     u910:	
  3742  0609                     l1476:	
  3743  0609  35F3               	lslf	___aodiv@quotient,f
  3744  060A  0DF4               	rlf	___aodiv@quotient+1,f
  3745  060B  0DF5               	rlf	___aodiv@quotient+2,f
  3746  060C  0DF6               	rlf	___aodiv@quotient+3,f
  3747  060D  0DF7               	rlf	___aodiv@quotient+4,f
  3748  060E  0DF8               	rlf	___aodiv@quotient+5,f
  3749  060F  0DF9               	rlf	___aodiv@quotient+6,f
  3750  0610  0DFA               	rlf	___aodiv@quotient+7,f
  3751  0611                     l1478:	
  3752  0611  0827               	movf	___aodiv@divisor+7,w
  3753  0612  022F               	subwf	___aodiv@dividend+7,w
  3754  0613  1D03               	skipz
  3755  0614  2E2F               	goto	u925
  3756  0615  0826               	movf	___aodiv@divisor+6,w
  3757  0616  022E               	subwf	___aodiv@dividend+6,w
  3758  0617  1D03               	skipz
  3759  0618  2E2F               	goto	u925
  3760  0619  0825               	movf	___aodiv@divisor+5,w
  3761  061A  022D               	subwf	___aodiv@dividend+5,w
  3762  061B  1D03               	skipz
  3763  061C  2E2F               	goto	u925
  3764  061D  0824               	movf	___aodiv@divisor+4,w
  3765  061E  022C               	subwf	___aodiv@dividend+4,w
  3766  061F  1D03               	skipz
  3767  0620  2E2F               	goto	u925
  3768  0621  0823               	movf	___aodiv@divisor+3,w
  3769  0622  022B               	subwf	___aodiv@dividend+3,w
  3770  0623  1D03               	skipz
  3771  0624  2E2F               	goto	u925
  3772  0625  0822               	movf	___aodiv@divisor+2,w
  3773  0626  022A               	subwf	___aodiv@dividend+2,w
  3774  0627  1D03               	skipz
  3775  0628  2E2F               	goto	u925
  3776  0629  0821               	movf	___aodiv@divisor+1,w
  3777  062A  0229               	subwf	___aodiv@dividend+1,w
  3778  062B  1D03               	skipz
  3779  062C  2E2F               	goto	u925
  3780  062D  0820               	movf	___aodiv@divisor,w
  3781  062E  0228               	subwf	___aodiv@dividend,w
  3782  062F                     u925:	
  3783  062F  1C03               	skipc
  3784  0630  2E32               	goto	u921
  3785  0631  2E33               	goto	u920
  3786  0632                     u921:	
  3787  0632  2E44               	goto	l1484
  3788  0633                     u920:	
  3789  0633                     l1480:	
  3790  0633  0820               	movf	___aodiv@divisor,w
  3791  0634  02A8               	subwf	___aodiv@dividend,f
  3792  0635  0821               	movf	___aodiv@divisor+1,w
  3793  0636  3BA9               	subwfb	___aodiv@dividend+1,f
  3794  0637  0822               	movf	___aodiv@divisor+2,w
  3795  0638  3BAA               	subwfb	___aodiv@dividend+2,f
  3796  0639  0823               	movf	___aodiv@divisor+3,w
  3797  063A  3BAB               	subwfb	___aodiv@dividend+3,f
  3798  063B  0824               	movf	___aodiv@divisor+4,w
  3799  063C  3BAC               	subwfb	___aodiv@dividend+4,f
  3800  063D  0825               	movf	___aodiv@divisor+5,w
  3801  063E  3BAD               	subwfb	___aodiv@dividend+5,f
  3802  063F  0826               	movf	___aodiv@divisor+6,w
  3803  0640  3BAE               	subwfb	___aodiv@dividend+6,f
  3804  0641  0827               	movf	___aodiv@divisor+7,w
  3805  0642  3BAF               	subwfb	___aodiv@dividend+7,f
  3806  0643                     l1482:	
  3807  0643  1473               	bsf	___aodiv@quotient,0
  3808  0644                     l1484:	
  3809  0644  36A7               	lsrf	___aodiv@divisor+7,f
  3810  0645  0CA6               	rrf	___aodiv@divisor+6,f
  3811  0646  0CA5               	rrf	___aodiv@divisor+5,f
  3812  0647  0CA4               	rrf	___aodiv@divisor+4,f
  3813  0648  0CA3               	rrf	___aodiv@divisor+3,f
  3814  0649  0CA2               	rrf	___aodiv@divisor+2,f
  3815  064A  0CA1               	rrf	___aodiv@divisor+1,f
  3816  064B  0CA0               	rrf	___aodiv@divisor,f
  3817  064C  3001               	movlw	1
  3818  064D  02F1               	subwf	___aodiv@counter,f
  3819  064E  1D03               	btfss	3,2
  3820  064F  2E51               	goto	u931
  3821  0650  2E52               	goto	u930
  3822  0651                     u931:	
  3823  0651  2E09               	goto	l1476
  3824  0652                     u930:	
  3825  0652                     l1486:	
  3826  0652  0872               	movf	___aodiv@sign,w
  3827  0653  1903               	btfsc	3,2
  3828  0654  2E56               	goto	u941
  3829  0655  2E57               	goto	u940
  3830  0656                     u941:	
  3831  0656  2E75               	goto	l516
  3832  0657                     u940:	
  3833  0657                     l1488:	
  3834  0657  09F3               	comf	___aodiv@quotient,f
  3835  0658  09F4               	comf	___aodiv@quotient+1,f
  3836  0659  09F5               	comf	___aodiv@quotient+2,f
  3837  065A  09F6               	comf	___aodiv@quotient+3,f
  3838  065B  09F7               	comf	___aodiv@quotient+4,f
  3839  065C  09F8               	comf	___aodiv@quotient+5,f
  3840  065D  09F9               	comf	___aodiv@quotient+6,f
  3841  065E  09FA               	comf	___aodiv@quotient+7,f
  3842  065F  0AF3               	incf	___aodiv@quotient,f
  3843  0660  1D03               	skipz
  3844  0661  2E75               	goto	u95lld
  3845  0662  0AF4               	incf	___aodiv@quotient+1,f
  3846  0663  1D03               	skipz
  3847  0664  2E75               	goto	u95lld
  3848  0665  0AF5               	incf	___aodiv@quotient+2,f
  3849  0666  1D03               	skipz
  3850  0667  2E75               	goto	u95lld
  3851  0668  0AF6               	incf	___aodiv@quotient+3,f
  3852  0669  1D03               	skipz
  3853  066A  2E75               	goto	u95lld
  3854  066B  0AF7               	incf	___aodiv@quotient+4,f
  3855  066C  1D03               	skipz
  3856  066D  2E75               	goto	u95lld
  3857  066E  0AF8               	incf	___aodiv@quotient+5,f
  3858  066F  1D03               	skipz
  3859  0670  2E75               	goto	u95lld
  3860  0671  0AF9               	incf	___aodiv@quotient+6,f
  3861  0672  1D03               	skipz
  3862  0673  2E75               	goto	u95lld
  3863  0674  0AFA               	incf	___aodiv@quotient+7,f
  3864  0675                     u95lld:	
  3865  0675                     l516:	
  3866  0675  0873               	movf	___aodiv@quotient,w
  3867  0676  0020               	movlb	0	; select bank0
  3868  0677  00A0               	movwf	?___aodiv
  3869  0678  0874               	movf	___aodiv@quotient+1,w
  3870  0679  00A1               	movwf	?___aodiv+1
  3871  067A  0875               	movf	___aodiv@quotient+2,w
  3872  067B  00A2               	movwf	?___aodiv+2
  3873  067C  0876               	movf	___aodiv@quotient+3,w
  3874  067D  00A3               	movwf	?___aodiv+3
  3875  067E  0877               	movf	___aodiv@quotient+4,w
  3876  067F  00A4               	movwf	?___aodiv+4
  3877  0680  0878               	movf	___aodiv@quotient+5,w
  3878  0681  00A5               	movwf	?___aodiv+5
  3879  0682  0879               	movf	___aodiv@quotient+6,w
  3880  0683  00A6               	movwf	?___aodiv+6
  3881  0684  087A               	movf	___aodiv@quotient+7,w
  3882  0685  00A7               	movwf	?___aodiv+7
  3883  0686                     l517:	
  3884  0686  0008               	return
  3885  0687                     __end_of___aodiv:	
  3886                           
  3887                           	psect	text14
  3888  028E                     __ptext14:	
  3889 ;; *************** function _TC74_Temperature *****************
  3890 ;; Defined at:
  3891 ;;		line 76 in file "TC74.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  Obj             1    wreg     PTR struct .
  3894 ;;		 -> TC74Data(5), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  Obj             1    9[BANK0 ] PTR struct .
  3897 ;;		 -> TC74Data(5), 
  3898 ;;  Digital_Temp    1   10[BANK0 ] unsigned char 
  3899 ;;  Temperature     1    8[BANK0 ] char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      char 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3913 ;;Total ram usage:        4 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    6
  3916 ;; This function calls:
  3917 ;;		_TC74_Read
  3918 ;;		_TC74_Ready
  3919 ;; This function is called by:
  3920 ;;		_main
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           
  3925                           ;psect for function _TC74_Temperature
  3926  028E                     _TC74_Temperature:	
  3927                           
  3928                           ;incstack = 0
  3929                           ; Regs used in _TC74_Temperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3930                           ;TC74_Temperature@Obj stored from wreg
  3931  028E  0020               	movlb	0	; select bank0
  3932  028F  00A9               	movwf	TC74_Temperature@Obj
  3933  0290                     l1706:	
  3934                           
  3935                           ;TC74.c: 77:     uint8_t Digital_Temperature = 0;
  3936  0290  01AA               	clrf	TC74_Temperature@Digital_Temperature
  3937  0291                     l1708:	
  3938                           
  3939                           ;TC74.c: 79:     if(TC74_Ready(Obj)) {
  3940  0291  0829               	movf	TC74_Temperature@Obj,w
  3941  0292  3181  2176  3182   	fcall	_TC74_Ready
  3942  0295  3A00               	xorlw	0
  3943  0296  1903               	skipnz
  3944  0297  2A99               	goto	u1301
  3945  0298  2A9A               	goto	u1300
  3946  0299                     u1301:	
  3947  0299  2AA6               	goto	l1712
  3948  029A                     u1300:	
  3949  029A                     l1710:	
  3950                           
  3951                           ;TC74.c: 80:         Digital_Temperature = TC74_Read(Obj,TC74_RTR,1);
  3952  029A  01FB               	clrf	TC74_Read@TC74_Register
  3953  029B  01FC               	clrf	TC74_Read@amount
  3954  029C  0AFC               	incf	TC74_Read@amount,f
  3955  029D  0020               	movlb	0	; select bank0
  3956  029E  0829               	movf	TC74_Temperature@Obj,w
  3957  029F  3182  223A  3182   	fcall	_TC74_Read
  3958  02A2  0020               	movlb	0	; select bank0
  3959  02A3  00A7               	movwf	??_TC74_Temperature
  3960  02A4  0827               	movf	??_TC74_Temperature,w
  3961  02A5  00AA               	movwf	TC74_Temperature@Digital_Temperature
  3962  02A6                     l1712:	
  3963                           
  3964                           ;TC74.c: 83:     if(Digital_Temperature > 127){
  3965  02A6  3080               	movlw	128
  3966  02A7  0020               	movlb	0	; select bank0
  3967  02A8  022A               	subwf	TC74_Temperature@Digital_Temperature,w
  3968  02A9  1C03               	skipc
  3969  02AA  2AAC               	goto	u1311
  3970  02AB  2AAD               	goto	u1310
  3971  02AC                     u1311:	
  3972  02AC  2AB5               	goto	l1716
  3973  02AD                     u1310:	
  3974  02AD                     l1714:	
  3975                           
  3976                           ;TC74.c: 84:         Temperature = ((~Digital_Temperature) |0x01)*(-1) ;
  3977  02AD  092A               	comf	TC74_Temperature@Digital_Temperature,w
  3978  02AE  3801               	iorlw	1
  3979  02AF  3AFF               	xorlw	255
  3980  02B0  3E01               	addlw	1
  3981  02B1  00A7               	movwf	??_TC74_Temperature
  3982  02B2  0827               	movf	??_TC74_Temperature,w
  3983  02B3  00A8               	movwf	TC74_Temperature@Temperature
  3984                           
  3985                           ;TC74.c: 85:     }else Temperature = (int8_t)Digital_Temperature;
  3986  02B4  2AB9               	goto	l57
  3987  02B5                     l1716:	
  3988  02B5  082A               	movf	TC74_Temperature@Digital_Temperature,w
  3989  02B6  00A7               	movwf	??_TC74_Temperature
  3990  02B7  0827               	movf	??_TC74_Temperature,w
  3991  02B8  00A8               	movwf	TC74_Temperature@Temperature
  3992  02B9                     l57:	
  3993                           
  3994                           ;TC74.c: 87:     return Temperature;
  3995  02B9  0828               	movf	TC74_Temperature@Temperature,w
  3996  02BA                     l58:	
  3997  02BA  0008               	return
  3998  02BB                     __end_of_TC74_Temperature:	
  3999                           
  4000                           	psect	text15
  4001  0176                     __ptext15:	
  4002 ;; *************** function _TC74_Ready *****************
  4003 ;; Defined at:
  4004 ;;		line 68 in file "TC74.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  Obj             1    wreg     PTR struct .
  4007 ;;		 -> TC74Data(5), 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  Obj             1    5[BANK0 ] PTR struct .
  4010 ;;		 -> TC74Data(5), 
  4011 ;;  Ready           1    6[BANK0 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      unsigned char 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;Total ram usage:        3 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    5
  4028 ;; This function calls:
  4029 ;;		_TC74_Read
  4030 ;; This function is called by:
  4031 ;;		_TC74_Temperature
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _TC74_Ready
  4037  0176                     _TC74_Ready:	
  4038                           
  4039                           ;incstack = 0
  4040                           ; Regs used in _TC74_Ready: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4041                           ;TC74_Ready@Obj stored from wreg
  4042  0176  0020               	movlb	0	; select bank0
  4043  0177  00A5               	movwf	TC74_Ready@Obj
  4044  0178                     l1648:	
  4045  0178                     l1650:	
  4046                           
  4047                           ;TC74.c: 70:     Ready = TC74_Read(Obj,TC74_RWCR,1);
  4048  0178  01FB               	clrf	TC74_Read@TC74_Register
  4049  0179  0AFB               	incf	TC74_Read@TC74_Register,f
  4050  017A  01FC               	clrf	TC74_Read@amount
  4051  017B  0AFC               	incf	TC74_Read@amount,f
  4052  017C  0825               	movf	TC74_Ready@Obj,w
  4053  017D  3182  223A  3181   	fcall	_TC74_Read
  4054  0180  00FD               	movwf	??_TC74_Ready
  4055  0181  087D               	movf	??_TC74_Ready,w
  4056  0182  0020               	movlb	0	; select bank0
  4057  0183  00A6               	movwf	TC74_Ready@Ready
  4058  0184                     l1652:	
  4059                           
  4060                           ;TC74.c: 72:     return ( (Ready & 0x40)?1:0 );
  4061  0184  1B26               	btfsc	TC74_Ready@Ready,6
  4062  0185  2987               	goto	u1271
  4063  0186  2989               	goto	u1270
  4064  0187                     u1271:	
  4065  0187  3001               	movlw	1
  4066  0188  298A               	goto	u1280
  4067  0189                     u1270:	
  4068  0189  3000               	movlw	0
  4069  018A                     u1280:	
  4070  018A                     l52:	
  4071  018A  0008               	return
  4072  018B                     __end_of_TC74_Ready:	
  4073                           
  4074                           	psect	text16
  4075  023A                     __ptext16:	
  4076 ;; *************** function _TC74_Read *****************
  4077 ;; Defined at:
  4078 ;;		line 50 in file "TC74.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  Obj             1    wreg     PTR struct .
  4081 ;;		 -> TC74Data(5), 
  4082 ;;  TC74_Registe    1   11[COMMON] unsigned char 
  4083 ;;  amount          1   12[COMMON] unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  Obj             1    4[BANK0 ] PTR struct .
  4086 ;;		 -> TC74Data(5), 
  4087 ;;  buffer          2    2[BANK0 ] unsigned char [2]
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      unsigned char 
  4090 ;; Registers used:
  4091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;Total ram usage:        7 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    4
  4104 ;; This function calls:
  4105 ;;		_Wrappers_I2CMaster_Read
  4106 ;; This function is called by:
  4107 ;;		_TC74_Ready
  4108 ;;		_TC74_Temperature
  4109 ;;		_TC74_Standby
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _TC74_Read
  4115  023A                     _TC74_Read:	
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _TC74_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4119                           ;TC74_Read@Obj stored from wreg
  4120  023A  0020               	movlb	0	; select bank0
  4121  023B  00A4               	movwf	TC74_Read@Obj
  4122  023C                     l1594:	
  4123                           
  4124                           ;TC74.c: 51:  uint8_t buffer[2];;TC74.c: 52:  buffer[0] = TC74_Register;
  4125  023C  087B               	movf	TC74_Read@TC74_Register,w
  4126  023D  00A0               	movwf	??_TC74_Read
  4127  023E  0820               	movf	??_TC74_Read,w
  4128  023F  00A2               	movwf	TC74_Read@buffer
  4129  0240                     l1596:	
  4130                           
  4131                           ;TC74.c: 53:  if(Obj->I2CRead != ((void*)0)){
  4132  0240  0824               	movf	TC74_Read@Obj,w
  4133  0241  3E02               	addlw	2
  4134  0242  0086               	movwf	6
  4135  0243  0187               	clrf	7
  4136  0244  0016               	moviw fsr1++
  4137  0245  0401               	iorwf	1,w
  4138  0246  1903               	btfsc	3,2
  4139  0247  2A49               	goto	u1221
  4140  0248  2A4A               	goto	u1220
  4141  0249                     u1221:	
  4142  0249  2A60               	goto	l1600
  4143  024A                     u1220:	
  4144  024A                     l1598:	
  4145                           
  4146                           ;TC74.c: 54:         Obj->I2CRead( Obj->Dev_Addr, buffer, amount);
  4147  024A  0824               	movf	TC74_Read@Obj,w
  4148  024B  0086               	movwf	6
  4149  024C  0187               	clrf	7
  4150  024D  3F44               	moviw [4]fsr1
  4151  024E  00F6               	movwf	Wrappers_I2CMaster_Read@Address7b
  4152  024F  3022               	movlw	(low (TC74_Read@buffer| 0))& (0+255)
  4153  0250  00A0               	movwf	??_TC74_Read
  4154  0251  0820               	movf	??_TC74_Read,w
  4155  0252  00F7               	movwf	Wrappers_I2CMaster_Read@Register
  4156  0253  087C               	movf	TC74_Read@amount,w
  4157  0254  00A1               	movwf	??_TC74_Read+1
  4158  0255  0821               	movf	??_TC74_Read+1,w
  4159  0256  00F8               	movwf	Wrappers_I2CMaster_Read@amount
  4160  0257  0824               	movf	TC74_Read@Obj,w
  4161  0258  3E02               	addlw	2
  4162  0259  0086               	movwf	6
  4163  025A  0187               	clrf	7
  4164  025B  3F41               	moviw [1]fsr1
  4165  025C  008A               	movwf	10
  4166  025D  3F40               	moviw [0]fsr1
  4167  025E  000A               	callw
  4168  025F  3182               	pagesel	$
  4169  0260                     l1600:	
  4170                           
  4171                           ;TC74.c: 56:  return buffer[0];
  4172  0260  0020               	movlb	0	; select bank0
  4173  0261  0822               	movf	TC74_Read@buffer,w
  4174  0262                     l42:	
  4175  0262  0008               	return
  4176  0263                     __end_of_TC74_Read:	
  4177                           
  4178                           	psect	text17
  4179  0263                     __ptext17:	
  4180 ;; *************** function _Wrappers_I2CMaster_Read *****************
  4181 ;; Defined at:
  4182 ;;		line 108 in file "i2c.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  Address7b       1    6[COMMON] unsigned char 
  4185 ;;  Register        1    7[COMMON] PTR void 
  4186 ;;		 -> TC74_Read@buffer(2), 
  4187 ;;  amount          1    8[COMMON] unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  DatatoSend      1   10[COMMON] PTR unsigned char 
  4190 ;;		 -> TC74_Read@buffer(2), 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        5 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    3
  4207 ;; This function calls:
  4208 ;;		_I2C_RStart
  4209 ;;		_I2C_Read
  4210 ;;		_I2C_Start
  4211 ;;		_I2C_Stop
  4212 ;;		_I2C_Write
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;;		_TC74_Read
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _Wrappers_I2CMaster_Read
  4221  0263                     _Wrappers_I2CMaster_Read:	
  4222  0263                     l1520:	
  4223                           ;incstack = 0
  4224                           ; Regs used in _Wrappers_I2CMaster_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4225                           
  4226                           
  4227                           ;i2c.c: 111: uint8_t *DatatoSend = (uint8_t *)Register;
  4228  0263  0877               	movf	Wrappers_I2CMaster_Read@Register,w
  4229  0264  00F9               	movwf	??_Wrappers_I2CMaster_Read
  4230  0265  0879               	movf	??_Wrappers_I2CMaster_Read,w
  4231  0266  00FA               	movwf	Wrappers_I2CMaster_Read@DatatoSend
  4232  0267                     l1522:	
  4233                           
  4234                           ;i2c.c: 112:     I2C_Start ();
  4235  0267  3181  210F  3182   	fcall	_I2C_Start
  4236  026A                     l1524:	
  4237                           
  4238                           ;i2c.c: 113:     I2C_Write (Address7b<<1);
  4239  026A  3576               	lslf	Wrappers_I2CMaster_Read@Address7b,w
  4240  026B  3181  212E  3182   	fcall	_I2C_Write
  4241  026E                     l1526:	
  4242                           
  4243                           ;i2c.c: 115:      I2C_Write (*DatatoSend);
  4244  026E  087A               	movf	Wrappers_I2CMaster_Read@DatatoSend,w
  4245  026F  0086               	movwf	6
  4246  0270  0187               	clrf	7
  4247  0271  0801               	movf	1,w
  4248  0272  3181  212E  3182   	fcall	_I2C_Write
  4249  0275                     l1528:	
  4250                           
  4251                           ;i2c.c: 117:      I2C_RStart();
  4252  0275  3181  2103  3182   	fcall	_I2C_RStart
  4253  0278                     l1530:	
  4254                           
  4255                           ;i2c.c: 118:      I2C_Write (Address7b<<1|0x01);
  4256  0278  1403               	setc
  4257  0279  0D76               	rlf	Wrappers_I2CMaster_Read@Address7b,w
  4258  027A  3181  212E  3182   	fcall	_I2C_Write
  4259  027D                     l1532:	
  4260                           
  4261                           ;i2c.c: 121:     *DatatoSend = I2C_Read (1);
  4262  027D  3001               	movlw	1
  4263  027E  00F0               	movwf	I2C_Read@ack
  4264  027F  3000               	movlw	0
  4265  0280  00F1               	movwf	I2C_Read@ack+1
  4266  0281  3181  21F2  3182   	fcall	_I2C_Read
  4267  0284  00F9               	movwf	??_Wrappers_I2CMaster_Read
  4268  0285  087A               	movf	Wrappers_I2CMaster_Read@DatatoSend,w
  4269  0286  0086               	movwf	6
  4270  0287  0187               	clrf	7
  4271  0288  0879               	movf	??_Wrappers_I2CMaster_Read,w
  4272  0289  0081               	movwf	1
  4273  028A                     l1534:	
  4274                           
  4275                           ;i2c.c: 122:     I2C_Stop ();
  4276  028A  3181  2115  3182   	fcall	_I2C_Stop
  4277  028D                     l117:	
  4278  028D  0008               	return
  4279  028E                     __end_of_Wrappers_I2CMaster_Read:	
  4280                           
  4281                           	psect	text18
  4282  012E                     __ptext18:	
  4283 ;; *************** function _I2C_Write *****************
  4284 ;; Defined at:
  4285 ;;		line 77 in file "i2c.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  data            1    wreg     unsigned char 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  data            1    0[COMMON] unsigned char 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  2  107[None  ] int 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;Total ram usage:        1 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    1
  4306 ;; This function calls:
  4307 ;;		_I2C_Wait1
  4308 ;; This function is called by:
  4309 ;;		_Wrappers_I2CMaster_Write
  4310 ;;		_Wrappers_I2CMaster_Read
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _I2C_Write
  4316  012E                     _I2C_Write:	
  4317                           
  4318                           ;incstack = 0
  4319                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  4320                           ;I2C_Write@data stored from wreg
  4321  012E  00F0               	movwf	I2C_Write@data
  4322  012F                     l1404:	
  4323                           
  4324                           ;i2c.c: 78:     I2C_Wait1();
  4325  012F  3181  2158  3181   	fcall	_I2C_Wait1
  4326  0132                     l1406:	
  4327                           
  4328                           ;i2c.c: 79:     SSPBUF = data;
  4329  0132  0870               	movf	I2C_Write@data,w
  4330  0133  0024               	movlb	4	; select bank4
  4331  0134  0091               	movwf	17	;volatile
  4332  0135                     l1408:	
  4333                           
  4334                           ;i2c.c: 82:     return SSPCON2bits.ACKSTAT;;	Return value of _I2C_Write is never used
  4335  0135  0816               	movf	22,w	;volatile
  4336  0136                     l108:	
  4337  0136  0008               	return
  4338  0137                     __end_of_I2C_Write:	
  4339                           
  4340                           	psect	text19
  4341  0115                     __ptext19:	
  4342 ;; *************** function _I2C_Stop *****************
  4343 ;; Defined at:
  4344 ;;		line 63 in file "i2c.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;Total ram usage:        0 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		_I2C_Wait1
  4367 ;; This function is called by:
  4368 ;;		_Wrappers_I2CMaster_Write
  4369 ;;		_Wrappers_I2CMaster_Read
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           
  4374                           ;psect for function _I2C_Stop
  4375  0115                     _I2C_Stop:	
  4376  0115                     l1400:	
  4377                           ;incstack = 0
  4378                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  4379                           
  4380                           
  4381                           ;i2c.c: 64:     I2C_Wait1();
  4382  0115  3181  2158  3181   	fcall	_I2C_Wait1
  4383  0118                     l1402:	
  4384                           
  4385                           ;i2c.c: 65:     SSPCON2bits.PEN = 1;
  4386  0118  0024               	movlb	4	; select bank4
  4387  0119  1516               	bsf	22,2	;volatile
  4388  011A                     l102:	
  4389  011A  0008               	return
  4390  011B                     __end_of_I2C_Stop:	
  4391                           
  4392                           	psect	text20
  4393  010F                     __ptext20:	
  4394 ;; *************** function _I2C_Start *****************
  4395 ;; Defined at:
  4396 ;;		line 52 in file "i2c.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0, pclath, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    1
  4417 ;; This function calls:
  4418 ;;		_I2C_Wait1
  4419 ;; This function is called by:
  4420 ;;		_Wrappers_I2CMaster_Write
  4421 ;;		_Wrappers_I2CMaster_Read
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function _I2C_Start
  4427  010F                     _I2C_Start:	
  4428  010F                     l1392:	
  4429                           ;incstack = 0
  4430                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  4431                           
  4432                           
  4433                           ;i2c.c: 53:     I2C_Wait1();
  4434  010F  3181  2158  3181   	fcall	_I2C_Wait1
  4435  0112                     l1394:	
  4436                           
  4437                           ;i2c.c: 54:     SSPCON2bits.SEN = 1;
  4438  0112  0024               	movlb	4	; select bank4
  4439  0113  1416               	bsf	22,0	;volatile
  4440  0114                     l96:	
  4441  0114  0008               	return
  4442  0115                     __end_of_I2C_Start:	
  4443                           
  4444                           	psect	text21
  4445  01F2                     __ptext21:	
  4446 ;; *************** function _I2C_Read *****************
  4447 ;; Defined at:
  4448 ;;		line 85 in file "i2c.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  ack             2    0[COMMON] int 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  tempbuf         2    4[COMMON] int 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      unsigned char 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;Total ram usage:        6 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		_I2C_Send_ACK
  4471 ;;		_I2C_Wait1
  4472 ;; This function is called by:
  4473 ;;		_Wrappers_I2CMaster_Read
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           
  4478                           ;psect for function _I2C_Read
  4479  01F2                     _I2C_Read:	
  4480  01F2                     l1412:	
  4481                           ;incstack = 0
  4482                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  4483                           
  4484                           
  4485                           ;i2c.c: 86:     int tempbuf;;i2c.c: 87:     I2C_Wait1();
  4486  01F2  3181  2158  3181   	fcall	_I2C_Wait1
  4487  01F5                     l1414:	
  4488                           
  4489                           ;i2c.c: 88:     SSPCON2bits.RCEN = 1;
  4490  01F5  0024               	movlb	4	; select bank4
  4491  01F6  1596               	bsf	22,3	;volatile
  4492                           
  4493                           ;i2c.c: 89:     I2C_Wait1();
  4494  01F7  3181  2158  3181   	fcall	_I2C_Wait1
  4495  01FA                     l1416:	
  4496                           
  4497                           ;i2c.c: 90:     tempbuf =SSPBUF;
  4498  01FA  0024               	movlb	4	; select bank4
  4499  01FB  0811               	movf	17,w	;volatile
  4500  01FC  00F2               	movwf	??_I2C_Read
  4501  01FD  01F3               	clrf	??_I2C_Read+1
  4502  01FE  0872               	movf	??_I2C_Read,w
  4503  01FF  00F4               	movwf	I2C_Read@tempbuf
  4504  0200  0873               	movf	??_I2C_Read+1,w
  4505  0201  00F5               	movwf	I2C_Read@tempbuf+1
  4506  0202                     l1418:	
  4507                           
  4508                           ;i2c.c: 91:     I2C_Wait1();
  4509  0202  3181  2158  3181   	fcall	_I2C_Wait1
  4510  0205                     l1420:	
  4511                           
  4512                           ;i2c.c: 92:     ACKDT =ack;
  4513  0205  1870               	btfsc	I2C_Read@ack,0
  4514  0206  2A08               	goto	u781
  4515  0207  2A0B               	goto	u780
  4516  0208                     u781:	
  4517  0208  0024               	movlb	4	; select bank4
  4518  0209  1696               	bsf	22,5	;volatile
  4519  020A  2A0D               	goto	u794
  4520  020B                     u780:	
  4521  020B  0024               	movlb	4	; select bank4
  4522  020C  1296               	bcf	22,5	;volatile
  4523  020D                     u794:	
  4524  020D                     l1422:	
  4525                           
  4526                           ;i2c.c: 93:     I2C_Send_ACK();
  4527  020D  3181  2109  3181   	fcall	_I2C_Send_ACK
  4528  0210                     l1424:	
  4529                           
  4530                           ;i2c.c: 94:     return tempbuf;
  4531  0210  0874               	movf	I2C_Read@tempbuf,w
  4532  0211                     l111:	
  4533  0211  0008               	return
  4534  0212                     __end_of_I2C_Read:	
  4535                           
  4536                           	psect	text22
  4537  0109                     __ptext22:	
  4538 ;; *************** function _I2C_Send_ACK *****************
  4539 ;; Defined at:
  4540 ;;		line 69 in file "i2c.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0, pclath, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    1
  4561 ;; This function calls:
  4562 ;;		_I2C_Wait1
  4563 ;; This function is called by:
  4564 ;;		_I2C_Read
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           
  4569                           ;psect for function _I2C_Send_ACK
  4570  0109                     _I2C_Send_ACK:	
  4571  0109                     l1370:	
  4572                           ;incstack = 0
  4573                           ; Regs used in _I2C_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  4574                           
  4575                           
  4576                           ;i2c.c: 70:     I2C_Wait1();
  4577  0109  3181  2158  3181   	fcall	_I2C_Wait1
  4578  010C                     l1372:	
  4579                           
  4580                           ;i2c.c: 71:     SSPCON2bits.ACKEN = 1 ;
  4581  010C  0024               	movlb	4	; select bank4
  4582  010D  1616               	bsf	22,4	;volatile
  4583  010E                     l105:	
  4584  010E  0008               	return
  4585  010F                     __end_of_I2C_Send_ACK:	
  4586                           
  4587                           	psect	text23
  4588  0103                     __ptext23:	
  4589 ;; *************** function _I2C_RStart *****************
  4590 ;; Defined at:
  4591 ;;		line 57 in file "i2c.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    1
  4612 ;; This function calls:
  4613 ;;		_I2C_Wait1
  4614 ;; This function is called by:
  4615 ;;		_Wrappers_I2CMaster_Read
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _I2C_RStart
  4621  0103                     _I2C_RStart:	
  4622  0103                     l1396:	
  4623                           ;incstack = 0
  4624                           ; Regs used in _I2C_RStart: [wreg+status,2+status,0+pclath+cstack]
  4625                           
  4626                           
  4627                           ;i2c.c: 58:     I2C_Wait1();
  4628  0103  3181  2158  3181   	fcall	_I2C_Wait1
  4629  0106                     l1398:	
  4630                           
  4631                           ;i2c.c: 59:     SSPCON2bits.RSEN = 1;
  4632  0106  0024               	movlb	4	; select bank4
  4633  0107  1496               	bsf	22,1	;volatile
  4634  0108                     l99:	
  4635  0108  0008               	return
  4636  0109                     __end_of_I2C_RStart:	
  4637                           
  4638                           	psect	text24
  4639  0158                     __ptext24:	
  4640 ;; *************** function _I2C_Wait1 *****************
  4641 ;; Defined at:
  4642 ;;		line 42 in file "i2c.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_I2C_Start
  4666 ;;		_I2C_RStart
  4667 ;;		_I2C_Stop
  4668 ;;		_I2C_Send_ACK
  4669 ;;		_I2C_Write
  4670 ;;		_I2C_Read
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function _I2C_Wait1
  4676  0158                     _I2C_Wait1:	
  4677  0158                     l1352:	
  4678                           ;incstack = 0
  4679                           ; Regs used in _I2C_Wait1: [wreg+status,2]
  4680                           
  4681  0158                     l84:	
  4682                           ;i2c.c: 44:     while( (SSPSTAT & 0x04) || (SSPCON2 & 0b00011111)) ;
  4683                           
  4684  0158  0024               	movlb	4	; select bank4
  4685  0159  1914               	btfsc	20,2	;volatile
  4686  015A  295C               	goto	u701
  4687  015B  295D               	goto	u700
  4688  015C                     u701:	
  4689  015C  2958               	goto	l84
  4690  015D                     u700:	
  4691  015D                     l1354:	
  4692  015D  0816               	movf	22,w	;volatile
  4693  015E  391F               	andlw	31
  4694  015F  1D03               	btfss	3,2
  4695  0160  2962               	goto	u711
  4696  0161  2963               	goto	u710
  4697  0162                     u711:	
  4698  0162  2958               	goto	l84
  4699  0163                     u710:	
  4700  0163                     l87:	
  4701  0163  0008               	return
  4702  0164                     __end_of_I2C_Wait1:	
  4703                           
  4704                           	psect	text25
  4705  018B                     __ptext25:	
  4706 ;; *************** function _TC74_Initialize *****************
  4707 ;; Defined at:
  4708 ;;		line 28 in file "TC74.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  Obj             1    wreg     PTR struct .
  4711 ;;		 -> TC74Data(5), 
  4712 ;;  AddrSlave       1    0[COMMON] enum E34
  4713 ;;  write_fcn       2    1[COMMON] PTR FTN(unsigned char ,P
  4714 ;;		 -> Wrappers_I2CMaster_Write(1), 
  4715 ;;  read_fcn        2    3[COMMON] PTR FTN(unsigned char ,P
  4716 ;;		 -> Wrappers_I2CMaster_Read(1), 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  Obj             1    6[COMMON] PTR struct .
  4719 ;;		 -> TC74Data(5), 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4729 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;Total ram usage:        7 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function _TC74_Initialize
  4744  018B                     _TC74_Initialize:	
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _TC74_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
  4748                           ;TC74_Initialize@Obj stored from wreg
  4749  018B  00F6               	movwf	TC74_Initialize@Obj
  4750  018C                     l1700:	
  4751                           
  4752                           ;TC74.c: 30:     Obj->I2CWrite = write_fcn;
  4753  018C  0876               	movf	TC74_Initialize@Obj,w
  4754  018D  0086               	movwf	6
  4755  018E  0187               	clrf	7
  4756  018F  0871               	movf	TC74_Initialize@write_fcn,w
  4757  0190  3FC0               	movwi [0]fsr1
  4758  0191  0872               	movf	TC74_Initialize@write_fcn+1,w
  4759  0192  3FC1               	movwi [1]fsr1
  4760  0193                     l1702:	
  4761                           
  4762                           ;TC74.c: 31:     Obj->I2CRead = read_fcn;
  4763  0193  0876               	movf	TC74_Initialize@Obj,w
  4764  0194  3E02               	addlw	2
  4765  0195  0086               	movwf	6
  4766  0196  0187               	clrf	7
  4767  0197  0873               	movf	TC74_Initialize@read_fcn,w
  4768  0198  3FC0               	movwi [0]fsr1
  4769  0199  0874               	movf	TC74_Initialize@read_fcn+1,w
  4770  019A  3FC1               	movwi [1]fsr1
  4771  019B                     l1704:	
  4772                           
  4773                           ;TC74.c: 32:     Obj->Dev_Addr = AddrSlave;
  4774  019B  0870               	movf	TC74_Initialize@AddrSlave,w
  4775  019C  00F5               	movwf	??_TC74_Initialize
  4776  019D  0876               	movf	TC74_Initialize@Obj,w
  4777  019E  3E04               	addlw	4
  4778  019F  0086               	movwf	6
  4779  01A0  0187               	clrf	7
  4780  01A1  0875               	movf	??_TC74_Initialize,w
  4781  01A2  0081               	movwf	1
  4782  01A3                     l33:	
  4783  01A3  0008               	return
  4784  01A4                     __end_of_TC74_Initialize:	
  4785                           
  4786                           	psect	text26
  4787  01D7                     __ptext26:	
  4788 ;; *************** function _PIN_MANAGER_Initialize *****************
  4789 ;; Defined at:
  4790 ;;		line 12 in file "gpio.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           
  4818                           ;psect for function _PIN_MANAGER_Initialize
  4819  01D7                     _PIN_MANAGER_Initialize:	
  4820  01D7                     l1674:	
  4821                           ;incstack = 0
  4822                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4823                           
  4824                           
  4825                           ;gpio.c: 17:     LATE = 0x00;
  4826  01D7  0022               	movlb	2	; select bank2
  4827  01D8  0190               	clrf	16	;volatile
  4828                           
  4829                           ;gpio.c: 18:     LATA = 0x00;
  4830  01D9  018C               	clrf	12	;volatile
  4831                           
  4832                           ;gpio.c: 19:     LATB = 0x00;
  4833  01DA  018D               	clrf	13	;volatile
  4834                           
  4835                           ;gpio.c: 20:     LATC = 0x00;
  4836  01DB  018E               	clrf	14	;volatile
  4837  01DC                     l1676:	
  4838                           
  4839                           ;gpio.c: 25:     TRISE = 0x0F;
  4840  01DC  300F               	movlw	15
  4841  01DD  0021               	movlb	1	; select bank1
  4842  01DE  0090               	movwf	16	;volatile
  4843  01DF                     l1678:	
  4844                           
  4845                           ;gpio.c: 26:     TRISA = 0xFF;
  4846  01DF  30FF               	movlw	255
  4847  01E0  008C               	movwf	12	;volatile
  4848  01E1                     l1680:	
  4849                           
  4850                           ;gpio.c: 27:     TRISB = 0xFF;
  4851  01E1  30FF               	movlw	255
  4852  01E2  008D               	movwf	13	;volatile
  4853  01E3                     l1682:	
  4854                           
  4855                           ;gpio.c: 28:     TRISC = 0xBF;
  4856  01E3  30BF               	movlw	191
  4857  01E4  008E               	movwf	14	;volatile
  4858  01E5                     l1684:	
  4859                           
  4860                           ;gpio.c: 34:     ANSELB = 0x3F;
  4861  01E5  303F               	movlw	63
  4862  01E6  0023               	movlb	3	; select bank3
  4863  01E7  008D               	movwf	13	;volatile
  4864  01E8                     l1686:	
  4865                           
  4866                           ;gpio.c: 35:     ANSELA = 0x3F;
  4867  01E8  303F               	movlw	63
  4868  01E9  008C               	movwf	12	;volatile
  4869                           
  4870                           ;gpio.c: 40:     WPUE = 0x00;
  4871  01EA  0024               	movlb	4	; select bank4
  4872  01EB  0190               	clrf	16	;volatile
  4873                           
  4874                           ;gpio.c: 41:     WPUB = 0x00;
  4875  01EC  018D               	clrf	13	;volatile
  4876  01ED                     l1688:	
  4877                           
  4878                           ;gpio.c: 42:     OPTION_REGbits.nWPUEN = 1;
  4879  01ED  0021               	movlb	1	; select bank1
  4880  01EE  1795               	bsf	21,7	;volatile
  4881                           
  4882                           ;gpio.c: 48:     APFCON = 0x00;
  4883  01EF  0022               	movlb	2	; select bank2
  4884  01F0  019D               	clrf	29	;volatile
  4885  01F1                     l194:	
  4886  01F1  0008               	return
  4887  01F2                     __end_of_PIN_MANAGER_Initialize:	
  4888                           
  4889                           	psect	text27
  4890  0127                     __ptext27:	
  4891 ;; *************** function _OSCILLATOR_Initialize *****************
  4892 ;; Defined at:
  4893 ;;		line 3 in file "gpio.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;Total ram usage:        0 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_main
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function _OSCILLATOR_Initialize
  4922  0127                     _OSCILLATOR_Initialize:	
  4923  0127                     l1668:	
  4924                           ;incstack = 0
  4925                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4926                           
  4927                           
  4928                           ;gpio.c: 6:     OSCCON = 0x78;
  4929  0127  3078               	movlw	120
  4930  0128  0021               	movlb	1	; select bank1
  4931  0129  0099               	movwf	25	;volatile
  4932  012A                     l1670:	
  4933                           
  4934                           ;gpio.c: 8:     OSCTUNE = 0x00;
  4935  012A  0198               	clrf	24	;volatile
  4936  012B                     l1672:	
  4937                           
  4938                           ;gpio.c: 10:     BORCON = 0x00;
  4939  012B  0022               	movlb	2	; select bank2
  4940  012C  0196               	clrf	22	;volatile
  4941  012D                     l191:	
  4942  012D  0008               	return
  4943  012E                     __end_of_OSCILLATOR_Initialize:	
  4944                           
  4945                           	psect	text28
  4946  0141                     __ptext28:	
  4947 ;; *************** function _I2C_Initialize *****************
  4948 ;; Defined at:
  4949 ;;		line 29 in file "i2c.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_main
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _I2C_Initialize
  4978  0141                     _I2C_Initialize:	
  4979  0141                     l1692:	
  4980                           ;incstack = 0
  4981                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4982                           
  4983                           
  4984                           ;i2c.c: 31:     TRISC4 = 1;
  4985  0141  0021               	movlb	1	; select bank1
  4986  0142  160E               	bsf	14,4	;volatile
  4987                           
  4988                           ;i2c.c: 32:     TRISC3 = 1;
  4989  0143  158E               	bsf	14,3	;volatile
  4990  0144                     l1694:	
  4991                           
  4992                           ;i2c.c: 34:     SSPCON1 = 0B00101000 ;
  4993  0144  3028               	movlw	40
  4994  0145  0024               	movlb	4	; select bank4
  4995  0146  0095               	movwf	21	;volatile
  4996                           
  4997                           ;i2c.c: 35:     SSPADD = (unsigned char)((16000000/4000/100)-1);
  4998  0147  3027               	movlw	39
  4999  0148  0092               	movwf	18	;volatile
  5000  0149                     l1696:	
  5001                           
  5002                           ;i2c.c: 37:     SSPCON2 = 0x00;
  5003  0149  0196               	clrf	22	;volatile
  5004  014A                     l1698:	
  5005                           
  5006                           ;i2c.c: 38:     SSPSTAT =0x00;
  5007  014A  0194               	clrf	20	;volatile
  5008  014B                     l81:	
  5009  014B  0008               	return
  5010  014C                     __end_of_I2C_Initialize:	
  5011                           
  5012                           	psect	text29
  5013  014C                     __ptext29:	
  5014 ;; *************** function _EUSART_Initialize *****************
  5015 ;; Defined at:
  5016 ;;		line 5 in file "uart.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;		None
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;Total ram usage:        0 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_main
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           
  5044                           ;psect for function _EUSART_Initialize
  5045  014C                     _EUSART_Initialize:	
  5046  014C                     l1690:	
  5047                           ;incstack = 0
  5048                           ; Regs used in _EUSART_Initialize: [wreg]
  5049                           
  5050                           
  5051                           ;uart.c: 10:     BAUDCON = 0x08;
  5052  014C  3008               	movlw	8
  5053  014D  0023               	movlb	3	; select bank3
  5054  014E  009F               	movwf	31	;volatile
  5055                           
  5056                           ;uart.c: 13:     RCSTA = 0x80;
  5057  014F  3080               	movlw	128
  5058  0150  009D               	movwf	29	;volatile
  5059                           
  5060                           ;uart.c: 16:     TXSTA = 0x24;
  5061  0151  3024               	movlw	36
  5062  0152  009E               	movwf	30	;volatile
  5063                           
  5064                           ;uart.c: 19:     SPBRGL = 0xA0;
  5065  0153  30A0               	movlw	160
  5066  0154  009B               	movwf	27	;volatile
  5067                           
  5068                           ;uart.c: 22:     SPBRGH = 0x01;
  5069  0155  3001               	movlw	1
  5070  0156  009C               	movwf	28	;volatile
  5071  0157                     l138:	
  5072  0157  0008               	return
  5073  0158                     __end_of_EUSART_Initialize:	
  5074  007E                     btemp	set	126	;btemp
  5075  007E                     wtemp0	set	126


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      0      45
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TC74_Standby@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Standby@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Temperature@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Temperature@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Ready@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Ready@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Write(), 

    write_fcn$1	PTR void  size(1) Largest target is 2
		 -> TC74_Write@buffer(COMMON[2]), 

    read_fcn$1	PTR void  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    S33$1$1	PTR void  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    S33$0$1	PTR void  size(1) Largest target is 2
		 -> TC74_Write@buffer(COMMON[2]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S945_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    Wrappers_I2CMaster_Read@Register	PTR void  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    Wrappers_I2CMaster_Read@DatatoSend	PTR unsigned char  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    TC74_Temperature@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    TC74_Ready@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    TC74_Read@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Read@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Read@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    TC74_Write@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Write@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Initialize@read_fcn	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Initialize@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Initialize@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Initialize@write_fcn	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Initialize@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    S33$I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74Data.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    S33$I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74Data.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 


Critical Paths under _main in COMMON

    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _TC74_Temperature->_TC74_Ready
    _TC74_Ready->_TC74_Read
    _TC74_Read->_Wrappers_I2CMaster_Read
    _Wrappers_I2CMaster_Read->_I2C_Read

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _TC74_Temperature->_TC74_Ready
    _TC74_Ready->_TC74_Read

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8830
                                             78 BANK0      2     2      0
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TC74_Initialize
                   _TC74_Temperature
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5936
                                             70 BANK0      8     4      4
                   _TC74_Temperature (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5806
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5478
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4133
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2510
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     812
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _TC74_Temperature                                     4     4      0    2501
                                              7 BANK0      4     4      0
                          _TC74_Read
                         _TC74_Ready
 ---------------------------------------------------------------------------------
 (2) _TC74_Ready                                           3     3      0    1205
                                             13 COMMON     1     1      0
                                              5 BANK0      2     2      0
                          _TC74_Read
 ---------------------------------------------------------------------------------
 (3) _TC74_Read                                            7     5      2    1126
                                             11 COMMON     2     0      2
                                              0 BANK0      5     5      0
            _Wrappers_I2CMaster_Read *
 ---------------------------------------------------------------------------------
 (4) _Wrappers_I2CMaster_Read                              5     2      3     413
                                              6 COMMON     5     2      3
                         _I2C_RStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_Read                                             6     4      2     121
                                              0 COMMON     6     4      2
                       _I2C_Send_ACK
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (6) _I2C_Send_ACK                                         0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_RStart                                           0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (6) _I2C_Wait1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TC74_Initialize                                      7     2      5     393
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
   _I2C_Initialize
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _TC74_Initialize
   _TC74_Temperature
     _TC74_Read
       _Wrappers_I2CMaster_Read *
         _I2C_RStart
           _I2C_Wait1
         _I2C_Read
           _I2C_Send_ACK
             _I2C_Wait1
           _I2C_Wait1
         _I2C_Start
           _I2C_Wait1
         _I2C_Stop
           _I2C_Wait1
         _I2C_Write
           _I2C_Wait1
     _TC74_Ready
       _TC74_Read
         _Wrappers_I2CMaster_Read *
           _I2C_RStart
             _I2C_Wait1
           _I2C_Read
             _I2C_Send_ACK
               _I2C_Wait1
             _I2C_Wait1
           _I2C_Start
             _I2C_Wait1
           _I2C_Stop
             _I2C_Wait1
           _I2C_Write
             _I2C_Wait1
   _printf
     _TC74_Temperature (ARG)
       _TC74_Read
         _Wrappers_I2CMaster_Read *
           _I2C_RStart
             _I2C_Wait1
           _I2C_Read
             _I2C_Send_ACK
               _I2C_Wait1
             _I2C_Wait1
           _I2C_Start
             _I2C_Wait1
           _I2C_Stop
             _I2C_Wait1
           _I2C_Write
             _I2C_Wait1
       _TC74_Ready
         _TC74_Read
           _Wrappers_I2CMaster_Read *
             _I2C_RStart
               _I2C_Wait1
             _I2C_Read
               _I2C_Send_ACK
                 _I2C_Wait1
               _I2C_Wait1
             _I2C_Start
               _I2C_Wait1
             _I2C_Stop
               _I2C_Wait1
             _I2C_Write
               _I2C_Wait1
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      2D       7       56.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Apr 19 16:52:48 2020

                        ?_TC74_Ready 0070                   __size_of_I2C_Wait1 000C  
           TC74_Initialize@AddrSlave 0070                   __size_of_I2C_Start 0006  
                        __CFG_CP$OFF 0000                   __size_of_I2C_Write 0009  
                                 l33 01A3                                   l42 0262  
                                 l52 018A                                   l81 014B  
                                 l57 02B9                                   l58 02BA  
                                 l84 0158                                   l87 0163  
                                 l96 0114                                   l99 0108  
                __size_of_I2C_RStart 0006                                  l102 011A  
                                l111 0211                                  l105 010E  
                                l108 0136                                  l117 028D  
                                l141 0138                                  l144 0140  
                                l138 0157                                  l147 0120  
                                l412 02EB                                  l405 049B  
                                l191 012D                                  l194 01F1  
                                l530 0585                                  l370 03A6  
                                l371 03B4                                  l516 0675  
                                l372 03C0                                  l380 06F6  
                                l517 0686                                  l381 070E  
                                l367 0384                                  l375 06D0  
                                l384 077E                                  l376 06D9  
                                l529 0574                                  l900 0175  
                                l398 07F4                                  l906 01BC  
                                l870 01D6                                  l873 01D6  
                                l885 0367                                  l893 0239  
                       __CFG_CPD$OFF 0000                                  u700 015D  
                                u701 015C                                  u710 0163  
                                u711 0162                                  u720 032E  
                                u800 036F                                  u721 032D  
                                u801 036E                                  u730 0333  
                                u810 037D                                  u731 0332  
                                u811 037C                                  u900 05F6  
                                u740 0342                                  u820 03A6  
                                u901 05F5                                  u741 0341  
                                u821 03A5                                  u910 0609  
                                u750 035F                                  u830 03AB  
                                u911 0608                                  u751 035E  
                                u831 03AA                                  u920 0633  
                                u840 01CA                                  u760 0239  
                                u921 0632                                  u841 01C9  
                                u761 0238                                  u825 03A2  
                                u930 0652                                  u850 0591  
                                u690 013D                                  u770 01B6  
                                u931 0651                                  u851 0590  
                                u691 013C                                  u755 035B  
                                u771 01B5                                  u780 020B  
                                u940 0657                                  u781 0208  
                                u941 0656                                  u925 062F  
                                u845 01C6                                  u870 05BC  
                                u871 05BB                                  u960 04A7  
                                u961 04A6                                  u794 020D  
                                u890 05E6                                  u980 04D2  
                                u981 04D1                                  _abs 01BD  
                                _pad 0368                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
            __end_of_TC74_Initialize 01A4                         __CFG_LVP$OFF 0000  
                               ?_abs 0073                                 l1400 0115  
                               l1402 0118                                 l1420 0205  
                               l1412 01F2                                 l1404 012F  
                               l1500 04F1                                 l1422 020D  
                               l1414 01F5                                 l1406 0132  
                               l1510 0511                                 l1502 04FE  
                               l1350 011C                                 l1430 036F  
                               l1352 0158                                 l1424 0210  
                               l1416 01FA                                 l1408 0135  
                               l1520 0263                                 l1600 0260  
                               l1512 0533                                 l1504 0501  
                               l1360 0333                                 l1440 0393  
                               l1432 0378                                 l1354 015D  
                               l1370 0109                                 l1418 0202  
                               l1530 0278                                 l1522 0267  
                               l1514 0543                                 l1506 0509  
                               l1450 01CA                                 l1346 0138  
                               l1362 0338                                 l1442 0398  
                               l1434 037D                                 l1610 03E1  
                               l1700 018C                                 l1372 010C  
                               l1532 027D                                 l1524 026A  
                               l1460 05BC                                 l1452 0586  
                               l1508 050D                                 l1516 0551  
                               l1348 013D                                 l1364 0342  
                               l1356 0329                                 l1380 022A  
                               l1444 03AB                                 l1436 0382  
                               l1428 036A                                 l1540 06AC  
                               l1620 0429                                 l1612 03E5  
                               l1604 03C3                                 l1702 0193  
                               l1534 028A                                 l1526 026E  
                               l1710 029A                                 l1470 05F9  
                               l1462 05DB                                 l1454 0587  
                               l1518 0556                                 l1366 035F  
                               l1358 032E                                 l1374 0214  
                               l1382 01A5                                 l1438 0387  
                               l1550 06FE                                 l1542 06B2  
                               l1630 0467                                 l1614 03F7  
                               l1606 03D4                                 l1704 019B  
                               l1392 010F                                 l1528 0275  
                               l1712 02A6                                 l1480 0633  
                               l1472 0601                                 l1464 05DF  
                               l1456 0591                                 l1448 01BD  
                               l1376 0217                                 l1384 01AA  
                               l1560 071B                                 l1552 0704  
                               l1544 06D5                                 l1536 0689  
                               l1624 0443                                 l1616 0408  
                               l1608 03DC                                 l1640 0478  
                               l1720 0164                                 l1394 0112  
                               l1650 0178                                 l1714 02AD  
                               l1706 0290                                 l1482 0643  
                               l1474 0605                                 l1466 05E9  
                               l1458 05B2                                 l1490 049C  
                               l1378 0225                                 l1386 01AE  
                               l1570 0799                                 l1562 0749  
                               l1554 0709                                 l1546 06E8  
                               l1538 0699                                 l1642 0491  
                               l1626 0454                                 l1634 046D  
                               l1618 0410                                 l1722 0169  
                               l1730 0309                                 l1396 0103  
                               l1652 0184                                 l1716 02B5  
                               l1708 0291                                 l1484 0644  
                               l1476 0609                                 l1468 05F6  
                               l1492 049D                                 l1388 01B6  
                               l1580 07C5                                 l1572 07A6  
                               l1564 074D                                 l1556 0713  
                               l1548 06EE                                 l1636 0475  
                               l1628 045C                                 l1660 02C5  
                               l1732 0315                                 l1670 012A  
                               l1398 0106                                 l1478 0611  
                               l1486 0652                                 l1494 04A7  
                               l1582 07CA                                 l1590 07E1  
                               l1574 07B4                                 l1566 0751  
                               l1558 0716                                 l1662 02D9  
                               l1726 02EC                                 l1672 012B  
                               l1680 01E1                                 l1648 0178  
                               l1488 0657                                 l1496 04C8  
                               l1584 07D0                                 l1568 078C  
                               l1576 07B9                                 l1664 02E3  
                               l1656 02BD                                 l1728 02F8  
                               l1690 014C                                 l1682 01E3  
                               l1674 01D7                                 l1594 023C  
                               l1498 04D2                                 l1586 07D5  
                               l1578 07C0                                 l1658 02C1  
                               l1692 0141                                 l1668 0127  
                               l1684 01E5                                 l1676 01DC  
                               l1596 0240                                 l1588 07D9  
                               l1694 0144                                 l1686 01E8  
                               l1678 01DF                                 l1598 024A  
                               l1696 0149                                 l1688 01ED  
                               l1698 014A                                 ?_pad 0024  
                               STR_1 0800                                 u1000 04FE  
                               u1001 04FD                                 u1010 0511  
                               u1011 0510                                 u1020 0533  
                               u1100 06D5                                 u1021 0532  
                               u1101 06D4                                 u1030 0551  
                               u1110 06E8                                 u1031 0550  
                               u1111 06E7                                 u1040 0556  
                               u1200 07C5                                 u1120 0704  
                               u1041 0555                                 u1025 052F  
                               u1201 07C4                                 u1121 0703  
                               u1210 07D0                                 u1130 0709  
                               u1211 07CF                                 u1131 0708  
                               u1115 06E4                                 u1220 024A  
                               u1300 029A                                 u1140 078C  
                               u1060 06A4                                 u1221 0249  
                               u1301 0299                                 u1141 078B  
                               u1061 06A2                                 u1310 02AD  
                               u1150 0799                                 u1070 06A5  
                               u1230 03D4                                 u1311 02AC  
                               u1151 0798                                 u1231 03D3  
                               u1160 07A6                                 u1080 06B2  
                               u1240 03F7                                 u1161 07A5  
                               u1145 0788                                 u1081 06B1  
                               u1241 03F6                                 u1170 07B4  
                               u1250 0408                                 u1171 07B3  
                               u1251 0407                                 u1180 07B9  
                               u1260 0454                                 u1181 07B8  
                               u1165 07A2                                 u1261 0453  
                               _LATA 010C                                 u1270 0189  
                               u1190 07C0                                 _LATB 010D  
                               u1271 0187                                 u1191 07BF  
                               u1175 07B0                                 _LATC 010E  
                               u1280 018A                                 u1337 030F  
                               _LATE 0110                                 u1290 02E3  
                               u1291 02E2                                 _WPUB 020D  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 abs@a 0073  
                               _dbuf 00A8                                 _main 02EC  
                               _dtoa 0687                                 _prec 00A4  
                   __end_of_I2C_Read 0212                                 _nout 00A0  
                               pad@i 0028                                 pad@p 0025  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               pad@w 002A                   __size_of_TC74_Read 0029  
                               btemp 007E                     __end_of_I2C_Stop 011B  
                      __CFG_BOREN$ON 0000                __size_of_I2C_Send_ACK 0006  
                               start 0002                        __CFG_MCLRE$ON 0000  
                              ??_abs 0075                                ??_pad 0027  
                      __CFG_PLLEN$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0007        __end_of_OSCILLATOR_Initialize 012E  
                    __end_of___aodiv 0687                                ?_main 0070  
                              ?_dtoa 0030                      __end_of___aomod 0586  
                              _ACKDT 10B5                        __CFG_WDTE$OFF 0000  
                              _RCREG 0199                                _RCSTA 019D  
                       vfpfcnvrt@fmt 004E                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISE 0090                                _TXREG 019A  
                              _TXSTA 019E                                u86lld 05B0  
                              u95lld 0675                                u88lld 05DB  
                              u97lld 04C6                                u99lld 04F1  
                              _flags 00A6                                _fputc 0329  
                              _fputs 0212                         TC74_Read@Obj 0024  
                       _I2C_Send_ACK 0109                                pad@fp 002C  
                              _width 00A2                    __end_of_I2C_Wait1 0164  
                              _putch 011B                                dtoa@d 0030  
                              dtoa@i 004C                                dtoa@n 0044  
                              dtoa@p 003D                  __size_of_TC74_Ready 0015  
                              dtoa@s 0042                                dtoa@w 0040  
                  __end_of_I2C_Start 0115                    __end_of_I2C_Write 0137  
                              pclath 000A                                status 0003  
                              wtemp0 007E               TC74_Read@TC74_Register 007B  
                    __initialization 07F5                         __end_of_main 0329  
                       __end_of_dtoa 07F5                       ??_EUSART_Write 0070  
                             ??_main 006E                               ??_dtoa 0038  
                  __end_of_TC74_Read 0263                     ?_TC74_Initialize 0070  
                       ??_I2C_RStart 0070                               ?_fputc 0072  
                             ?_fputs 007A                               _APFCON 011D  
                             _ANSELA 018C                               ?_putch 0070  
                             _ANSELB 018D                               _BORCON 0116  
                             _OSCCON 0099                               u105lld 0574  
                             u109lld 06D0             __end_of_TC74_Temperature 02BB  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _SSPADD 0212                               _TRISC3 0473  
                             _TRISC4 0474                               _SSPBUF 0211  
                     __CFG_PWRTE$OFF 0000                         vfprintf@cfmt 0064  
                          ??___aodiv 0070                            ??___aomod 0070  
                     __CFG_STVREN$ON 0000                   __end_of_I2C_RStart 0109  
            __size_of_I2C_Initialize 000B                               _printf 0164  
                             pad@buf 0024     __size_of_Wrappers_I2CMaster_Read 002B  
                             dtoa@fp 003F                               _strlen 01A4  
                             fputc@c 0072                               fputs@c 0020  
                             fputs@i 0021                               fputs@s 0023  
                      TC74_Ready@Obj 0025                            ?_I2C_Read 0070  
                          ?_I2C_Stop 0070                     __end_of_vfprintf 02EC  
      Wrappers_I2CMaster_Read@amount 0078              __end_of__initialization 07FD  
                 TC74_Initialize@Obj 0076                       __pcstackCOMMON 0070  
                       ??_TC74_Ready 007D             TC74_Initialize@write_fcn 0071  
                      __end_of_fputc 0368                        __end_of_fputs 023A  
                      __end_of_putch 0121                       _OPTION_REGbits 0095  
                         ??_I2C_Read 0072                           ??_I2C_Stop 0070  
                            ??_fputc 0075                              ??_fputs 007B  
                            ??_putch 0071                           __pbssBANK1 00A0  
                 __end_of_TC74_Ready 018B                 __end_of_EUSART_Write 0141  
                    __CFG_VCAPEN$OFF 0000                           __pmaintext 02EC  
                            _BAUDCON 019F                              ?_printf 0066  
                            ?_strlen 0070                   __size_of_vfpfcnvrt 00DB  
                            _OSCTUNE 0098                              _SSPCON1 0215  
                            _SSPCON2 0216                              _SSPSTAT 0214  
                          _I2C_Wait1 0158                            _I2C_Start 010F  
                          _I2C_Write 012E                              ___aodiv 0586  
                            ___aomod 049C  TC74_Temperature@Digital_Temperature 002A  
                          ?_vfprintf 005E              _Wrappers_I2CMaster_Read 0263  
                     _I2C_Initialize 0141                              __ptext1 0164  
                            __ptext2 02BB                              __ptext3 03C1  
                            __ptext4 0687                              __ptext5 0368  
                            __ptext6 01A4                              __ptext7 0212  
                            __ptext8 0329                              __ptext9 011B  
                    __size_of_printf 0012                      __size_of_strlen 0019  
              _OSCILLATOR_Initialize 0127                         __size_of_abs 001A  
                       __size_of_pad 0059             ??_PIN_MANAGER_Initialize 0070  
                          _TC74_Read 023A                              clrloop0 0122  
               end_of_initialization 07FD                              fputc@fp 0074  
                            fputs@fp 007A                    ?_TC74_Temperature 0070  
                         ?_I2C_Wait1 0070                           ?_I2C_Start 0070  
                         ?_I2C_Write 0070                    _EUSART_Initialize 014C  
                 ??_TC74_Temperature 0027                   ?_EUSART_Initialize 0070  
                  __end_of_vfpfcnvrt 049C                            _RCSTAbits 019D  
             __end_of_I2C_Initialize 014C                           ??_vfprintf 0061  
                            strlen@a 0073                              strlen@s 0074  
                ??_EUSART_Initialize 0070                  TC74_Temperature@Obj 0029  
                   __CFG_FOSC$INTOSC 0000                __size_of_EUSART_Write 000A  
                         ?_TC74_Read 007B                    __size_of_I2C_Read 0020  
                  __size_of_I2C_Stop 0006            __end_of_EUSART_Initialize 0158  
           __size_of_TC74_Initialize 0019      Wrappers_I2CMaster_Read@Register 0077  
          ??_Wrappers_I2CMaster_Read 0079                      ?_I2C_Initialize 0070  
                        vfpfcnvrt@ap 004F                          vfpfcnvrt@fp 005D  
                        vfpfcnvrt@ll 0055                         _EUSART_Write 0137  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 0176  
                     __end_of_strlen 01BD                  start_initialization 07F5  
    __size_of_PIN_MANAGER_Initialize 001B                          __end_of_abs 01D7  
                        __end_of_pad 03C1     Wrappers_I2CMaster_Read@Address7b 0076  
                        putch@txData 0071                          ??_I2C_Wait1 0070  
                        ??_I2C_Start 0070                          ??_I2C_Write 0070  
                        vfprintf@fmt 005E              TC74_Initialize@read_fcn 0073  
                           ??_printf 006A                             ??_strlen 0072  
                          ___latbits 0003                        __pcstackBANK0 0020  
                   ___aodiv@dividend 0028                          ??_TC74_Read 0020  
    __end_of_Wrappers_I2CMaster_Read 028E                        ?_I2C_Send_ACK 0070  
         __size_of_EUSART_Initialize 000C               _PIN_MANAGER_Initialize 01D7  
                        I2C_Read@ack 0070                    ??_TC74_Initialize 0075  
                           ?___aodiv 0020                             ?___aomod 0020  
                   ___aodiv@quotient 0073                    __size_of_vfprintf 0031  
                    I2C_Read@tempbuf 0074                             _I2C_Read 01F2  
                           _I2C_Stop 0115                       ??_I2C_Send_ACK 0070  
                     __size_of_fputc 003F                       __size_of_fputs 0028  
                     __size_of_putch 0006                             _TC74Data 00C8  
                          clear_ram0 0121                             _PIR1bits 0011  
                          _vfpfcnvrt 03C1            __size_of_TC74_Temperature 002D  
  Wrappers_I2CMaster_Read@DatatoSend 007A                           _I2C_RStart 0103  
                   ??_I2C_Initialize 0070                           vfprintf@ap 0060  
                         vfprintf@fp 0063                        I2C_Write@data 0070  
            ??_OSCILLATOR_Initialize 0070                     __size_of___aodiv 0101  
                   __size_of___aomod 00EA                           ?_vfpfcnvrt 004E  
                    ___aodiv@divisor 0020                      ___aodiv@counter 0071  
                           _dtoa$646 003B             _Wrappers_I2CMaster_Write 0000  
                           __ptext10 0137                             __ptext11 01BD  
                           __ptext20 010F                             __ptext12 049C  
                           __ptext21 01F2                             __ptext13 0586  
                           __ptext22 0109                             __ptext14 028E  
                           __ptext23 0103                             __ptext15 0176  
                           __ptext24 0158                             __ptext16 023A  
                           __ptext25 018B                             __ptext17 0263  
                           __ptext26 01D7                             __ptext18 012E  
                           __ptext27 0127                             __ptext19 0115  
                           __ptext28 0141                             __ptext29 014C  
                      __size_of_main 003D                        __size_of_dtoa 016E  
                         _TC74_Ready 0176                 __end_of_I2C_Send_ACK 010F  
                    TC74_Read@amount 007C                      TC74_Read@buffer 0022  
                           _vfprintf 02BB                            printf@fmt 0066  
                   ___aomod@dividend 0028                          ?_I2C_RStart 0070  
                    TC74_Ready@Ready 0026                      _TC74_Initialize 018B  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
           ?_Wrappers_I2CMaster_Read 0076                             printf@ap 006D  
                    ___aomod@divisor 0020                          ??_vfpfcnvrt 0050  
                    ___aomod@counter 0071                     _TC74_Temperature 028E  
                      __pstringtext1 0800                        __pstringtext2 0000  
                        _SSPCON2bits 0216                   EUSART_Write@txData 0070  
                       ___aodiv@sign 0072          TC74_Temperature@Temperature 0028  
     __end_of_PIN_MANAGER_Initialize 01F2                         ___aomod@sign 0072  
