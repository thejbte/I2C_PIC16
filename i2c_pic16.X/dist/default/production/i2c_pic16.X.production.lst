

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 18 18:53:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1937 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0110                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011D                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018F                     	;# 
   153  0190                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  020D                     	;# 
   175  0210                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0291                     	;# 
   185  0291                     	;# 
   186  0292                     	;# 
   187  0293                     	;# 
   188  0294                     	;# 
   189  0295                     	;# 
   190  0295                     	;# 
   191  0296                     	;# 
   192  0298                     	;# 
   193  0298                     	;# 
   194  0299                     	;# 
   195  029A                     	;# 
   196  029B                     	;# 
   197  029C                     	;# 
   198  029C                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  029F                     	;# 
   202  0311                     	;# 
   203  0311                     	;# 
   204  0312                     	;# 
   205  0313                     	;# 
   206  0314                     	;# 
   207  0315                     	;# 
   208  0315                     	;# 
   209  0316                     	;# 
   210  0318                     	;# 
   211  0318                     	;# 
   212  0319                     	;# 
   213  031A                     	;# 
   214  031C                     	;# 
   215  031C                     	;# 
   216  031D                     	;# 
   217  031E                     	;# 
   218  0394                     	;# 
   219  0395                     	;# 
   220  0396                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0791                     	;# 
   228  0792                     	;# 
   229  0793                     	;# 
   230  0794                     	;# 
   231  0795                     	;# 
   232  0798                     	;# 
   233  0799                     	;# 
   234  079A                     	;# 
   235  07A0                     	;# 
   236  07A1                     	;# 
   237  07A2                     	;# 
   238  07A3                     	;# 
   239  07A4                     	;# 
   240  07A5                     	;# 
   241  07A6                     	;# 
   242  07A7                     	;# 
   243  07A8                     	;# 
   244  07A9                     	;# 
   245  07AA                     	;# 
   246  07AB                     	;# 
   247  0FE4                     	;# 
   248  0FE5                     	;# 
   249  0FE6                     	;# 
   250  0FE7                     	;# 
   251  0FE8                     	;# 
   252  0FE9                     	;# 
   253  0FEA                     	;# 
   254  0FEB                     	;# 
   255  0FED                     	;# 
   256  0FEE                     	;# 
   257  0FEF                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  0008                     	;# 
   267  0009                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  000E                     	;# 
   273  000F                     	;# 
   274  0010                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0110                     	;# 
   313  0111                     	;# 
   314  0112                     	;# 
   315  0113                     	;# 
   316  0114                     	;# 
   317  0115                     	;# 
   318  0116                     	;# 
   319  0117                     	;# 
   320  0118                     	;# 
   321  0119                     	;# 
   322  011A                     	;# 
   323  011B                     	;# 
   324  011D                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  018F                     	;# 
   328  0190                     	;# 
   329  0191                     	;# 
   330  0191                     	;# 
   331  0192                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0194                     	;# 
   336  0195                     	;# 
   337  0196                     	;# 
   338  0199                     	;# 
   339  019A                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020D                     	;# 
   350  0210                     	;# 
   351  0211                     	;# 
   352  0212                     	;# 
   353  0213                     	;# 
   354  0214                     	;# 
   355  0215                     	;# 
   356  0215                     	;# 
   357  0216                     	;# 
   358  0217                     	;# 
   359  0291                     	;# 
   360  0291                     	;# 
   361  0292                     	;# 
   362  0293                     	;# 
   363  0294                     	;# 
   364  0295                     	;# 
   365  0295                     	;# 
   366  0296                     	;# 
   367  0298                     	;# 
   368  0298                     	;# 
   369  0299                     	;# 
   370  029A                     	;# 
   371  029B                     	;# 
   372  029C                     	;# 
   373  029C                     	;# 
   374  029D                     	;# 
   375  029E                     	;# 
   376  029F                     	;# 
   377  0311                     	;# 
   378  0311                     	;# 
   379  0312                     	;# 
   380  0313                     	;# 
   381  0314                     	;# 
   382  0315                     	;# 
   383  0315                     	;# 
   384  0316                     	;# 
   385  0318                     	;# 
   386  0318                     	;# 
   387  0319                     	;# 
   388  031A                     	;# 
   389  031C                     	;# 
   390  031C                     	;# 
   391  031D                     	;# 
   392  031E                     	;# 
   393  0394                     	;# 
   394  0395                     	;# 
   395  0396                     	;# 
   396  0415                     	;# 
   397  0416                     	;# 
   398  0417                     	;# 
   399  041C                     	;# 
   400  041D                     	;# 
   401  041E                     	;# 
   402  0791                     	;# 
   403  0792                     	;# 
   404  0793                     	;# 
   405  0794                     	;# 
   406  0795                     	;# 
   407  0798                     	;# 
   408  0799                     	;# 
   409  079A                     	;# 
   410  07A0                     	;# 
   411  07A1                     	;# 
   412  07A2                     	;# 
   413  07A3                     	;# 
   414  07A4                     	;# 
   415  07A5                     	;# 
   416  07A6                     	;# 
   417  07A7                     	;# 
   418  07A8                     	;# 
   419  07A9                     	;# 
   420  07AA                     	;# 
   421  07AB                     	;# 
   422  0FE4                     	;# 
   423  0FE5                     	;# 
   424  0FE6                     	;# 
   425  0FE7                     	;# 
   426  0FE8                     	;# 
   427  0FE9                     	;# 
   428  0FEA                     	;# 
   429  0FEB                     	;# 
   430  0FED                     	;# 
   431  0FEE                     	;# 
   432  0FEF                     	;# 
   433  0000                     	;# 
   434  0001                     	;# 
   435  0002                     	;# 
   436  0003                     	;# 
   437  0004                     	;# 
   438  0005                     	;# 
   439  0006                     	;# 
   440  0007                     	;# 
   441  0008                     	;# 
   442  0009                     	;# 
   443  000A                     	;# 
   444  000B                     	;# 
   445  000C                     	;# 
   446  000D                     	;# 
   447  000E                     	;# 
   448  000F                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0013                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  008F                     	;# 
   468  0090                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0095                     	;# 
   473  0096                     	;# 
   474  0097                     	;# 
   475  0098                     	;# 
   476  0099                     	;# 
   477  009A                     	;# 
   478  009B                     	;# 
   479  009B                     	;# 
   480  009C                     	;# 
   481  009D                     	;# 
   482  009E                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0110                     	;# 
   488  0111                     	;# 
   489  0112                     	;# 
   490  0113                     	;# 
   491  0114                     	;# 
   492  0115                     	;# 
   493  0116                     	;# 
   494  0117                     	;# 
   495  0118                     	;# 
   496  0119                     	;# 
   497  011A                     	;# 
   498  011B                     	;# 
   499  011D                     	;# 
   500  018C                     	;# 
   501  018D                     	;# 
   502  018F                     	;# 
   503  0190                     	;# 
   504  0191                     	;# 
   505  0191                     	;# 
   506  0192                     	;# 
   507  0193                     	;# 
   508  0193                     	;# 
   509  0193                     	;# 
   510  0194                     	;# 
   511  0195                     	;# 
   512  0196                     	;# 
   513  0199                     	;# 
   514  019A                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019E                     	;# 
   523  019F                     	;# 
   524  020D                     	;# 
   525  0210                     	;# 
   526  0211                     	;# 
   527  0212                     	;# 
   528  0213                     	;# 
   529  0214                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0216                     	;# 
   533  0217                     	;# 
   534  0291                     	;# 
   535  0291                     	;# 
   536  0292                     	;# 
   537  0293                     	;# 
   538  0294                     	;# 
   539  0295                     	;# 
   540  0295                     	;# 
   541  0296                     	;# 
   542  0298                     	;# 
   543  0298                     	;# 
   544  0299                     	;# 
   545  029A                     	;# 
   546  029B                     	;# 
   547  029C                     	;# 
   548  029C                     	;# 
   549  029D                     	;# 
   550  029E                     	;# 
   551  029F                     	;# 
   552  0311                     	;# 
   553  0311                     	;# 
   554  0312                     	;# 
   555  0313                     	;# 
   556  0314                     	;# 
   557  0315                     	;# 
   558  0315                     	;# 
   559  0316                     	;# 
   560  0318                     	;# 
   561  0318                     	;# 
   562  0319                     	;# 
   563  031A                     	;# 
   564  031C                     	;# 
   565  031C                     	;# 
   566  031D                     	;# 
   567  031E                     	;# 
   568  0394                     	;# 
   569  0395                     	;# 
   570  0396                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  041C                     	;# 
   575  041D                     	;# 
   576  041E                     	;# 
   577  0791                     	;# 
   578  0792                     	;# 
   579  0793                     	;# 
   580  0794                     	;# 
   581  0795                     	;# 
   582  0798                     	;# 
   583  0799                     	;# 
   584  079A                     	;# 
   585  07A0                     	;# 
   586  07A1                     	;# 
   587  07A2                     	;# 
   588  07A3                     	;# 
   589  07A4                     	;# 
   590  07A5                     	;# 
   591  07A6                     	;# 
   592  07A7                     	;# 
   593  07A8                     	;# 
   594  07A9                     	;# 
   595  07AA                     	;# 
   596  07AB                     	;# 
   597  0FE4                     	;# 
   598  0FE5                     	;# 
   599  0FE6                     	;# 
   600  0FE7                     	;# 
   601  0FE8                     	;# 
   602  0FE9                     	;# 
   603  0FEA                     	;# 
   604  0FEB                     	;# 
   605  0FED                     	;# 
   606  0FEE                     	;# 
   607  0FEF                     	;# 
   608  0000                     	;# 
   609  0001                     	;# 
   610  0002                     	;# 
   611  0003                     	;# 
   612  0004                     	;# 
   613  0005                     	;# 
   614  0006                     	;# 
   615  0007                     	;# 
   616  0008                     	;# 
   617  0009                     	;# 
   618  000A                     	;# 
   619  000B                     	;# 
   620  000C                     	;# 
   621  000D                     	;# 
   622  000E                     	;# 
   623  000F                     	;# 
   624  0010                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  0019                     	;# 
   634  001A                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001E                     	;# 
   638  001F                     	;# 
   639  008C                     	;# 
   640  008D                     	;# 
   641  008E                     	;# 
   642  008F                     	;# 
   643  0090                     	;# 
   644  0091                     	;# 
   645  0092                     	;# 
   646  0093                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0097                     	;# 
   650  0098                     	;# 
   651  0099                     	;# 
   652  009A                     	;# 
   653  009B                     	;# 
   654  009B                     	;# 
   655  009C                     	;# 
   656  009D                     	;# 
   657  009E                     	;# 
   658  010C                     	;# 
   659  010D                     	;# 
   660  010E                     	;# 
   661  010F                     	;# 
   662  0110                     	;# 
   663  0111                     	;# 
   664  0112                     	;# 
   665  0113                     	;# 
   666  0114                     	;# 
   667  0115                     	;# 
   668  0116                     	;# 
   669  0117                     	;# 
   670  0118                     	;# 
   671  0119                     	;# 
   672  011A                     	;# 
   673  011B                     	;# 
   674  011D                     	;# 
   675  018C                     	;# 
   676  018D                     	;# 
   677  018F                     	;# 
   678  0190                     	;# 
   679  0191                     	;# 
   680  0191                     	;# 
   681  0192                     	;# 
   682  0193                     	;# 
   683  0193                     	;# 
   684  0193                     	;# 
   685  0194                     	;# 
   686  0195                     	;# 
   687  0196                     	;# 
   688  0199                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019B                     	;# 
   692  019B                     	;# 
   693  019B                     	;# 
   694  019C                     	;# 
   695  019C                     	;# 
   696  019D                     	;# 
   697  019E                     	;# 
   698  019F                     	;# 
   699  020D                     	;# 
   700  0210                     	;# 
   701  0211                     	;# 
   702  0212                     	;# 
   703  0213                     	;# 
   704  0214                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0217                     	;# 
   709  0291                     	;# 
   710  0291                     	;# 
   711  0292                     	;# 
   712  0293                     	;# 
   713  0294                     	;# 
   714  0295                     	;# 
   715  0295                     	;# 
   716  0296                     	;# 
   717  0298                     	;# 
   718  0298                     	;# 
   719  0299                     	;# 
   720  029A                     	;# 
   721  029B                     	;# 
   722  029C                     	;# 
   723  029C                     	;# 
   724  029D                     	;# 
   725  029E                     	;# 
   726  029F                     	;# 
   727  0311                     	;# 
   728  0311                     	;# 
   729  0312                     	;# 
   730  0313                     	;# 
   731  0314                     	;# 
   732  0315                     	;# 
   733  0315                     	;# 
   734  0316                     	;# 
   735  0318                     	;# 
   736  0318                     	;# 
   737  0319                     	;# 
   738  031A                     	;# 
   739  031C                     	;# 
   740  031C                     	;# 
   741  031D                     	;# 
   742  031E                     	;# 
   743  0394                     	;# 
   744  0395                     	;# 
   745  0396                     	;# 
   746  0415                     	;# 
   747  0416                     	;# 
   748  0417                     	;# 
   749  041C                     	;# 
   750  041D                     	;# 
   751  041E                     	;# 
   752  0791                     	;# 
   753  0792                     	;# 
   754  0793                     	;# 
   755  0794                     	;# 
   756  0795                     	;# 
   757  0798                     	;# 
   758  0799                     	;# 
   759  079A                     	;# 
   760  07A0                     	;# 
   761  07A1                     	;# 
   762  07A2                     	;# 
   763  07A3                     	;# 
   764  07A4                     	;# 
   765  07A5                     	;# 
   766  07A6                     	;# 
   767  07A7                     	;# 
   768  07A8                     	;# 
   769  07A9                     	;# 
   770  07AA                     	;# 
   771  07AB                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000D                     	;# 
   797  000E                     	;# 
   798  000F                     	;# 
   799  0010                     	;# 
   800  0011                     	;# 
   801  0012                     	;# 
   802  0013                     	;# 
   803  0015                     	;# 
   804  0016                     	;# 
   805  0016                     	;# 
   806  0017                     	;# 
   807  0018                     	;# 
   808  0019                     	;# 
   809  001A                     	;# 
   810  001B                     	;# 
   811  001C                     	;# 
   812  001E                     	;# 
   813  001F                     	;# 
   814  008C                     	;# 
   815  008D                     	;# 
   816  008E                     	;# 
   817  008F                     	;# 
   818  0090                     	;# 
   819  0091                     	;# 
   820  0092                     	;# 
   821  0093                     	;# 
   822  0095                     	;# 
   823  0096                     	;# 
   824  0097                     	;# 
   825  0098                     	;# 
   826  0099                     	;# 
   827  009A                     	;# 
   828  009B                     	;# 
   829  009B                     	;# 
   830  009C                     	;# 
   831  009D                     	;# 
   832  009E                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0110                     	;# 
   838  0111                     	;# 
   839  0112                     	;# 
   840  0113                     	;# 
   841  0114                     	;# 
   842  0115                     	;# 
   843  0116                     	;# 
   844  0117                     	;# 
   845  0118                     	;# 
   846  0119                     	;# 
   847  011A                     	;# 
   848  011B                     	;# 
   849  011D                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  018F                     	;# 
   853  0190                     	;# 
   854  0191                     	;# 
   855  0191                     	;# 
   856  0192                     	;# 
   857  0193                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0194                     	;# 
   861  0195                     	;# 
   862  0196                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019C                     	;# 
   871  019D                     	;# 
   872  019E                     	;# 
   873  019F                     	;# 
   874  020D                     	;# 
   875  0210                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0217                     	;# 
   884  0291                     	;# 
   885  0291                     	;# 
   886  0292                     	;# 
   887  0293                     	;# 
   888  0294                     	;# 
   889  0295                     	;# 
   890  0295                     	;# 
   891  0296                     	;# 
   892  0298                     	;# 
   893  0298                     	;# 
   894  0299                     	;# 
   895  029A                     	;# 
   896  029B                     	;# 
   897  029C                     	;# 
   898  029C                     	;# 
   899  029D                     	;# 
   900  029E                     	;# 
   901  029F                     	;# 
   902  0311                     	;# 
   903  0311                     	;# 
   904  0312                     	;# 
   905  0313                     	;# 
   906  0314                     	;# 
   907  0315                     	;# 
   908  0315                     	;# 
   909  0316                     	;# 
   910  0318                     	;# 
   911  0318                     	;# 
   912  0319                     	;# 
   913  031A                     	;# 
   914  031C                     	;# 
   915  031C                     	;# 
   916  031D                     	;# 
   917  031E                     	;# 
   918  0394                     	;# 
   919  0395                     	;# 
   920  0396                     	;# 
   921  0415                     	;# 
   922  0416                     	;# 
   923  0417                     	;# 
   924  041C                     	;# 
   925  041D                     	;# 
   926  041E                     	;# 
   927  0791                     	;# 
   928  0792                     	;# 
   929  0793                     	;# 
   930  0794                     	;# 
   931  0795                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  079A                     	;# 
   935  07A0                     	;# 
   936  07A1                     	;# 
   937  07A2                     	;# 
   938  07A3                     	;# 
   939  07A4                     	;# 
   940  07A5                     	;# 
   941  07A6                     	;# 
   942  07A7                     	;# 
   943  07A8                     	;# 
   944  07A9                     	;# 
   945  07AA                     	;# 
   946  07AB                     	;# 
   947  0FE4                     	;# 
   948  0FE5                     	;# 
   949  0FE6                     	;# 
   950  0FE7                     	;# 
   951  0FE8                     	;# 
   952  0FE9                     	;# 
   953  0FEA                     	;# 
   954  0FEB                     	;# 
   955  0FED                     	;# 
   956  0FEE                     	;# 
   957  0FEF                     	;# 
   958  0000                     	;# 
   959  0001                     	;# 
   960  0002                     	;# 
   961  0003                     	;# 
   962  0004                     	;# 
   963  0005                     	;# 
   964  0006                     	;# 
   965  0007                     	;# 
   966  0008                     	;# 
   967  0009                     	;# 
   968  000A                     	;# 
   969  000B                     	;# 
   970  000C                     	;# 
   971  000D                     	;# 
   972  000E                     	;# 
   973  000F                     	;# 
   974  0010                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0013                     	;# 
   978  0015                     	;# 
   979  0016                     	;# 
   980  0016                     	;# 
   981  0017                     	;# 
   982  0018                     	;# 
   983  0019                     	;# 
   984  001A                     	;# 
   985  001B                     	;# 
   986  001C                     	;# 
   987  001E                     	;# 
   988  001F                     	;# 
   989  008C                     	;# 
   990  008D                     	;# 
   991  008E                     	;# 
   992  008F                     	;# 
   993  0090                     	;# 
   994  0091                     	;# 
   995  0092                     	;# 
   996  0093                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009B                     	;# 
  1005  009C                     	;# 
  1006  009D                     	;# 
  1007  009E                     	;# 
  1008  010C                     	;# 
  1009  010D                     	;# 
  1010  010E                     	;# 
  1011  010F                     	;# 
  1012  0110                     	;# 
  1013  0111                     	;# 
  1014  0112                     	;# 
  1015  0113                     	;# 
  1016  0114                     	;# 
  1017  0115                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  0118                     	;# 
  1021  0119                     	;# 
  1022  011A                     	;# 
  1023  011B                     	;# 
  1024  011D                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  018F                     	;# 
  1028  0190                     	;# 
  1029  0191                     	;# 
  1030  0191                     	;# 
  1031  0192                     	;# 
  1032  0193                     	;# 
  1033  0193                     	;# 
  1034  0193                     	;# 
  1035  0194                     	;# 
  1036  0195                     	;# 
  1037  0196                     	;# 
  1038  0199                     	;# 
  1039  019A                     	;# 
  1040  019B                     	;# 
  1041  019B                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019C                     	;# 
  1045  019C                     	;# 
  1046  019D                     	;# 
  1047  019E                     	;# 
  1048  019F                     	;# 
  1049  020D                     	;# 
  1050  0210                     	;# 
  1051  0211                     	;# 
  1052  0212                     	;# 
  1053  0213                     	;# 
  1054  0214                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0216                     	;# 
  1058  0217                     	;# 
  1059  0291                     	;# 
  1060  0291                     	;# 
  1061  0292                     	;# 
  1062  0293                     	;# 
  1063  0294                     	;# 
  1064  0295                     	;# 
  1065  0295                     	;# 
  1066  0296                     	;# 
  1067  0298                     	;# 
  1068  0298                     	;# 
  1069  0299                     	;# 
  1070  029A                     	;# 
  1071  029B                     	;# 
  1072  029C                     	;# 
  1073  029C                     	;# 
  1074  029D                     	;# 
  1075  029E                     	;# 
  1076  029F                     	;# 
  1077  0311                     	;# 
  1078  0311                     	;# 
  1079  0312                     	;# 
  1080  0313                     	;# 
  1081  0314                     	;# 
  1082  0315                     	;# 
  1083  0315                     	;# 
  1084  0316                     	;# 
  1085  0318                     	;# 
  1086  0318                     	;# 
  1087  0319                     	;# 
  1088  031A                     	;# 
  1089  031C                     	;# 
  1090  031C                     	;# 
  1091  031D                     	;# 
  1092  031E                     	;# 
  1093  0394                     	;# 
  1094  0395                     	;# 
  1095  0396                     	;# 
  1096  0415                     	;# 
  1097  0416                     	;# 
  1098  0417                     	;# 
  1099  041C                     	;# 
  1100  041D                     	;# 
  1101  041E                     	;# 
  1102  0791                     	;# 
  1103  0792                     	;# 
  1104  0793                     	;# 
  1105  0794                     	;# 
  1106  0795                     	;# 
  1107  0798                     	;# 
  1108  0799                     	;# 
  1109  079A                     	;# 
  1110  07A0                     	;# 
  1111  07A1                     	;# 
  1112  07A2                     	;# 
  1113  07A3                     	;# 
  1114  07A4                     	;# 
  1115  07A5                     	;# 
  1116  07A6                     	;# 
  1117  07A7                     	;# 
  1118  07A8                     	;# 
  1119  07A9                     	;# 
  1120  07AA                     	;# 
  1121  07AB                     	;# 
  1122  0FE4                     	;# 
  1123  0FE5                     	;# 
  1124  0FE6                     	;# 
  1125  0FE7                     	;# 
  1126  0FE8                     	;# 
  1127  0FE9                     	;# 
  1128  0FEA                     	;# 
  1129  0FEB                     	;# 
  1130  0FED                     	;# 
  1131  0FEE                     	;# 
  1132  0FEF                     	;# 
  1133                           
  1134 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1135  0000                     
  1136 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1137  0000                     
  1138 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1139  0000                     
  1140 ;; Function _Wrappers_I2CMaster_Write is unused but had its address taken
  1141  0000                     
  1142                           	psect	nvBANK1
  1143  00CE                     __pnvBANK1:	
  1144  00CE                     _EUSART_ErrorHandler:	
  1145  00CE                     	ds	2
  1146  00D0                     _EUSART_OverrunErrorHandler:	
  1147  00D0                     	ds	2
  1148  00D2                     _EUSART_FramingErrorHandler:	
  1149  00D2                     	ds	2
  1150  0011                     _PIR1bits	set	17
  1151  0095                     _OPTION_REGbits	set	149
  1152  008F                     _TRISD	set	143
  1153  008E                     _TRISC	set	142
  1154  008D                     _TRISB	set	141
  1155  008C                     _TRISA	set	140
  1156  0090                     _TRISE	set	144
  1157  0097                     _WDTCON	set	151
  1158  0098                     _OSCTUNE	set	152
  1159  0099                     _OSCCON	set	153
  1160  0473                     _TRISC3	set	1139
  1161  0474                     _TRISC4	set	1140
  1162  011D                     _APFCON	set	285
  1163  010E                     _LATC	set	270
  1164  010D                     _LATB	set	269
  1165  010C                     _LATA	set	268
  1166  010F                     _LATD	set	271
  1167  0110                     _LATE	set	272
  1168  0116                     _BORCON	set	278
  1169  018C                     _ANSELA	set	396
  1170  0190                     _ANSELE	set	400
  1171  018D                     _ANSELB	set	397
  1172  018F                     _ANSELD	set	399
  1173  019A                     _TXREG	set	410
  1174  0199                     _RCREG	set	409
  1175  019D                     _RCSTAbits	set	413
  1176  019E                     _TXSTAbits	set	414
  1177  019C                     _SPBRGH	set	412
  1178  019B                     _SPBRGL	set	411
  1179  019E                     _TXSTA	set	414
  1180  019D                     _RCSTA	set	413
  1181  019F                     _BAUDCON	set	415
  1182  0211                     _SSPBUF	set	529
  1183  0216                     _SSPCON2bits	set	534
  1184  0214                     _SSPSTAT	set	532
  1185  0216                     _SSPCON2	set	534
  1186  0212                     _SSPADD	set	530
  1187  0215                     _SSPCON1	set	533
  1188  020D                     _WPUB	set	525
  1189  0210                     _WPUE	set	528
  1190  10B5                     _ACKDT	set	4277
  1191                           
  1192                           	psect	stringtext1
  1193  0800                     __pstringtext1:	
  1194  0800                     STR_1:	
  1195  0800  3454               	retlw	84	;'T'
  1196  0801  3465               	retlw	101	;'e'
  1197  0802  346D               	retlw	109	;'m'
  1198  0803  3470               	retlw	112	;'p'
  1199  0804  3465               	retlw	101	;'e'
  1200  0805  3472               	retlw	114	;'r'
  1201  0806  3461               	retlw	97	;'a'
  1202  0807  3474               	retlw	116	;'t'
  1203  0808  3475               	retlw	117	;'u'
  1204  0809  3472               	retlw	114	;'r'
  1205  080A  3465               	retlw	101	;'e'
  1206  080B  3420               	retlw	32	;' '
  1207  080C  3425               	retlw	37	;'%'
  1208  080D  3464               	retlw	100	;'d'
  1209  080E  340D               	retlw	13
  1210  080F  340A               	retlw	10
  1211  0810  3400               	retlw	0
  1212                           
  1213                           	psect	stringtext2
  1214  0000                     __pstringtext2:	
  1215                           
  1216                           ; #config settings
  1217  0000                     
  1218                           	psect	cinit
  1219  07F5                     start_initialization:	
  1220  07F5                     __initialization:	
  1221                           
  1222                           ; Clear objects allocated to BANK1
  1223  07F5  30A0               	movlw	low __pbssBANK1
  1224  07F6  0084               	movwf	4
  1225  07F7  3000               	movlw	high __pbssBANK1
  1226  07F8  0085               	movwf	5
  1227  07F9  302E               	movlw	46
  1228  07FA  3180  20FC  3187   	fcall	clear_ram0
  1229  07FD                     end_of_initialization:	
  1230                           ;End of C runtime variable initialization code
  1231                           
  1232  07FD                     __end_of__initialization:	
  1233  07FD  0020               	movlb	0
  1234  07FE  3182  2AF2         	ljmp	_main	;jump to C main() function
  1235                           
  1236                           	psect	bssBANK1
  1237  00A0                     __pbssBANK1:	
  1238  00A0                     _nout:	
  1239  00A0                     	ds	2
  1240  00A2                     _width:	
  1241  00A2                     	ds	2
  1242  00A4                     _prec:	
  1243  00A4                     	ds	2
  1244  00A6                     _flags:	
  1245  00A6                     	ds	2
  1246  00A8                     _eusartRxLastError:	
  1247  00A8                     	ds	1
  1248  00A9                     _dbuf:	
  1249  00A9                     	ds	32
  1250  00C9                     _TC74Data:	
  1251  00C9                     	ds	5
  1252                           
  1253                           	psect	clrtext
  1254  00FC                     clear_ram0:	
  1255                           ;	Called with FSR0 containing the base address, and
  1256                           ;	WREG with the size to clear
  1257                           
  1258  00FC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1259  00FD                     clrloop0:	
  1260  00FD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1261  00FE  3101               	addfsr 0,1
  1262  00FF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1263  0100  28FD               	goto	clrloop0	;have we reached the end yet?
  1264  0101  3400               	retlw	0	;all done for this memory range, return
  1265                           
  1266                           	psect	cstackCOMMON
  1267  0070                     __pcstackCOMMON:	
  1268  0070                     ?_EUSART_SetFramingErrorHandler:	
  1269  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_EUSART_SetErrorHandler:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_PIN_MANAGER_Initialize:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ??_PIN_MANAGER_Initialize:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_OSCILLATOR_Initialize:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ??_OSCILLATOR_Initialize:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_WDT_Initialize:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ??_WDT_Initialize:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_I2C_Initialize:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ??_I2C_Initialize:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_TC74_Initialize:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_TC74_Temperature:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_EUSART_Initialize:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_EUSART_Write:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ??_EUSART_Write:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_putch:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_SYSTEM_Initialize:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_main:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_I2C_Wait1:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ??_I2C_Wait1:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_I2C_Start:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ??_I2C_Start:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_I2C_RStart:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ??_I2C_RStart:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_I2C_Stop:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ??_I2C_Stop:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_I2C_Send_ACK:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ??_I2C_Send_ACK:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ??_I2C_Write:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_I2C_Read:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_TC74_Ready:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ??___aodiv:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ??___aomod:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_strlen:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_I2C_Write:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374  0070                     EUSART_Write@txData:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0070                     I2C_Write@data:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     TC74_Initialize@AddrSlave:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1390                           ; 2 bytes @ 0x0
  1391                           
  1392  0070                     I2C_Read@ack:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395                           
  1396                           ; 2 bytes @ 0x0
  1397  0070                     	ds	1
  1398  0071                     ??_putch:	
  1399  0071                     putch@txData:	
  1400                           ; 1 bytes @ 0x1
  1401                           
  1402  0071                     ___aodiv@counter:	
  1403                           ; 1 bytes @ 0x1
  1404                           
  1405  0071                     ___aomod@counter:	
  1406                           ; 1 bytes @ 0x1
  1407                           
  1408  0071                     TC74_Initialize@write_fcn:	
  1409                           ; 1 bytes @ 0x1
  1410                           
  1411                           
  1412                           ; 2 bytes @ 0x1
  1413  0071                     	ds	1
  1414  0072                     ??_EUSART_SetFramingErrorHandler:	
  1415  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1416                           ; 1 bytes @ 0x2
  1417                           
  1418  0072                     ??_EUSART_SetErrorHandler:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  0072                     ??_strlen:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424  0072                     ??_EUSART_Initialize:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427  0072                     ??_SYSTEM_Initialize:	
  1428                           ; 1 bytes @ 0x2
  1429                           
  1430  0072                     ??_I2C_Read:	
  1431                           ; 1 bytes @ 0x2
  1432                           
  1433  0072                     ?_fputc:	
  1434                           ; 1 bytes @ 0x2
  1435                           
  1436  0072                     ___aodiv@sign:	
  1437                           ; 2 bytes @ 0x2
  1438                           
  1439  0072                     ___aomod@sign:	
  1440                           ; 1 bytes @ 0x2
  1441                           
  1442  0072                     fputc@c:	
  1443                           ; 1 bytes @ 0x2
  1444                           
  1445                           
  1446                           ; 2 bytes @ 0x2
  1447  0072                     	ds	1
  1448  0073                     ?_abs:	
  1449  0073                     strlen@a:	
  1450                           ; 2 bytes @ 0x3
  1451                           
  1452  0073                     TC74_Initialize@read_fcn:	
  1453                           ; 1 bytes @ 0x3
  1454                           
  1455  0073                     abs@a:	
  1456                           ; 2 bytes @ 0x3
  1457                           
  1458  0073                     ___aodiv@quotient:	
  1459                           ; 2 bytes @ 0x3
  1460                           
  1461                           
  1462                           ; 8 bytes @ 0x3
  1463  0073                     	ds	1
  1464  0074                     fputc@fp:	
  1465  0074                     strlen@s:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468  0074                     I2C_Read@tempbuf:	
  1469                           ; 1 bytes @ 0x4
  1470                           
  1471                           
  1472                           ; 2 bytes @ 0x4
  1473  0074                     	ds	1
  1474  0075                     ??_TC74_Initialize:	
  1475  0075                     ??_fputc:	
  1476                           ; 1 bytes @ 0x5
  1477                           
  1478  0075                     ??_abs:	
  1479                           ; 1 bytes @ 0x5
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0x5
  1483  0075                     	ds	1
  1484  0076                     ?_Wrappers_I2CMaster_Read:	
  1485  0076                     Wrappers_I2CMaster_Read@Address7b:	
  1486                           ; 1 bytes @ 0x6
  1487                           
  1488  0076                     TC74_Initialize@Obj:	
  1489                           ; 1 bytes @ 0x6
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x6
  1493  0076                     	ds	1
  1494  0077                     Wrappers_I2CMaster_Read@Register:	
  1495                           
  1496                           ; 1 bytes @ 0x7
  1497  0077                     	ds	1
  1498  0078                     Wrappers_I2CMaster_Read@amount:	
  1499                           
  1500                           ; 1 bytes @ 0x8
  1501  0078                     	ds	1
  1502  0079                     ??_Wrappers_I2CMaster_Read:	
  1503                           
  1504                           ; 1 bytes @ 0x9
  1505  0079                     	ds	1
  1506  007A                     ?_fputs:	
  1507  007A                     Wrappers_I2CMaster_Read@DatatoSend:	
  1508                           ; 2 bytes @ 0xA
  1509                           
  1510  007A                     fputs@fp:	
  1511                           ; 1 bytes @ 0xA
  1512                           
  1513                           
  1514                           ; 1 bytes @ 0xA
  1515  007A                     	ds	1
  1516  007B                     ??_fputs:	
  1517  007B                     ?_TC74_Read:	
  1518                           ; 1 bytes @ 0xB
  1519                           
  1520  007B                     TC74_Read@TC74_Register:	
  1521                           ; 1 bytes @ 0xB
  1522                           
  1523                           
  1524                           ; 1 bytes @ 0xB
  1525  007B                     	ds	1
  1526  007C                     TC74_Read@amount:	
  1527                           
  1528                           ; 1 bytes @ 0xC
  1529  007C                     	ds	1
  1530  007D                     ??_TC74_Ready:	
  1531                           
  1532                           ; 1 bytes @ 0xD
  1533  007D                     	ds	1
  1534                           
  1535                           	psect	cstackBANK0
  1536  0020                     __pcstackBANK0:	
  1537  0020                     ??_TC74_Read:	
  1538  0020                     ?___aodiv:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0020                     ?___aomod:	
  1542                           ; 8 bytes @ 0x0
  1543                           
  1544  0020                     fputs@c:	
  1545                           ; 8 bytes @ 0x0
  1546                           
  1547  0020                     ___aodiv@divisor:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0020                     ___aomod@divisor:	
  1551                           ; 8 bytes @ 0x0
  1552                           
  1553                           
  1554                           ; 8 bytes @ 0x0
  1555  0020                     	ds	1
  1556  0021                     fputs@i:	
  1557                           
  1558                           ; 2 bytes @ 0x1
  1559  0021                     	ds	1
  1560  0022                     TC74_Read@buffer:	
  1561                           
  1562                           ; 2 bytes @ 0x2
  1563  0022                     	ds	1
  1564  0023                     fputs@s:	
  1565                           
  1566                           ; 1 bytes @ 0x3
  1567  0023                     	ds	1
  1568  0024                     ?_pad:	
  1569  0024                     TC74_Read@Obj:	
  1570                           ; 2 bytes @ 0x4
  1571                           
  1572  0024                     pad@buf:	
  1573                           ; 1 bytes @ 0x4
  1574                           
  1575                           
  1576                           ; 1 bytes @ 0x4
  1577  0024                     	ds	1
  1578  0025                     TC74_Ready@Obj:	
  1579  0025                     pad@p:	
  1580                           ; 1 bytes @ 0x5
  1581                           
  1582                           
  1583                           ; 2 bytes @ 0x5
  1584  0025                     	ds	1
  1585  0026                     TC74_Ready@Ready:	
  1586                           
  1587                           ; 1 bytes @ 0x6
  1588  0026                     	ds	1
  1589  0027                     ??_TC74_Temperature:	
  1590  0027                     ??_pad:	
  1591                           ; 1 bytes @ 0x7
  1592                           
  1593                           
  1594                           ; 1 bytes @ 0x7
  1595  0027                     	ds	1
  1596  0028                     TC74_Temperature@Temperature:	
  1597  0028                     pad@i:	
  1598                           ; 1 bytes @ 0x8
  1599                           
  1600  0028                     ___aodiv@dividend:	
  1601                           ; 2 bytes @ 0x8
  1602                           
  1603  0028                     ___aomod@dividend:	
  1604                           ; 8 bytes @ 0x8
  1605                           
  1606                           
  1607                           ; 8 bytes @ 0x8
  1608  0028                     	ds	1
  1609  0029                     TC74_Temperature@Obj:	
  1610                           
  1611                           ; 1 bytes @ 0x9
  1612  0029                     	ds	1
  1613  002A                     TC74_Temperature@Digital_Temperature:	
  1614  002A                     pad@w:	
  1615                           ; 1 bytes @ 0xA
  1616                           
  1617                           
  1618                           ; 2 bytes @ 0xA
  1619  002A                     	ds	2
  1620  002C                     pad@fp:	
  1621                           
  1622                           ; 1 bytes @ 0xC
  1623  002C                     	ds	4
  1624  0030                     ?_dtoa:	
  1625  0030                     dtoa@d:	
  1626                           ; 2 bytes @ 0x10
  1627                           
  1628                           
  1629                           ; 8 bytes @ 0x10
  1630  0030                     	ds	8
  1631  0038                     ??_dtoa:	
  1632                           
  1633                           ; 1 bytes @ 0x18
  1634  0038                     	ds	3
  1635  003B                     _dtoa$760:	
  1636                           
  1637                           ; 2 bytes @ 0x1B
  1638  003B                     	ds	2
  1639  003D                     dtoa@p:	
  1640                           
  1641                           ; 2 bytes @ 0x1D
  1642  003D                     	ds	2
  1643  003F                     dtoa@fp:	
  1644                           
  1645                           ; 1 bytes @ 0x1F
  1646  003F                     	ds	1
  1647  0040                     dtoa@w:	
  1648                           
  1649                           ; 2 bytes @ 0x20
  1650  0040                     	ds	2
  1651  0042                     dtoa@s:	
  1652                           
  1653                           ; 2 bytes @ 0x22
  1654  0042                     	ds	2
  1655  0044                     dtoa@n:	
  1656                           
  1657                           ; 8 bytes @ 0x24
  1658  0044                     	ds	8
  1659  004C                     dtoa@i:	
  1660                           
  1661                           ; 2 bytes @ 0x2C
  1662  004C                     	ds	2
  1663  004E                     ?_vfpfcnvrt:	
  1664  004E                     vfpfcnvrt@fmt:	
  1665                           ; 2 bytes @ 0x2E
  1666                           
  1667                           
  1668                           ; 1 bytes @ 0x2E
  1669  004E                     	ds	1
  1670  004F                     vfpfcnvrt@ap:	
  1671                           
  1672                           ; 1 bytes @ 0x2F
  1673  004F                     	ds	1
  1674  0050                     ??_vfpfcnvrt:	
  1675                           
  1676                           ; 1 bytes @ 0x30
  1677  0050                     	ds	5
  1678  0055                     vfpfcnvrt@ll:	
  1679                           
  1680                           ; 8 bytes @ 0x35
  1681  0055                     	ds	8
  1682  005D                     vfpfcnvrt@fp:	
  1683                           
  1684                           ; 1 bytes @ 0x3D
  1685  005D                     	ds	1
  1686  005E                     ?_vfprintf:	
  1687  005E                     vfprintf@fmt:	
  1688                           ; 2 bytes @ 0x3E
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x3E
  1692  005E                     	ds	2
  1693  0060                     vfprintf@ap:	
  1694                           
  1695                           ; 1 bytes @ 0x40
  1696  0060                     	ds	1
  1697  0061                     ??_vfprintf:	
  1698                           
  1699                           ; 1 bytes @ 0x41
  1700  0061                     	ds	2
  1701  0063                     vfprintf@fp:	
  1702                           
  1703                           ; 1 bytes @ 0x43
  1704  0063                     	ds	1
  1705  0064                     vfprintf@cfmt:	
  1706                           
  1707                           ; 2 bytes @ 0x44
  1708  0064                     	ds	2
  1709  0066                     ?_printf:	
  1710  0066                     printf@fmt:	
  1711                           ; 2 bytes @ 0x46
  1712                           
  1713                           
  1714                           ; 2 bytes @ 0x46
  1715  0066                     	ds	4
  1716  006A                     ??_printf:	
  1717                           
  1718                           ; 1 bytes @ 0x4A
  1719  006A                     	ds	3
  1720  006D                     printf@ap:	
  1721                           
  1722                           ; 1 bytes @ 0x4D
  1723  006D                     	ds	1
  1724  006E                     ??_main:	
  1725                           
  1726                           ; 1 bytes @ 0x4E
  1727  006E                     	ds	2
  1728                           
  1729                           	psect	maintext
  1730  02F2                     __pmaintext:	
  1731 ;;
  1732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1733 ;;
  1734 ;; *************** function _main *****************
  1735 ;; Defined at:
  1736 ;;		line 15 in file "main.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : B1F/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1750 ;;      Params:         0       0       0       0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0       0       0       0
  1752 ;;      Temps:          0       2       0       0       0       0       0       0
  1753 ;;      Totals:         0       2       0       0       0       0       0       0
  1754 ;;Total ram usage:        2 bytes
  1755 ;; Hardware stack levels required when called:    9
  1756 ;; This function calls:
  1757 ;;		_I2C_Initialize
  1758 ;;		_SYSTEM_Initialize
  1759 ;;		_TC74_Initialize
  1760 ;;		_TC74_Temperature
  1761 ;;		_printf
  1762 ;; This function is called by:
  1763 ;;		Startup code after reset
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _main
  1769  02F2                     _main:	
  1770  02F2                     l1910:	
  1771                           ;incstack = 0
  1772                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1773                           
  1774  02F2  3181  2133  3182   	fcall	_SYSTEM_Initialize
  1775  02F5  3181  211C  3182   	fcall	_I2C_Initialize
  1776  02F8                     l1912:	
  1777  02F8  304D               	movlw	77
  1778  02F9  0020               	movlb	0	; select bank0
  1779  02FA  00EE               	movwf	??_main
  1780  02FB  086E               	movf	??_main,w
  1781  02FC  00F0               	movwf	TC74_Initialize@AddrSlave
  1782  02FD  3000               	movlw	0
  1783  02FE  00F1               	movwf	TC74_Initialize@write_fcn
  1784  02FF  3000               	movlw	0
  1785  0300  00F2               	movwf	TC74_Initialize@write_fcn+1
  1786  0301  3069               	movlw	low _Wrappers_I2CMaster_Read
  1787  0302  00F3               	movwf	TC74_Initialize@read_fcn
  1788  0303  3002               	movlw	high _Wrappers_I2CMaster_Read
  1789  0304  00F4               	movwf	TC74_Initialize@read_fcn+1
  1790  0305  30C9               	movlw	(low (_TC74Data| 0))& (0+255)
  1791  0306  3181  2167  3182   	fcall	_TC74_Initialize
  1792  0309                     l1914:	
  1793  0309  3003               	movlw	3
  1794  030A  0020               	movlb	0	; select bank0
  1795  030B  00EF               	movwf	??_main+1
  1796  030C  3008               	movlw	8
  1797  030D  00EE               	movwf	??_main
  1798  030E  3077               	movlw	119
  1799  030F                     u1377:	
  1800  030F  0B89               	decfsz	9,f
  1801  0310  2B0F               	goto	u1377
  1802  0311  0BEE               	decfsz	??_main,f
  1803  0312  2B0F               	goto	u1377
  1804  0313  0BEF               	decfsz	??_main+1,f
  1805  0314  2B0F               	goto	u1377
  1806  0315                     l1916:	
  1807  0315  3000               	movlw	low (STR_1| (0+32768))
  1808  0316  0020               	movlb	0	; select bank0
  1809  0317  00E6               	movwf	printf@fmt
  1810  0318  3088               	movlw	high (STR_1| (0+32768))
  1811  0319  00E7               	movwf	printf@fmt+1
  1812  031A  30C9               	movlw	(low (_TC74Data| 0))& (0+255)
  1813  031B  3182  2294  3182   	fcall	_TC74_Temperature
  1814  031E  0020               	movlb	0	; select bank0
  1815  031F  00E8               	movwf	?_printf+2
  1816  0320  01E9               	clrf	?_printf+3
  1817  0321  1BE8               	btfsc	?_printf+2,7
  1818  0322  03E9               	decf	?_printf+3,f
  1819  0323  3181  2140  3182   	fcall	_printf
  1820  0326  2B09               	goto	l1914
  1821  0327  3180  2802         	ljmp	start
  1822  0329                     __end_of_main:	
  1823                           
  1824                           	psect	text1
  1825  0140                     __ptext1:	
  1826 ;; *************** function _printf *****************
  1827 ;; Defined at:
  1828 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1831 ;;		 -> STR_1(17), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  ret             2    0        int 
  1834 ;;  ap              1   77[BANK0 ] PTR void [1]
  1835 ;;		 -> ?_printf(2), 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  2   70[BANK0 ] int 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1845 ;;      Params:         0       4       0       0       0       0       0       0
  1846 ;;      Locals:         0       3       0       0       0       0       0       0
  1847 ;;      Temps:          0       1       0       0       0       0       0       0
  1848 ;;      Totals:         0       8       0       0       0       0       0       0
  1849 ;;Total ram usage:        8 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    8
  1852 ;; This function calls:
  1853 ;;		_vfprintf
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function _printf
  1861  0140                     _printf:	
  1862  0140                     l1900:	
  1863                           ;incstack = 0
  1864                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1865                           
  1866  0140  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1867  0141  0020               	movlb	0	; select bank0
  1868  0142  00EA               	movwf	??_printf
  1869  0143  086A               	movf	??_printf,w
  1870  0144  00ED               	movwf	printf@ap
  1871  0145                     l1902:	
  1872  0145  0867               	movf	printf@fmt+1,w
  1873  0146  00DF               	movwf	vfprintf@fmt+1
  1874  0147  0866               	movf	printf@fmt,w
  1875  0148  00DE               	movwf	vfprintf@fmt
  1876  0149  306D               	movlw	(low (printf@ap| 0))& (0+255)
  1877  014A  00EA               	movwf	??_printf
  1878  014B  086A               	movf	??_printf,w
  1879  014C  00E0               	movwf	vfprintf@ap
  1880  014D  3000               	movlw	0
  1881  014E  3182  22C1  3181   	fcall	_vfprintf
  1882  0151                     l980:	
  1883  0151  0008               	return
  1884  0152                     __end_of_printf:	
  1885                           
  1886                           	psect	text2
  1887  02C1                     __ptext2:	
  1888 ;; *************** function _vfprintf *****************
  1889 ;; Defined at:
  1890 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  fp              1    wreg     PTR struct _IO_FILE
  1893 ;;		 -> NULL(0), 
  1894 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1895 ;;		 -> STR_1(17), 
  1896 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1897 ;;		 -> printf@ap(1), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1900 ;;		 -> NULL(0), 
  1901 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1902 ;;		 -> STR_1(17), 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2   62[BANK0 ] int 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1912 ;;      Params:         0       3       0       0       0       0       0       0
  1913 ;;      Locals:         0       3       0       0       0       0       0       0
  1914 ;;      Temps:          0       2       0       0       0       0       0       0
  1915 ;;      Totals:         0       8       0       0       0       0       0       0
  1916 ;;Total ram usage:        8 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    7
  1919 ;; This function calls:
  1920 ;;		_vfpfcnvrt
  1921 ;; This function is called by:
  1922 ;;		_printf
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _vfprintf
  1928  02C1                     _vfprintf:	
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1932                           ;vfprintf@fp stored from wreg
  1933  02C1  0020               	movlb	0	; select bank0
  1934  02C2  00E3               	movwf	vfprintf@fp
  1935  02C3                     l1846:	
  1936                           
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1938  02C3  085F               	movf	vfprintf@fmt+1,w
  1939  02C4  00E5               	movwf	vfprintf@cfmt+1
  1940  02C5  085E               	movf	vfprintf@fmt,w
  1941  02C6  00E4               	movwf	vfprintf@cfmt
  1942  02C7                     l1848:	
  1943                           
  1944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1945  02C7  0021               	movlb	1	; select bank1
  1946  02C8  01A0               	clrf	_nout^(0+128)
  1947  02C9  01A1               	clrf	(_nout+1)^(0+128)
  1948                           
  1949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1950  02CA  2ADF               	goto	l1852
  1951  02CB                     l1850:	
  1952                           
  1953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1954  02CB  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1955  02CC  00E1               	movwf	??_vfprintf
  1956  02CD  0861               	movf	??_vfprintf,w
  1957  02CE  00CE               	movwf	vfpfcnvrt@fmt
  1958  02CF  0860               	movf	vfprintf@ap,w
  1959  02D0  00E2               	movwf	??_vfprintf+1
  1960  02D1  0862               	movf	??_vfprintf+1,w
  1961  02D2  00CF               	movwf	vfpfcnvrt@ap
  1962  02D3  0863               	movf	vfprintf@fp,w
  1963  02D4  3183  23C1  3182   	fcall	_vfpfcnvrt
  1964  02D7  0020               	movlb	0	; select bank0
  1965  02D8  084E               	movf	?_vfpfcnvrt,w
  1966  02D9  0021               	movlb	1	; select bank1
  1967  02DA  07A0               	addwf	_nout^(0+128),f
  1968  02DB  0020               	movlb	0	; select bank0
  1969  02DC  084F               	movf	?_vfpfcnvrt+1,w
  1970  02DD  0021               	movlb	1	; select bank1
  1971  02DE  3DA1               	addwfc	(_nout+1)^(0+128),f
  1972  02DF                     l1852:	
  1973                           
  1974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1975  02DF  0020               	movlb	0	; select bank0
  1976  02E0  0864               	movf	vfprintf@cfmt,w
  1977  02E1  0084               	movwf	4
  1978  02E2  0865               	movf	vfprintf@cfmt+1,w
  1979  02E3  0085               	movwf	5
  1980  02E4  0012               	moviw fsr0++
  1981  02E5  1D03               	btfss	3,2
  1982  02E6  2AE8               	goto	u1311
  1983  02E7  2AE9               	goto	u1310
  1984  02E8                     u1311:	
  1985  02E8  2ACB               	goto	l1850
  1986  02E9                     u1310:	
  1987  02E9                     l1854:	
  1988                           
  1989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1990  02E9  0021               	movlb	1	; select bank1
  1991  02EA  0821               	movf	(_nout+1)^(0+128),w
  1992  02EB  0020               	movlb	0	; select bank0
  1993  02EC  00DF               	movwf	?_vfprintf+1
  1994  02ED  0021               	movlb	1	; select bank1
  1995  02EE  0820               	movf	_nout^(0+128),w
  1996  02EF  0020               	movlb	0	; select bank0
  1997  02F0  00DE               	movwf	?_vfprintf
  1998  02F1                     l492:	
  1999  02F1  0008               	return
  2000  02F2                     __end_of_vfprintf:	
  2001                           
  2002                           	psect	text3
  2003  03C1                     __ptext3:	
  2004 ;; *************** function _vfpfcnvrt *****************
  2005 ;; Defined at:
  2006 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  fp              1    wreg     PTR struct _IO_FILE
  2009 ;;		 -> NULL(0), 
  2010 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  2011 ;;		 -> vfprintf@cfmt(2), 
  2012 ;;  ap              1   47[BANK0 ] PTR PTR void 
  2013 ;;		 -> printf@ap(1), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  2016 ;;		 -> NULL(0), 
  2017 ;;  ll              8   53[BANK0 ] long long 
  2018 ;;  llu             8    0        unsigned long long 
  2019 ;;  f               4    0        unsigned long long 
  2020 ;;  ct              3    0        unsigned char [3]
  2021 ;;  vp              2    0        PTR void 
  2022 ;;  i               2    0        int 
  2023 ;;  done            2    0        int 
  2024 ;;  cp              2    0        PTR unsigned char 
  2025 ;;  c               1    0        unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2   46[BANK0 ] int 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2035 ;;      Params:         0       2       0       0       0       0       0       0
  2036 ;;      Locals:         0       9       0       0       0       0       0       0
  2037 ;;      Temps:          0       5       0       0       0       0       0       0
  2038 ;;      Totals:         0      16       0       0       0       0       0       0
  2039 ;;Total ram usage:       16 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    6
  2042 ;; This function calls:
  2043 ;;		_dtoa
  2044 ;;		_fputc
  2045 ;; This function is called by:
  2046 ;;		_vfprintf
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _vfpfcnvrt
  2052  03C1                     _vfpfcnvrt:	
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2056                           ;vfpfcnvrt@fp stored from wreg
  2057  03C1  0020               	movlb	0	; select bank0
  2058  03C2  00DD               	movwf	vfpfcnvrt@fp
  2059  03C3                     l1748:	
  2060                           
  2061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2062  03C3  084E               	movf	vfpfcnvrt@fmt,w
  2063  03C4  0086               	movwf	6
  2064  03C5  0187               	clrf	7
  2065  03C6  3F40               	moviw [0]fsr1
  2066  03C7  00D0               	movwf	??_vfpfcnvrt
  2067  03C8  3F41               	moviw [1]fsr1
  2068  03C9  00D1               	movwf	??_vfpfcnvrt+1
  2069  03CA  0850               	movf	??_vfpfcnvrt,w
  2070  03CB  0084               	movwf	4
  2071  03CC  0851               	movf	??_vfpfcnvrt+1,w
  2072  03CD  0085               	movwf	5
  2073  03CE  0012               	moviw fsr0++
  2074  03CF  3A25               	xorlw	37
  2075  03D0  1D03               	btfss	3,2
  2076  03D1  2BD3               	goto	u1251
  2077  03D2  2BD4               	goto	u1250
  2078  03D3                     u1251:	
  2079  03D3  2C78               	goto	l1784
  2080  03D4                     u1250:	
  2081  03D4                     l1750:	
  2082                           
  2083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2084  03D4  084E               	movf	vfpfcnvrt@fmt,w
  2085  03D5  0086               	movwf	6
  2086  03D6  0187               	clrf	7
  2087  03D7  3001               	movlw	1
  2088  03D8  0781               	addwf	1,f
  2089  03D9  3141               	addfsr 1,1
  2090  03DA  1803               	skipnc
  2091  03DB  0A81               	incf	1,f
  2092  03DC                     l1752:	
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2095  03DC  0021               	movlb	1	; select bank1
  2096  03DD  01A2               	clrf	_width^(0+128)
  2097  03DE  01A3               	clrf	(_width+1)^(0+128)
  2098  03DF  01A6               	clrf	_flags^(0+128)
  2099  03E0  01A7               	clrf	(_flags+1)^(0+128)
  2100  03E1                     l1754:	
  2101                           
  2102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2103  03E1  30FF               	movlw	255
  2104  03E2  00A4               	movwf	_prec^(0+128)
  2105  03E3  30FF               	movlw	255
  2106  03E4  00A5               	movwf	(_prec^(0+128)+1)
  2107  03E5                     l1756:	
  2108                           
  2109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2110  03E5  0020               	movlb	0	; select bank0
  2111  03E6  084E               	movf	vfpfcnvrt@fmt,w
  2112  03E7  0086               	movwf	6
  2113  03E8  0187               	clrf	7
  2114  03E9  3F40               	moviw [0]fsr1
  2115  03EA  00D0               	movwf	??_vfpfcnvrt
  2116  03EB  3F41               	moviw [1]fsr1
  2117  03EC  00D1               	movwf	??_vfpfcnvrt+1
  2118  03ED  0850               	movf	??_vfpfcnvrt,w
  2119  03EE  0084               	movwf	4
  2120  03EF  0851               	movf	??_vfpfcnvrt+1,w
  2121  03F0  0085               	movwf	5
  2122  03F1  0012               	moviw fsr0++
  2123  03F2  3A64               	xorlw	100
  2124  03F3  1903               	btfsc	3,2
  2125  03F4  2BF6               	goto	u1261
  2126  03F5  2BF7               	goto	u1260
  2127  03F6                     u1261:	
  2128  03F6  2C08               	goto	l1760
  2129  03F7                     u1260:	
  2130  03F7                     l1758:	
  2131  03F7  084E               	movf	vfpfcnvrt@fmt,w
  2132  03F8  0086               	movwf	6
  2133  03F9  0187               	clrf	7
  2134  03FA  3F40               	moviw [0]fsr1
  2135  03FB  00D0               	movwf	??_vfpfcnvrt
  2136  03FC  3F41               	moviw [1]fsr1
  2137  03FD  00D1               	movwf	??_vfpfcnvrt+1
  2138  03FE  0850               	movf	??_vfpfcnvrt,w
  2139  03FF  0084               	movwf	4
  2140  0400  0851               	movf	??_vfpfcnvrt+1,w
  2141  0401  0085               	movwf	5
  2142  0402  0012               	moviw fsr0++
  2143  0403  3A69               	xorlw	105
  2144  0404  1D03               	btfss	3,2
  2145  0405  2C07               	goto	u1271
  2146  0406  2C08               	goto	u1270
  2147  0407                     u1271:	
  2148  0407  2C43               	goto	l1768
  2149  0408                     u1270:	
  2150  0408                     l1760:	
  2151                           
  2152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2153  0408  084E               	movf	vfpfcnvrt@fmt,w
  2154  0409  0086               	movwf	6
  2155  040A  0187               	clrf	7
  2156  040B  3001               	movlw	1
  2157  040C  0781               	addwf	1,f
  2158  040D  3141               	addfsr 1,1
  2159  040E  1803               	skipnc
  2160  040F  0A81               	incf	1,f
  2161  0410                     l1762:	
  2162                           
  2163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2164  0410  084F               	movf	vfpfcnvrt@ap,w
  2165  0411  0086               	movwf	6
  2166  0412  0187               	clrf	7
  2167  0413  0801               	movf	1,w
  2168  0414  0084               	movwf	4
  2169  0415  0185               	clrf	5
  2170  0416  3002               	movlw	2
  2171  0417  0781               	addwf	1,f
  2172  0418  3F00               	moviw [0]fsr0
  2173  0419  00D0               	movwf	??_vfpfcnvrt
  2174  041A  3F01               	moviw [1]fsr0
  2175  041B  00D1               	movwf	??_vfpfcnvrt+1
  2176  041C  0850               	movf	??_vfpfcnvrt,w
  2177  041D  00D5               	movwf	vfpfcnvrt@ll
  2178  041E  0851               	movf	??_vfpfcnvrt+1,w
  2179  041F  00D6               	movwf	vfpfcnvrt@ll+1
  2180  0420  0D89               	rlf	9,f
  2181  0421  3B89               	subwfb	9,f
  2182  0422  0989               	comf	9,f
  2183  0423  00D7               	movwf	vfpfcnvrt@ll+2
  2184  0424  00D8               	movwf	vfpfcnvrt@ll+3
  2185  0425  00D9               	movwf	vfpfcnvrt@ll+4
  2186  0426  00DA               	movwf	vfpfcnvrt@ll+5
  2187  0427  00DB               	movwf	vfpfcnvrt@ll+6
  2188  0428  00DC               	movwf	vfpfcnvrt@ll+7
  2189  0429                     l1764:	
  2190                           
  2191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2192  0429  0855               	movf	vfpfcnvrt@ll,w
  2193  042A  00B0               	movwf	dtoa@d
  2194  042B  0856               	movf	vfpfcnvrt@ll+1,w
  2195  042C  00B1               	movwf	dtoa@d+1
  2196  042D  0857               	movf	vfpfcnvrt@ll+2,w
  2197  042E  00B2               	movwf	dtoa@d+2
  2198  042F  0858               	movf	vfpfcnvrt@ll+3,w
  2199  0430  00B3               	movwf	dtoa@d+3
  2200  0431  0859               	movf	vfpfcnvrt@ll+4,w
  2201  0432  00B4               	movwf	dtoa@d+4
  2202  0433  085A               	movf	vfpfcnvrt@ll+5,w
  2203  0434  00B5               	movwf	dtoa@d+5
  2204  0435  085B               	movf	vfpfcnvrt@ll+6,w
  2205  0436  00B6               	movwf	dtoa@d+6
  2206  0437  085C               	movf	vfpfcnvrt@ll+7,w
  2207  0438  00B7               	movwf	dtoa@d+7
  2208  0439  085D               	movf	vfpfcnvrt@fp,w
  2209  043A  3186  2687  3183   	fcall	_dtoa
  2210  043D  0020               	movlb	0	; select bank0
  2211  043E  0831               	movf	?_dtoa+1,w
  2212  043F  00CF               	movwf	?_vfpfcnvrt+1
  2213  0440  0830               	movf	?_dtoa,w
  2214  0441  00CE               	movwf	?_vfpfcnvrt
  2215  0442  2C9B               	goto	l485
  2216  0443                     l1768:	
  2217                           
  2218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2219  0443  084E               	movf	vfpfcnvrt@fmt,w
  2220  0444  0086               	movwf	6
  2221  0445  0187               	clrf	7
  2222  0446  3F40               	moviw [0]fsr1
  2223  0447  00D0               	movwf	??_vfpfcnvrt
  2224  0448  3F41               	moviw [1]fsr1
  2225  0449  00D1               	movwf	??_vfpfcnvrt+1
  2226  044A  0850               	movf	??_vfpfcnvrt,w
  2227  044B  0084               	movwf	4
  2228  044C  0851               	movf	??_vfpfcnvrt+1,w
  2229  044D  0085               	movwf	5
  2230  044E  0012               	moviw fsr0++
  2231  044F  3A25               	xorlw	37
  2232  0450  1D03               	btfss	3,2
  2233  0451  2C53               	goto	u1281
  2234  0452  2C54               	goto	u1280
  2235  0453                     u1281:	
  2236  0453  2C6D               	goto	l1778
  2237  0454                     u1280:	
  2238  0454                     l1770:	
  2239                           
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2241  0454  084E               	movf	vfpfcnvrt@fmt,w
  2242  0455  0086               	movwf	6
  2243  0456  0187               	clrf	7
  2244  0457  3001               	movlw	1
  2245  0458  0781               	addwf	1,f
  2246  0459  3141               	addfsr 1,1
  2247  045A  1803               	skipnc
  2248  045B  0A81               	incf	1,f
  2249  045C                     l1772:	
  2250                           
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2252  045C  3025               	movlw	37
  2253  045D  00F2               	movwf	fputc@c
  2254  045E  3000               	movlw	0
  2255  045F  00F3               	movwf	fputc@c+1
  2256  0460  085D               	movf	vfpfcnvrt@fp,w
  2257  0461  00D0               	movwf	??_vfpfcnvrt
  2258  0462  0850               	movf	??_vfpfcnvrt,w
  2259  0463  00F4               	movwf	fputc@fp
  2260  0464  3183  2329  3183   	fcall	_fputc
  2261  0467                     l1774:	
  2262                           
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2264  0467  3001               	movlw	1
  2265  0468  0020               	movlb	0	; select bank0
  2266  0469  00CE               	movwf	?_vfpfcnvrt
  2267  046A  3000               	movlw	0
  2268  046B  00CF               	movwf	?_vfpfcnvrt+1
  2269  046C  2C9B               	goto	l485
  2270  046D                     l1778:	
  2271                           
  2272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2273  046D  084E               	movf	vfpfcnvrt@fmt,w
  2274  046E  0086               	movwf	6
  2275  046F  0187               	clrf	7
  2276  0470  3001               	movlw	1
  2277  0471  0781               	addwf	1,f
  2278  0472  3141               	addfsr 1,1
  2279  0473  1803               	skipnc
  2280  0474  0A81               	incf	1,f
  2281  0475                     l1780:	
  2282                           
  2283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2284  0475  01CE               	clrf	?_vfpfcnvrt
  2285  0476  01CF               	clrf	?_vfpfcnvrt+1
  2286  0477  2C9B               	goto	l485
  2287  0478                     l1784:	
  2288                           
  2289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2290  0478  084E               	movf	vfpfcnvrt@fmt,w
  2291  0479  0086               	movwf	6
  2292  047A  0187               	clrf	7
  2293  047B  3F40               	moviw [0]fsr1
  2294  047C  00D0               	movwf	??_vfpfcnvrt
  2295  047D  3F41               	moviw [1]fsr1
  2296  047E  00D1               	movwf	??_vfpfcnvrt+1
  2297  047F  0850               	movf	??_vfpfcnvrt,w
  2298  0480  0084               	movwf	4
  2299  0481  0851               	movf	??_vfpfcnvrt+1,w
  2300  0482  0085               	movwf	5
  2301  0483  0800               	movf	0,w	;code access
  2302  0484  00D2               	movwf	??_vfpfcnvrt+2
  2303  0485  01D3               	clrf	??_vfpfcnvrt+3
  2304  0486  0852               	movf	??_vfpfcnvrt+2,w
  2305  0487  00F2               	movwf	fputc@c
  2306  0488  0853               	movf	??_vfpfcnvrt+3,w
  2307  0489  00F3               	movwf	fputc@c+1
  2308  048A  085D               	movf	vfpfcnvrt@fp,w
  2309  048B  00D4               	movwf	??_vfpfcnvrt+4
  2310  048C  0854               	movf	??_vfpfcnvrt+4,w
  2311  048D  00F4               	movwf	fputc@fp
  2312  048E  3183  2329  3183   	fcall	_fputc
  2313  0491                     l1786:	
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2316  0491  0020               	movlb	0	; select bank0
  2317  0492  084E               	movf	vfpfcnvrt@fmt,w
  2318  0493  0086               	movwf	6
  2319  0494  0187               	clrf	7
  2320  0495  3001               	movlw	1
  2321  0496  0781               	addwf	1,f
  2322  0497  3141               	addfsr 1,1
  2323  0498  1803               	skipnc
  2324  0499  0A81               	incf	1,f
  2325  049A  2C67               	goto	l1774
  2326  049B                     l485:	
  2327  049B  0008               	return
  2328  049C                     __end_of_vfpfcnvrt:	
  2329                           
  2330                           	psect	text4
  2331  0687                     __ptext4:	
  2332 ;; *************** function _dtoa *****************
  2333 ;; Defined at:
  2334 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  fp              1    wreg     PTR struct _IO_FILE
  2337 ;;		 -> NULL(0), 
  2338 ;;  d               8   16[BANK0 ] long long 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  2341 ;;		 -> NULL(0), 
  2342 ;;  n               8   36[BANK0 ] long long 
  2343 ;;  i               2   44[BANK0 ] int 
  2344 ;;  s               2   34[BANK0 ] int 
  2345 ;;  w               2   32[BANK0 ] int 
  2346 ;;  p               2   29[BANK0 ] int 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2   16[BANK0 ] int 
  2349 ;; Registers used:
  2350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2356 ;;      Params:         0       8       0       0       0       0       0       0
  2357 ;;      Locals:         0      19       0       0       0       0       0       0
  2358 ;;      Temps:          0       3       0       0       0       0       0       0
  2359 ;;      Totals:         0      30       0       0       0       0       0       0
  2360 ;;Total ram usage:       30 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    5
  2363 ;; This function calls:
  2364 ;;		___aodiv
  2365 ;;		___aomod
  2366 ;;		_abs
  2367 ;;		_pad
  2368 ;; This function is called by:
  2369 ;;		_vfpfcnvrt
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _dtoa
  2375  0687                     _dtoa:	
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2379                           ;dtoa@fp stored from wreg
  2380  0687  0020               	movlb	0	; select bank0
  2381  0688  00BF               	movwf	dtoa@fp
  2382  0689                     l1674:	
  2383                           
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2385  0689  0830               	movf	dtoa@d,w
  2386  068A  00C4               	movwf	dtoa@n
  2387  068B  0831               	movf	dtoa@d+1,w
  2388  068C  00C5               	movwf	dtoa@n+1
  2389  068D  0832               	movf	dtoa@d+2,w
  2390  068E  00C6               	movwf	dtoa@n+2
  2391  068F  0833               	movf	dtoa@d+3,w
  2392  0690  00C7               	movwf	dtoa@n+3
  2393  0691  0834               	movf	dtoa@d+4,w
  2394  0692  00C8               	movwf	dtoa@n+4
  2395  0693  0835               	movf	dtoa@d+5,w
  2396  0694  00C9               	movwf	dtoa@n+5
  2397  0695  0836               	movf	dtoa@d+6,w
  2398  0696  00CA               	movwf	dtoa@n+6
  2399  0697  0837               	movf	dtoa@d+7,w
  2400  0698  00CB               	movwf	dtoa@n+7
  2401  0699                     l1676:	
  2402                           
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2404  0699  3044               	movlw	low dtoa@n
  2405  069A  0086               	movwf	6
  2406  069B  3000               	movlw	high dtoa@n
  2407  069C  0087               	movwf	7
  2408  069D  3F47               	moviw [7]fsr1
  2409  069E  00B8               	movwf	??_dtoa
  2410  069F  1BB8               	btfsc	??_dtoa,7
  2411  06A0  2EA2               	goto	u1081
  2412  06A1  2EA4               	goto	u1080
  2413  06A2                     u1081:	
  2414  06A2  3001               	movlw	1
  2415  06A3  2EA5               	goto	u1090
  2416  06A4                     u1080:	
  2417  06A4  3000               	movlw	0
  2418  06A5                     u1090:	
  2419  06A5  0020               	movlb	0	; select bank0
  2420  06A6  00B9               	movwf	??_dtoa+1
  2421  06A7  01BA               	clrf	??_dtoa+2
  2422  06A8  0839               	movf	??_dtoa+1,w
  2423  06A9  00C2               	movwf	dtoa@s
  2424  06AA  083A               	movf	??_dtoa+2,w
  2425  06AB  00C3               	movwf	dtoa@s+1
  2426  06AC                     l1678:	
  2427                           
  2428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2429  06AC  0842               	movf	dtoa@s,w
  2430  06AD  0443               	iorwf	dtoa@s+1,w
  2431  06AE  1903               	btfsc	3,2
  2432  06AF  2EB1               	goto	u1101
  2433  06B0  2EB2               	goto	u1100
  2434  06B1                     u1101:	
  2435  06B1  2ED0               	goto	l455
  2436  06B2                     u1100:	
  2437  06B2                     l1680:	
  2438                           
  2439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2440  06B2  09C4               	comf	dtoa@n,f
  2441  06B3  09C5               	comf	dtoa@n+1,f
  2442  06B4  09C6               	comf	dtoa@n+2,f
  2443  06B5  09C7               	comf	dtoa@n+3,f
  2444  06B6  09C8               	comf	dtoa@n+4,f
  2445  06B7  09C9               	comf	dtoa@n+5,f
  2446  06B8  09CA               	comf	dtoa@n+6,f
  2447  06B9  09CB               	comf	dtoa@n+7,f
  2448  06BA  0AC4               	incf	dtoa@n,f
  2449  06BB  1D03               	skipz
  2450  06BC  2ED0               	goto	u111lld
  2451  06BD  0AC5               	incf	dtoa@n+1,f
  2452  06BE  1D03               	skipz
  2453  06BF  2ED0               	goto	u111lld
  2454  06C0  0AC6               	incf	dtoa@n+2,f
  2455  06C1  1D03               	skipz
  2456  06C2  2ED0               	goto	u111lld
  2457  06C3  0AC7               	incf	dtoa@n+3,f
  2458  06C4  1D03               	skipz
  2459  06C5  2ED0               	goto	u111lld
  2460  06C6  0AC8               	incf	dtoa@n+4,f
  2461  06C7  1D03               	skipz
  2462  06C8  2ED0               	goto	u111lld
  2463  06C9  0AC9               	incf	dtoa@n+5,f
  2464  06CA  1D03               	skipz
  2465  06CB  2ED0               	goto	u111lld
  2466  06CC  0ACA               	incf	dtoa@n+6,f
  2467  06CD  1D03               	skipz
  2468  06CE  2ED0               	goto	u111lld
  2469  06CF  0ACB               	incf	dtoa@n+7,f
  2470  06D0                     u111lld:	
  2471  06D0                     l455:	
  2472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
  2473                           
  2474                           
  2475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2476  06D0  0021               	movlb	1	; select bank1
  2477  06D1  1BA5               	btfsc	(_prec+1)^(0+128),7
  2478  06D2  2ED4               	goto	u1121
  2479  06D3  2ED5               	goto	u1120
  2480  06D4                     u1121:	
  2481  06D4  2ED9               	goto	l456
  2482  06D5                     u1120:	
  2483  06D5                     l1682:	
  2484                           
  2485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2486  06D5  30FD               	movlw	253
  2487  06D6  05A6               	andwf	_flags^(0+128),f
  2488  06D7  30FF               	movlw	255
  2489  06D8  05A7               	andwf	(_flags+1)^(0+128),f
  2490  06D9                     l456:	
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
  2492                           
  2493                           
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2495  06D9  0825               	movf	(_prec+1)^(0+128),w
  2496  06DA  3A80               	xorlw	128
  2497  06DB  0020               	movlb	0	; select bank0
  2498  06DC  00B8               	movwf	??_dtoa
  2499  06DD  3080               	movlw	128
  2500  06DE  0238               	subwf	??_dtoa,w
  2501  06DF  1D03               	skipz
  2502  06E0  2EE4               	goto	u1135
  2503  06E1  3001               	movlw	1
  2504  06E2  0021               	movlb	1	; select bank1
  2505  06E3  0224               	subwf	_prec^(0+128),w
  2506  06E4                     u1135:	
  2507  06E4  1803               	skipnc
  2508  06E5  2EE7               	goto	u1131
  2509  06E6  2EE8               	goto	u1130
  2510  06E7                     u1131:	
  2511  06E7  2EEE               	goto	l1686
  2512  06E8                     u1130:	
  2513  06E8                     l1684:	
  2514  06E8  3001               	movlw	1
  2515  06E9  0020               	movlb	0	; select bank0
  2516  06EA  00BD               	movwf	dtoa@p
  2517  06EB  3000               	movlw	0
  2518  06EC  00BE               	movwf	dtoa@p+1
  2519  06ED  2EF6               	goto	l460
  2520  06EE                     l1686:	
  2521  06EE  0021               	movlb	1	; select bank1
  2522  06EF  0825               	movf	(_prec+1)^(0+128),w
  2523  06F0  0020               	movlb	0	; select bank0
  2524  06F1  00BE               	movwf	dtoa@p+1
  2525  06F2  0021               	movlb	1	; select bank1
  2526  06F3  0824               	movf	_prec^(0+128),w
  2527  06F4  0020               	movlb	0	; select bank0
  2528  06F5  00BD               	movwf	dtoa@p
  2529  06F6                     l460:	
  2530                           
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2532  06F6  0021               	movlb	1	; select bank1
  2533  06F7  0823               	movf	(_width+1)^(0+128),w
  2534  06F8  0020               	movlb	0	; select bank0
  2535  06F9  00C1               	movwf	dtoa@w+1
  2536  06FA  0021               	movlb	1	; select bank1
  2537  06FB  0822               	movf	_width^(0+128),w
  2538  06FC  0020               	movlb	0	; select bank0
  2539  06FD  00C0               	movwf	dtoa@w
  2540  06FE                     l1688:	
  2541                           
  2542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2543  06FE  0842               	movf	dtoa@s,w
  2544  06FF  0443               	iorwf	dtoa@s+1,w
  2545  0700  1D03               	btfss	3,2
  2546  0701  2F03               	goto	u1141
  2547  0702  2F04               	goto	u1140
  2548  0703                     u1141:	
  2549  0703  2F09               	goto	l1692
  2550  0704                     u1140:	
  2551  0704                     l1690:	
  2552  0704  0021               	movlb	1	; select bank1
  2553  0705  1D26               	btfss	_flags^(0+128),2
  2554  0706  2F08               	goto	u1151
  2555  0707  2F09               	goto	u1150
  2556  0708                     u1151:	
  2557  0708  2F0E               	goto	l461
  2558  0709                     u1150:	
  2559  0709                     l1692:	
  2560                           
  2561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2562  0709  30FF               	movlw	255
  2563  070A  0020               	movlb	0	; select bank0
  2564  070B  07C0               	addwf	dtoa@w,f
  2565  070C  30FF               	movlw	255
  2566  070D  3DC1               	addwfc	dtoa@w+1,f
  2567  070E                     l461:	
  2568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
  2569                           
  2570                           
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2572  070E  301F               	movlw	31
  2573  070F  0020               	movlb	0	; select bank0
  2574  0710  00CC               	movwf	dtoa@i
  2575  0711  3000               	movlw	0
  2576  0712  00CD               	movwf	dtoa@i+1
  2577  0713                     l1694:	
  2578                           
  2579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2580  0713  0021               	movlb	1	; select bank1
  2581  0714  01C8               	clrf	(_dbuf^(0+128)+31)
  2582                           
  2583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2584  0715  2F7E               	goto	l464
  2585  0716                     l1696:	
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2588  0716  30FF               	movlw	255
  2589  0717  0020               	movlb	0	; select bank0
  2590  0718  07CC               	addwf	dtoa@i,f
  2591  0719  30FF               	movlw	255
  2592  071A  3DCD               	addwfc	dtoa@i+1,f
  2593  071B                     l1698:	
  2594                           
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2596  071B  300A               	movlw	10
  2597  071C  00A0               	movwf	___aomod@divisor
  2598  071D  01A1               	clrf	___aomod@divisor+1
  2599  071E  01A2               	clrf	___aomod@divisor+2
  2600  071F  01A3               	clrf	___aomod@divisor+3
  2601  0720  01A4               	clrf	___aomod@divisor+4
  2602  0721  01A5               	clrf	___aomod@divisor+5
  2603  0722  01A6               	clrf	___aomod@divisor+6
  2604  0723  01A7               	clrf	___aomod@divisor+7
  2605  0724  0844               	movf	dtoa@n,w
  2606  0725  00A8               	movwf	___aomod@dividend
  2607  0726  0845               	movf	dtoa@n+1,w
  2608  0727  00A9               	movwf	___aomod@dividend+1
  2609  0728  0846               	movf	dtoa@n+2,w
  2610  0729  00AA               	movwf	___aomod@dividend+2
  2611  072A  0847               	movf	dtoa@n+3,w
  2612  072B  00AB               	movwf	___aomod@dividend+3
  2613  072C  0848               	movf	dtoa@n+4,w
  2614  072D  00AC               	movwf	___aomod@dividend+4
  2615  072E  0849               	movf	dtoa@n+5,w
  2616  072F  00AD               	movwf	___aomod@dividend+5
  2617  0730  084A               	movf	dtoa@n+6,w
  2618  0731  00AE               	movwf	___aomod@dividend+6
  2619  0732  084B               	movf	dtoa@n+7,w
  2620  0733  00AF               	movwf	___aomod@dividend+7
  2621  0734  3184  249C  3186   	fcall	___aomod
  2622  0737  0020               	movlb	0	; select bank0
  2623  0738  0821               	movf	?___aomod+1,w
  2624  0739  00F4               	movwf	abs@a+1
  2625  073A  0820               	movf	?___aomod,w
  2626  073B  00F3               	movwf	abs@a
  2627  073C  3181  2199  3186   	fcall	_abs
  2628  073F  0873               	movf	?_abs,w
  2629  0740  3E30               	addlw	48
  2630  0741  0020               	movlb	0	; select bank0
  2631  0742  00B8               	movwf	??_dtoa
  2632  0743  084C               	movf	dtoa@i,w
  2633  0744  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  2634  0745  0086               	movwf	6
  2635  0746  0187               	clrf	7
  2636  0747  0838               	movf	??_dtoa,w
  2637  0748  0081               	movwf	1
  2638  0749                     l1700:	
  2639                           
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2641  0749  30FF               	movlw	255
  2642  074A  07BD               	addwf	dtoa@p,f
  2643  074B  30FF               	movlw	255
  2644  074C  3DBE               	addwfc	dtoa@p+1,f
  2645  074D                     l1702:	
  2646                           
  2647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2648  074D  30FF               	movlw	255
  2649  074E  07C0               	addwf	dtoa@w,f
  2650  074F  30FF               	movlw	255
  2651  0750  3DC1               	addwfc	dtoa@w+1,f
  2652  0751                     l1704:	
  2653                           
  2654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2655  0751  300A               	movlw	10
  2656  0752  00A0               	movwf	___aodiv@divisor
  2657  0753  01A1               	clrf	___aodiv@divisor+1
  2658  0754  01A2               	clrf	___aodiv@divisor+2
  2659  0755  01A3               	clrf	___aodiv@divisor+3
  2660  0756  01A4               	clrf	___aodiv@divisor+4
  2661  0757  01A5               	clrf	___aodiv@divisor+5
  2662  0758  01A6               	clrf	___aodiv@divisor+6
  2663  0759  01A7               	clrf	___aodiv@divisor+7
  2664  075A  0844               	movf	dtoa@n,w
  2665  075B  00A8               	movwf	___aodiv@dividend
  2666  075C  0845               	movf	dtoa@n+1,w
  2667  075D  00A9               	movwf	___aodiv@dividend+1
  2668  075E  0846               	movf	dtoa@n+2,w
  2669  075F  00AA               	movwf	___aodiv@dividend+2
  2670  0760  0847               	movf	dtoa@n+3,w
  2671  0761  00AB               	movwf	___aodiv@dividend+3
  2672  0762  0848               	movf	dtoa@n+4,w
  2673  0763  00AC               	movwf	___aodiv@dividend+4
  2674  0764  0849               	movf	dtoa@n+5,w
  2675  0765  00AD               	movwf	___aodiv@dividend+5
  2676  0766  084A               	movf	dtoa@n+6,w
  2677  0767  00AE               	movwf	___aodiv@dividend+6
  2678  0768  084B               	movf	dtoa@n+7,w
  2679  0769  00AF               	movwf	___aodiv@dividend+7
  2680  076A  3185  2586  3186   	fcall	___aodiv
  2681  076D  0020               	movlb	0	; select bank0
  2682  076E  0820               	movf	?___aodiv,w
  2683  076F  00C4               	movwf	dtoa@n
  2684  0770  0821               	movf	?___aodiv+1,w
  2685  0771  00C5               	movwf	dtoa@n+1
  2686  0772  0822               	movf	?___aodiv+2,w
  2687  0773  00C6               	movwf	dtoa@n+2
  2688  0774  0823               	movf	?___aodiv+3,w
  2689  0775  00C7               	movwf	dtoa@n+3
  2690  0776  0824               	movf	?___aodiv+4,w
  2691  0777  00C8               	movwf	dtoa@n+4
  2692  0778  0825               	movf	?___aodiv+5,w
  2693  0779  00C9               	movwf	dtoa@n+5
  2694  077A  0826               	movf	?___aodiv+6,w
  2695  077B  00CA               	movwf	dtoa@n+6
  2696  077C  0827               	movf	?___aodiv+7,w
  2697  077D  00CB               	movwf	dtoa@n+7
  2698  077E                     l464:	
  2699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
  2700                           
  2701                           
  2702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2703  077E  0020               	movlb	0	; select bank0
  2704  077F  084D               	movf	dtoa@i+1,w
  2705  0780  3A80               	xorlw	128
  2706  0781  00B8               	movwf	??_dtoa
  2707  0782  3080               	movlw	128
  2708  0783  0238               	subwf	??_dtoa,w
  2709  0784  1D03               	skipz
  2710  0785  2F88               	goto	u1165
  2711  0786  3001               	movlw	1
  2712  0787  024C               	subwf	dtoa@i,w
  2713  0788                     u1165:	
  2714  0788  1C03               	skipc
  2715  0789  2F8B               	goto	u1161
  2716  078A  2F8C               	goto	u1160
  2717  078B                     u1161:	
  2718  078B  2FB9               	goto	l1714
  2719  078C                     u1160:	
  2720  078C                     l1706:	
  2721  078C  0020               	movlb	0	; select bank0
  2722  078D  0844               	movf	dtoa@n,w
  2723  078E  0445               	iorwf	dtoa@n+1,w
  2724  078F  0446               	iorwf	dtoa@n+2,w
  2725  0790  0447               	iorwf	dtoa@n+3,w
  2726  0791  0448               	iorwf	dtoa@n+4,w
  2727  0792  0449               	iorwf	dtoa@n+5,w
  2728  0793  044A               	iorwf	dtoa@n+6,w
  2729  0794  044B               	iorwf	dtoa@n+7,w
  2730  0795  1D03               	skipz
  2731  0796  2F98               	goto	u1171
  2732  0797  2F99               	goto	u1170
  2733  0798                     u1171:	
  2734  0798  2F16               	goto	l1696
  2735  0799                     u1170:	
  2736  0799                     l1708:	
  2737  0799  083E               	movf	dtoa@p+1,w
  2738  079A  3A80               	xorlw	128
  2739  079B  00B8               	movwf	??_dtoa
  2740  079C  3080               	movlw	128
  2741  079D  0238               	subwf	??_dtoa,w
  2742  079E  1D03               	skipz
  2743  079F  2FA2               	goto	u1185
  2744  07A0  3001               	movlw	1
  2745  07A1  023D               	subwf	dtoa@p,w
  2746  07A2                     u1185:	
  2747  07A2  1803               	skipnc
  2748  07A3  2FA5               	goto	u1181
  2749  07A4  2FA6               	goto	u1180
  2750  07A5                     u1181:	
  2751  07A5  2F16               	goto	l1696
  2752  07A6                     u1180:	
  2753  07A6                     l1710:	
  2754  07A6  0020               	movlb	0	; select bank0
  2755  07A7  0841               	movf	dtoa@w+1,w
  2756  07A8  3A80               	xorlw	128
  2757  07A9  00B8               	movwf	??_dtoa
  2758  07AA  3080               	movlw	128
  2759  07AB  0238               	subwf	??_dtoa,w
  2760  07AC  1D03               	skipz
  2761  07AD  2FB0               	goto	u1195
  2762  07AE  3001               	movlw	1
  2763  07AF  0240               	subwf	dtoa@w,w
  2764  07B0                     u1195:	
  2765  07B0  1C03               	skipc
  2766  07B1  2FB3               	goto	u1191
  2767  07B2  2FB4               	goto	u1190
  2768  07B3                     u1191:	
  2769  07B3  2FB9               	goto	l1714
  2770  07B4                     u1190:	
  2771  07B4                     l1712:	
  2772  07B4  0021               	movlb	1	; select bank1
  2773  07B5  18A6               	btfsc	_flags^(0+128),1
  2774  07B6  2FB8               	goto	u1201
  2775  07B7  2FB9               	goto	u1200
  2776  07B8                     u1201:	
  2777  07B8  2F16               	goto	l1696
  2778  07B9                     u1200:	
  2779  07B9                     l1714:	
  2780                           
  2781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2782  07B9  0020               	movlb	0	; select bank0
  2783  07BA  0842               	movf	dtoa@s,w
  2784  07BB  0443               	iorwf	dtoa@s+1,w
  2785  07BC  1D03               	btfss	3,2
  2786  07BD  2FBF               	goto	u1211
  2787  07BE  2FC0               	goto	u1210
  2788  07BF                     u1211:	
  2789  07BF  2FC5               	goto	l1718
  2790  07C0                     u1210:	
  2791  07C0                     l1716:	
  2792  07C0  0021               	movlb	1	; select bank1
  2793  07C1  1D26               	btfss	_flags^(0+128),2
  2794  07C2  2FC4               	goto	u1221
  2795  07C3  2FC5               	goto	u1220
  2796  07C4                     u1221:	
  2797  07C4  2FE1               	goto	l1728
  2798  07C5                     u1220:	
  2799  07C5                     l1718:	
  2800                           
  2801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2802  07C5  30FF               	movlw	255
  2803  07C6  0020               	movlb	0	; select bank0
  2804  07C7  07CC               	addwf	dtoa@i,f
  2805  07C8  30FF               	movlw	255
  2806  07C9  3DCD               	addwfc	dtoa@i+1,f
  2807  07CA                     l1720:	
  2808                           
  2809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2810  07CA  0842               	movf	dtoa@s,w
  2811  07CB  0443               	iorwf	dtoa@s+1,w
  2812  07CC  1D03               	btfss	3,2
  2813  07CD  2FCF               	goto	u1231
  2814  07CE  2FD0               	goto	u1230
  2815  07CF                     u1231:	
  2816  07CF  2FD5               	goto	l1724
  2817  07D0                     u1230:	
  2818  07D0                     l1722:	
  2819  07D0  302B               	movlw	43
  2820  07D1  00BB               	movwf	_dtoa$760
  2821  07D2  3000               	movlw	0
  2822  07D3  00BC               	movwf	_dtoa$760+1
  2823  07D4  2FD9               	goto	l1726
  2824  07D5                     l1724:	
  2825  07D5  302D               	movlw	45
  2826  07D6  00BB               	movwf	_dtoa$760
  2827  07D7  3000               	movlw	0
  2828  07D8  00BC               	movwf	_dtoa$760+1
  2829  07D9                     l1726:	
  2830  07D9  083B               	movf	_dtoa$760,w
  2831  07DA  00B8               	movwf	??_dtoa
  2832  07DB  084C               	movf	dtoa@i,w
  2833  07DC  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  2834  07DD  0086               	movwf	6
  2835  07DE  0187               	clrf	7
  2836  07DF  0838               	movf	??_dtoa,w
  2837  07E0  0081               	movwf	1
  2838  07E1                     l1728:	
  2839                           
  2840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2841  07E1  0020               	movlb	0	; select bank0
  2842  07E2  084C               	movf	dtoa@i,w
  2843  07E3  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  2844  07E4  00B8               	movwf	??_dtoa
  2845  07E5  0838               	movf	??_dtoa,w
  2846  07E6  00A4               	movwf	pad@buf
  2847  07E7  0841               	movf	dtoa@w+1,w
  2848  07E8  00A6               	movwf	pad@p+1
  2849  07E9  0840               	movf	dtoa@w,w
  2850  07EA  00A5               	movwf	pad@p
  2851  07EB  083F               	movf	dtoa@fp,w
  2852  07EC  3183  2368  3186   	fcall	_pad
  2853  07EF  0020               	movlb	0	; select bank0
  2854  07F0  0825               	movf	?_pad+1,w
  2855  07F1  00B1               	movwf	?_dtoa+1
  2856  07F2  0824               	movf	?_pad,w
  2857  07F3  00B0               	movwf	?_dtoa
  2858  07F4                     l478:	
  2859  07F4  0008               	return
  2860  07F5                     __end_of_dtoa:	
  2861                           
  2862                           	psect	text5
  2863  0368                     __ptext5:	
  2864 ;; *************** function _pad *****************
  2865 ;; Defined at:
  2866 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  fp              1    wreg     PTR struct _IO_FILE
  2869 ;;		 -> NULL(0), 
  2870 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2871 ;;		 -> dbuf(32), 
  2872 ;;  p               2    5[BANK0 ] int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  2875 ;;		 -> NULL(0), 
  2876 ;;  w               2   10[BANK0 ] int 
  2877 ;;  i               2    8[BANK0 ] int 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2    4[BANK0 ] int 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2887 ;;      Params:         0       3       0       0       0       0       0       0
  2888 ;;      Locals:         0       5       0       0       0       0       0       0
  2889 ;;      Temps:          0       1       0       0       0       0       0       0
  2890 ;;      Totals:         0       9       0       0       0       0       0       0
  2891 ;;Total ram usage:        9 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    4
  2894 ;; This function calls:
  2895 ;;		_fputc
  2896 ;;		_fputs
  2897 ;;		_strlen
  2898 ;; This function is called by:
  2899 ;;		_dtoa
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _pad
  2905  0368                     _pad:	
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2909                           ;pad@fp stored from wreg
  2910  0368  0020               	movlb	0	; select bank0
  2911  0369  00AC               	movwf	pad@fp
  2912  036A                     l1566:	
  2913                           
  2914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2915  036A  0021               	movlb	1	; select bank1
  2916  036B  1C26               	btfss	_flags^(0+128),0
  2917  036C  2B6E               	goto	u821
  2918  036D  2B6F               	goto	u820
  2919  036E                     u821:	
  2920  036E  2B78               	goto	l1570
  2921  036F                     u820:	
  2922  036F                     l1568:	
  2923                           
  2924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2925  036F  0020               	movlb	0	; select bank0
  2926  0370  082C               	movf	pad@fp,w
  2927  0371  00A7               	movwf	??_pad
  2928  0372  0827               	movf	??_pad,w
  2929  0373  00FA               	movwf	fputs@fp
  2930  0374  0824               	movf	pad@buf,w
  2931  0375  3182  2218  3183   	fcall	_fputs
  2932  0378                     l1570:	
  2933                           
  2934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2935  0378  0020               	movlb	0	; select bank0
  2936  0379  1BA6               	btfsc	pad@p+1,7
  2937  037A  2B7C               	goto	u831
  2938  037B  2B7D               	goto	u830
  2939  037C                     u831:	
  2940  037C  2B82               	goto	l1574
  2941  037D                     u830:	
  2942  037D                     l1572:	
  2943  037D  0826               	movf	pad@p+1,w
  2944  037E  00AB               	movwf	pad@w+1
  2945  037F  0825               	movf	pad@p,w
  2946  0380  00AA               	movwf	pad@w
  2947  0381  2B84               	goto	l447
  2948  0382                     l1574:	
  2949  0382  01AA               	clrf	pad@w
  2950  0383  01AB               	clrf	pad@w+1
  2951  0384                     l447:	
  2952                           
  2953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2954  0384  01A8               	clrf	pad@i
  2955  0385  01A9               	clrf	pad@i+1
  2956                           
  2957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2958  0386  2B98               	goto	l1580
  2959  0387                     l1576:	
  2960                           
  2961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2962  0387  3020               	movlw	32
  2963  0388  00F2               	movwf	fputc@c
  2964  0389  3000               	movlw	0
  2965  038A  00F3               	movwf	fputc@c+1
  2966  038B  0020               	movlb	0	; select bank0
  2967  038C  082C               	movf	pad@fp,w
  2968  038D  00A7               	movwf	??_pad
  2969  038E  0827               	movf	??_pad,w
  2970  038F  00F4               	movwf	fputc@fp
  2971  0390  3183  2329  3183   	fcall	_fputc
  2972  0393                     l1578:	
  2973                           
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2975  0393  3001               	movlw	1
  2976  0394  0020               	movlb	0	; select bank0
  2977  0395  07A8               	addwf	pad@i,f
  2978  0396  3000               	movlw	0
  2979  0397  3DA9               	addwfc	pad@i+1,f
  2980  0398                     l1580:	
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2983  0398  0829               	movf	pad@i+1,w
  2984  0399  3A80               	xorlw	128
  2985  039A  00A7               	movwf	??_pad
  2986  039B  082B               	movf	pad@w+1,w
  2987  039C  3A80               	xorlw	128
  2988  039D  0227               	subwf	??_pad,w
  2989  039E  1D03               	skipz
  2990  039F  2BA2               	goto	u845
  2991  03A0  082A               	movf	pad@w,w
  2992  03A1  0228               	subwf	pad@i,w
  2993  03A2                     u845:	
  2994  03A2  1C03               	skipc
  2995  03A3  2BA5               	goto	u841
  2996  03A4  2BA6               	goto	u840
  2997  03A5                     u841:	
  2998  03A5  2B87               	goto	l1576
  2999  03A6                     u840:	
  3000  03A6                     l450:	
  3001                           
  3002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3003  03A6  0021               	movlb	1	; select bank1
  3004  03A7  1826               	btfsc	_flags^(0+128),0
  3005  03A8  2BAA               	goto	u851
  3006  03A9  2BAB               	goto	u850
  3007  03AA                     u851:	
  3008  03AA  2BB4               	goto	l451
  3009  03AB                     u850:	
  3010  03AB                     l1582:	
  3011                           
  3012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3013  03AB  0020               	movlb	0	; select bank0
  3014  03AC  082C               	movf	pad@fp,w
  3015  03AD  00A7               	movwf	??_pad
  3016  03AE  0827               	movf	??_pad,w
  3017  03AF  00FA               	movwf	fputs@fp
  3018  03B0  0824               	movf	pad@buf,w
  3019  03B1  3182  2218  3183   	fcall	_fputs
  3020  03B4                     l451:	
  3021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 92:     }
  3022                           
  3023                           
  3024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3025  03B4  0020               	movlb	0	; select bank0
  3026  03B5  0824               	movf	pad@buf,w
  3027  03B6  3181  2180  3183   	fcall	_strlen
  3028  03B9  0020               	movlb	0	; select bank0
  3029  03BA  082A               	movf	pad@w,w
  3030  03BB  0770               	addwf	?_strlen,w
  3031  03BC  00A4               	movwf	?_pad
  3032  03BD  082B               	movf	pad@w+1,w
  3033  03BE  3D71               	addwfc	?_strlen+1,w
  3034  03BF  00A5               	movwf	?_pad+1
  3035  03C0                     l452:	
  3036  03C0  0008               	return
  3037  03C1                     __end_of_pad:	
  3038                           
  3039                           	psect	text6
  3040  0180                     __ptext6:	
  3041 ;; *************** function _strlen *****************
  3042 ;; Defined at:
  3043 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  s               1    wreg     PTR const unsigned char 
  3046 ;;		 -> dbuf(32), 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  s               1    4[COMMON] PTR const unsigned char 
  3049 ;;		 -> dbuf(32), 
  3050 ;;  a               1    3[COMMON] PTR const unsigned char 
  3051 ;;		 -> dbuf(32), 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  2    0[COMMON] unsigned int 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3061 ;;      Params:         2       0       0       0       0       0       0       0
  3062 ;;      Locals:         2       0       0       0       0       0       0       0
  3063 ;;      Temps:          1       0       0       0       0       0       0       0
  3064 ;;      Totals:         5       0       0       0       0       0       0       0
  3065 ;;Total ram usage:        5 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_pad
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _strlen
  3076  0180                     _strlen:	
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3080                           ;strlen@s stored from wreg
  3081  0180  00F4               	movwf	strlen@s
  3082  0181                     l1520:	
  3083  0181  0874               	movf	strlen@s,w
  3084  0182  00F2               	movwf	??_strlen
  3085  0183  0872               	movf	??_strlen,w
  3086  0184  00F3               	movwf	strlen@a
  3087  0185  298A               	goto	l1524
  3088  0186                     l1522:	
  3089  0186  3001               	movlw	1
  3090  0187  00F2               	movwf	??_strlen
  3091  0188  0872               	movf	??_strlen,w
  3092  0189  07F4               	addwf	strlen@s,f
  3093  018A                     l1524:	
  3094  018A  0874               	movf	strlen@s,w
  3095  018B  0086               	movwf	6
  3096  018C  0187               	clrf	7
  3097  018D  0801               	movf	1,w
  3098  018E  1D03               	btfss	3,2
  3099  018F  2991               	goto	u791
  3100  0190  2992               	goto	u790
  3101  0191                     u791:	
  3102  0191  2986               	goto	l1522
  3103  0192                     u790:	
  3104  0192                     l1526:	
  3105  0192  0873               	movf	strlen@a,w
  3106  0193  0274               	subwf	strlen@s,w
  3107  0194  00F0               	movwf	?_strlen
  3108  0195  01F1               	clrf	?_strlen+1
  3109  0196  1BF0               	btfsc	?_strlen,7
  3110  0197  03F1               	decf	?_strlen+1,f
  3111  0198                     l986:	
  3112  0198  0008               	return
  3113  0199                     __end_of_strlen:	
  3114                           
  3115                           	psect	text7
  3116  0218                     __ptext7:	
  3117 ;; *************** function _fputs *****************
  3118 ;; Defined at:
  3119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  s               1    wreg     PTR const unsigned char 
  3122 ;;		 -> dbuf(32), 
  3123 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  3124 ;;		 -> NULL(0), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3127 ;;		 -> dbuf(32), 
  3128 ;;  i               2    1[BANK0 ] int 
  3129 ;;  c               1    0[BANK0 ] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2   10[COMMON] int 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3139 ;;      Params:         1       0       0       0       0       0       0       0
  3140 ;;      Locals:         0       4       0       0       0       0       0       0
  3141 ;;      Temps:          3       0       0       0       0       0       0       0
  3142 ;;      Totals:         4       4       0       0       0       0       0       0
  3143 ;;Total ram usage:        8 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    3
  3146 ;; This function calls:
  3147 ;;		_fputc
  3148 ;; This function is called by:
  3149 ;;		_pad
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _fputs
  3155  0218                     _fputs:	
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3159                           ;fputs@s stored from wreg
  3160  0218  0020               	movlb	0	; select bank0
  3161  0219  00A3               	movwf	fputs@s
  3162  021A                     l1512:	
  3163  021A  01A1               	clrf	fputs@i
  3164  021B  01A2               	clrf	fputs@i+1
  3165  021C  2A30               	goto	l1518
  3166  021D                     l1514:	
  3167  021D  0820               	movf	fputs@c,w
  3168  021E  00FB               	movwf	??_fputs
  3169  021F  01FC               	clrf	??_fputs+1
  3170  0220  087B               	movf	??_fputs,w
  3171  0221  00F2               	movwf	fputc@c
  3172  0222  087C               	movf	??_fputs+1,w
  3173  0223  00F3               	movwf	fputc@c+1
  3174  0224  087A               	movf	fputs@fp,w
  3175  0225  00FD               	movwf	??_fputs+2
  3176  0226  087D               	movf	??_fputs+2,w
  3177  0227  00F4               	movwf	fputc@fp
  3178  0228  3183  2329  3182   	fcall	_fputc
  3179  022B                     l1516:	
  3180  022B  3001               	movlw	1
  3181  022C  0020               	movlb	0	; select bank0
  3182  022D  07A1               	addwf	fputs@i,f
  3183  022E  3000               	movlw	0
  3184  022F  3DA2               	addwfc	fputs@i+1,f
  3185  0230                     l1518:	
  3186  0230  0821               	movf	fputs@i,w
  3187  0231  0723               	addwf	fputs@s,w
  3188  0232  00FB               	movwf	??_fputs
  3189  0233  087B               	movf	??_fputs,w
  3190  0234  0086               	movwf	6
  3191  0235  0187               	clrf	7
  3192  0236  0801               	movf	1,w
  3193  0237  00FC               	movwf	??_fputs+1
  3194  0238  087C               	movf	??_fputs+1,w
  3195  0239  00A0               	movwf	fputs@c
  3196  023A  0820               	movf	fputs@c,w
  3197  023B  1D03               	btfss	3,2
  3198  023C  2A3E               	goto	u781
  3199  023D  2A3F               	goto	u780
  3200  023E                     u781:	
  3201  023E  2A1D               	goto	l1514
  3202  023F                     u780:	
  3203  023F                     l973:	
  3204  023F  0008               	return
  3205  0240                     __end_of_fputs:	
  3206                           
  3207                           	psect	text8
  3208  0329                     __ptext8:	
  3209 ;; *************** function _fputc *****************
  3210 ;; Defined at:
  3211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  c               2    2[COMMON] int 
  3214 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  3215 ;;		 -> NULL(0), 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  2    2[COMMON] int 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3227 ;;      Params:         3       0       0       0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0
  3229 ;;      Temps:          5       0       0       0       0       0       0       0
  3230 ;;      Totals:         8       0       0       0       0       0       0       0
  3231 ;;Total ram usage:        8 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    2
  3234 ;; This function calls:
  3235 ;;		_putch
  3236 ;; This function is called by:
  3237 ;;		_pad
  3238 ;;		_vfpfcnvrt
  3239 ;;		_fputs
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _fputc
  3245  0329                     _fputc:	
  3246  0329                     l1494:	
  3247                           ;incstack = 0
  3248                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3249                           
  3250  0329  0874               	movf	fputc@fp,w
  3251  032A  1903               	btfsc	3,2
  3252  032B  2B2D               	goto	u741
  3253  032C  2B2E               	goto	u740
  3254  032D                     u741:	
  3255  032D  2B33               	goto	l1498
  3256  032E                     u740:	
  3257  032E                     l1496:	
  3258  032E  0874               	movf	fputc@fp,w
  3259  032F  1D03               	btfss	3,2
  3260  0330  2B32               	goto	u751
  3261  0331  2B33               	goto	u750
  3262  0332                     u751:	
  3263  0332  2B38               	goto	l1500
  3264  0333                     u750:	
  3265  0333                     l1498:	
  3266  0333  0872               	movf	fputc@c,w
  3267  0334  3180  20F6  3183   	fcall	_putch
  3268  0337  2B67               	goto	l965
  3269  0338                     l1500:	
  3270  0338  0874               	movf	fputc@fp,w
  3271  0339  3E03               	addlw	3
  3272  033A  0086               	movwf	6
  3273  033B  0187               	clrf	7
  3274  033C  0016               	moviw fsr1++
  3275  033D  0401               	iorwf	1,w
  3276  033E  1903               	btfsc	3,2
  3277  033F  2B41               	goto	u761
  3278  0340  2B42               	goto	u760
  3279  0341                     u761:	
  3280  0341  2B5F               	goto	l1504
  3281  0342                     u760:	
  3282  0342                     l1502:	
  3283  0342  0874               	movf	fputc@fp,w
  3284  0343  3E03               	addlw	3
  3285  0344  0086               	movwf	6
  3286  0345  0187               	clrf	7
  3287  0346  3F40               	moviw [0]fsr1
  3288  0347  00F5               	movwf	??_fputc
  3289  0348  3F41               	moviw [1]fsr1
  3290  0349  00F6               	movwf	??_fputc+1
  3291  034A  0A74               	incf	fputc@fp,w
  3292  034B  0086               	movwf	6
  3293  034C  0187               	clrf	7
  3294  034D  3F40               	moviw [0]fsr1
  3295  034E  00F7               	movwf	??_fputc+2
  3296  034F  3F41               	moviw [1]fsr1
  3297  0350  00F8               	movwf	??_fputc+3
  3298  0351  0878               	movf	??_fputc+3,w
  3299  0352  3A80               	xorlw	128
  3300  0353  00F9               	movwf	??_fputc+4
  3301  0354  0876               	movf	??_fputc+1,w
  3302  0355  3A80               	xorlw	128
  3303  0356  0279               	subwf	??_fputc+4,w
  3304  0357  1D03               	skipz
  3305  0358  2B5B               	goto	u775
  3306  0359  0875               	movf	??_fputc,w
  3307  035A  0277               	subwf	??_fputc+2,w
  3308  035B                     u775:	
  3309  035B  1803               	skipnc
  3310  035C  2B5E               	goto	u771
  3311  035D  2B5F               	goto	u770
  3312  035E                     u771:	
  3313  035E  2B67               	goto	l965
  3314  035F                     u770:	
  3315  035F                     l1504:	
  3316  035F  0A74               	incf	fputc@fp,w
  3317  0360  0086               	movwf	6
  3318  0361  0187               	clrf	7
  3319  0362  3001               	movlw	1
  3320  0363  0781               	addwf	1,f
  3321  0364  3141               	addfsr 1,1
  3322  0365  1803               	skipnc
  3323  0366  0A81               	incf	1,f
  3324  0367                     l965:	
  3325  0367  0008               	return
  3326  0368                     __end_of_fputc:	
  3327                           
  3328                           	psect	text9
  3329  00F6                     __ptext9:	
  3330 ;; *************** function _putch *****************
  3331 ;; Defined at:
  3332 ;;		line 146 in file "mcc_generated_files/eusart.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  txData          1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  txData          1    1[COMMON] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3346 ;;      Params:         0       0       0       0       0       0       0       0
  3347 ;;      Locals:         1       0       0       0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0
  3349 ;;      Totals:         1       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        1 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    1
  3353 ;; This function calls:
  3354 ;;		_EUSART_Write
  3355 ;; This function is called by:
  3356 ;;		_fputc
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _putch
  3362  00F6                     _putch:	
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3366                           ;putch@txData stored from wreg
  3367  00F6  00F1               	movwf	putch@txData
  3368  00F7                     l1488:	
  3369                           
  3370                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  3371  00F7  0871               	movf	putch@txData,w
  3372  00F8  3181  2112  3180   	fcall	_EUSART_Write
  3373  00FB                     l76:	
  3374  00FB  0008               	return
  3375  00FC                     __end_of_putch:	
  3376                           
  3377                           	psect	text10
  3378  0112                     __ptext10:	
  3379 ;; *************** function _EUSART_Write *****************
  3380 ;; Defined at:
  3381 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  txData          1    wreg     unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  txData          1    0[COMMON] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3395 ;;      Params:         0       0       0       0       0       0       0       0
  3396 ;;      Locals:         1       0       0       0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0
  3398 ;;      Totals:         1       0       0       0       0       0       0       0
  3399 ;;Total ram usage:        1 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_putch
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _EUSART_Write
  3410  0112                     _EUSART_Write:	
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _EUSART_Write: [wreg]
  3414                           ;EUSART_Write@txData stored from wreg
  3415  0112  00F0               	movwf	EUSART_Write@txData
  3416  0113                     l1484:	
  3417  0113                     l67:	
  3418                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3419                           
  3420                           
  3421                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3422  0113  0020               	movlb	0	; select bank0
  3423  0114  1E11               	btfss	17,4	;volatile
  3424  0115  2917               	goto	u711
  3425  0116  2918               	goto	u710
  3426  0117                     u711:	
  3427  0117  2913               	goto	l67
  3428  0118                     u710:	
  3429  0118                     l1486:	
  3430                           
  3431                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3432  0118  0870               	movf	EUSART_Write@txData,w
  3433  0119  0023               	movlb	3	; select bank3
  3434  011A  009A               	movwf	26	;volatile
  3435  011B                     l70:	
  3436  011B  0008               	return
  3437  011C                     __end_of_EUSART_Write:	
  3438                           
  3439                           	psect	text11
  3440  0199                     __ptext11:	
  3441 ;; *************** function _abs *****************
  3442 ;; Defined at:
  3443 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  a               2    3[COMMON] int 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2    3[COMMON] int 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3457 ;;      Params:         2       0       0       0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0
  3459 ;;      Temps:          2       0       0       0       0       0       0       0
  3460 ;;      Totals:         4       0       0       0       0       0       0       0
  3461 ;;Total ram usage:        4 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_dtoa
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _abs
  3472  0199                     _abs:	
  3473  0199                     l1586:	
  3474                           ;incstack = 0
  3475                           ; Regs used in _abs: [wreg+status,2+status,0]
  3476                           
  3477  0199  0874               	movf	abs@a+1,w
  3478  019A  3A80               	xorlw	128
  3479  019B  00F5               	movwf	??_abs
  3480  019C  3080               	movlw	128
  3481  019D  0275               	subwf	??_abs,w
  3482  019E  1D03               	skipz
  3483  019F  29A2               	goto	u865
  3484  01A0  3001               	movlw	1
  3485  01A1  0273               	subwf	abs@a,w
  3486  01A2                     u865:	
  3487  01A2  1803               	skipnc
  3488  01A3  29A5               	goto	u861
  3489  01A4  29A6               	goto	u860
  3490  01A5                     u861:	
  3491  01A5  29B2               	goto	l950
  3492  01A6                     u860:	
  3493  01A6                     l1588:	
  3494  01A6  0973               	comf	abs@a,w
  3495  01A7  00F5               	movwf	??_abs
  3496  01A8  0974               	comf	abs@a+1,w
  3497  01A9  00F6               	movwf	??_abs+1
  3498  01AA  0AF5               	incf	??_abs,f
  3499  01AB  1903               	skipnz
  3500  01AC  0AF6               	incf	??_abs+1,f
  3501  01AD  0875               	movf	??_abs,w
  3502  01AE  00F3               	movwf	?_abs
  3503  01AF  0876               	movf	??_abs+1,w
  3504  01B0  00F4               	movwf	?_abs+1
  3505  01B1  29B2               	goto	l953
  3506  01B2                     l950:	
  3507  01B2                     l953:	
  3508  01B2  0008               	return
  3509  01B3                     __end_of_abs:	
  3510                           
  3511                           	psect	text12
  3512  049C                     __ptext12:	
  3513 ;; *************** function ___aomod *****************
  3514 ;; Defined at:
  3515 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  divisor         8    0[BANK0 ] long long 
  3518 ;;  dividend        8    8[BANK0 ] long long 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  sign            1    2[COMMON] unsigned char 
  3521 ;;  counter         1    1[COMMON] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  8    0[BANK0 ] long long 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3531 ;;      Params:         0      16       0       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0       0
  3533 ;;      Temps:          1       0       0       0       0       0       0       0
  3534 ;;      Totals:         3      16       0       0       0       0       0       0
  3535 ;;Total ram usage:       19 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_dtoa
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function ___aomod
  3546  049C                     ___aomod:	
  3547  049C                     l1628:	
  3548                           ;incstack = 0
  3549                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3550                           
  3551  049C  01F2               	clrf	___aomod@sign
  3552  049D                     l1630:	
  3553  049D  3028               	movlw	low ___aomod@dividend
  3554  049E  0086               	movwf	6
  3555  049F  3000               	movlw	high ___aomod@dividend
  3556  04A0  0087               	movwf	7
  3557  04A1  3F47               	moviw [7]fsr1
  3558  04A2  00F0               	movwf	??___aomod
  3559  04A3  1FF0               	btfss	??___aomod,7
  3560  04A4  2CA6               	goto	u981
  3561  04A5  2CA7               	goto	u980
  3562  04A6                     u981:	
  3563  04A6  2CC8               	goto	l1634
  3564  04A7                     u980:	
  3565  04A7                     l1632:	
  3566  04A7  0020               	movlb	0	; select bank0
  3567  04A8  09A8               	comf	___aomod@dividend,f
  3568  04A9  09A9               	comf	___aomod@dividend+1,f
  3569  04AA  09AA               	comf	___aomod@dividend+2,f
  3570  04AB  09AB               	comf	___aomod@dividend+3,f
  3571  04AC  09AC               	comf	___aomod@dividend+4,f
  3572  04AD  09AD               	comf	___aomod@dividend+5,f
  3573  04AE  09AE               	comf	___aomod@dividend+6,f
  3574  04AF  09AF               	comf	___aomod@dividend+7,f
  3575  04B0  0AA8               	incf	___aomod@dividend,f
  3576  04B1  1D03               	skipz
  3577  04B2  2CC6               	goto	u99lld
  3578  04B3  0AA9               	incf	___aomod@dividend+1,f
  3579  04B4  1D03               	skipz
  3580  04B5  2CC6               	goto	u99lld
  3581  04B6  0AAA               	incf	___aomod@dividend+2,f
  3582  04B7  1D03               	skipz
  3583  04B8  2CC6               	goto	u99lld
  3584  04B9  0AAB               	incf	___aomod@dividend+3,f
  3585  04BA  1D03               	skipz
  3586  04BB  2CC6               	goto	u99lld
  3587  04BC  0AAC               	incf	___aomod@dividend+4,f
  3588  04BD  1D03               	skipz
  3589  04BE  2CC6               	goto	u99lld
  3590  04BF  0AAD               	incf	___aomod@dividend+5,f
  3591  04C0  1D03               	skipz
  3592  04C1  2CC6               	goto	u99lld
  3593  04C2  0AAE               	incf	___aomod@dividend+6,f
  3594  04C3  1D03               	skipz
  3595  04C4  2CC6               	goto	u99lld
  3596  04C5  0AAF               	incf	___aomod@dividend+7,f
  3597  04C6                     u99lld:	
  3598  04C6  01F2               	clrf	___aomod@sign
  3599  04C7  0AF2               	incf	___aomod@sign,f
  3600  04C8                     l1634:	
  3601  04C8  3020               	movlw	low ___aomod@divisor
  3602  04C9  0086               	movwf	6
  3603  04CA  3000               	movlw	high ___aomod@divisor
  3604  04CB  0087               	movwf	7
  3605  04CC  3F47               	moviw [7]fsr1
  3606  04CD  00F0               	movwf	??___aomod
  3607  04CE  1FF0               	btfss	??___aomod,7
  3608  04CF  2CD1               	goto	u1001
  3609  04D0  2CD2               	goto	u1000
  3610  04D1                     u1001:	
  3611  04D1  2CF1               	goto	l1638
  3612  04D2                     u1000:	
  3613  04D2                     l1636:	
  3614  04D2  0020               	movlb	0	; select bank0
  3615  04D3  09A0               	comf	___aomod@divisor,f
  3616  04D4  09A1               	comf	___aomod@divisor+1,f
  3617  04D5  09A2               	comf	___aomod@divisor+2,f
  3618  04D6  09A3               	comf	___aomod@divisor+3,f
  3619  04D7  09A4               	comf	___aomod@divisor+4,f
  3620  04D8  09A5               	comf	___aomod@divisor+5,f
  3621  04D9  09A6               	comf	___aomod@divisor+6,f
  3622  04DA  09A7               	comf	___aomod@divisor+7,f
  3623  04DB  0AA0               	incf	___aomod@divisor,f
  3624  04DC  1D03               	skipz
  3625  04DD  2CF1               	goto	u101lld
  3626  04DE  0AA1               	incf	___aomod@divisor+1,f
  3627  04DF  1D03               	skipz
  3628  04E0  2CF1               	goto	u101lld
  3629  04E1  0AA2               	incf	___aomod@divisor+2,f
  3630  04E2  1D03               	skipz
  3631  04E3  2CF1               	goto	u101lld
  3632  04E4  0AA3               	incf	___aomod@divisor+3,f
  3633  04E5  1D03               	skipz
  3634  04E6  2CF1               	goto	u101lld
  3635  04E7  0AA4               	incf	___aomod@divisor+4,f
  3636  04E8  1D03               	skipz
  3637  04E9  2CF1               	goto	u101lld
  3638  04EA  0AA5               	incf	___aomod@divisor+5,f
  3639  04EB  1D03               	skipz
  3640  04EC  2CF1               	goto	u101lld
  3641  04ED  0AA6               	incf	___aomod@divisor+6,f
  3642  04EE  1D03               	skipz
  3643  04EF  2CF1               	goto	u101lld
  3644  04F0  0AA7               	incf	___aomod@divisor+7,f
  3645  04F1                     u101lld:	
  3646  04F1                     l1638:	
  3647  04F1  0020               	movlb	0	; select bank0
  3648  04F2  0820               	movf	___aomod@divisor,w
  3649  04F3  0421               	iorwf	___aomod@divisor+1,w
  3650  04F4  0422               	iorwf	___aomod@divisor+2,w
  3651  04F5  0423               	iorwf	___aomod@divisor+3,w
  3652  04F6  0424               	iorwf	___aomod@divisor+4,w
  3653  04F7  0425               	iorwf	___aomod@divisor+5,w
  3654  04F8  0426               	iorwf	___aomod@divisor+6,w
  3655  04F9  0427               	iorwf	___aomod@divisor+7,w
  3656  04FA  1903               	skipnz
  3657  04FB  2CFD               	goto	u1021
  3658  04FC  2CFE               	goto	u1020
  3659  04FD                     u1021:	
  3660  04FD  2D51               	goto	l1654
  3661  04FE                     u1020:	
  3662  04FE                     l1640:	
  3663  04FE  01F1               	clrf	___aomod@counter
  3664  04FF  0AF1               	incf	___aomod@counter,f
  3665  0500  2D0D               	goto	l1646
  3666  0501                     l1642:	
  3667  0501  35A0               	lslf	___aomod@divisor,f
  3668  0502  0DA1               	rlf	___aomod@divisor+1,f
  3669  0503  0DA2               	rlf	___aomod@divisor+2,f
  3670  0504  0DA3               	rlf	___aomod@divisor+3,f
  3671  0505  0DA4               	rlf	___aomod@divisor+4,f
  3672  0506  0DA5               	rlf	___aomod@divisor+5,f
  3673  0507  0DA6               	rlf	___aomod@divisor+6,f
  3674  0508  0DA7               	rlf	___aomod@divisor+7,f
  3675  0509                     l1644:	
  3676  0509  3001               	movlw	1
  3677  050A  00F0               	movwf	??___aomod
  3678  050B  0870               	movf	??___aomod,w
  3679  050C  07F1               	addwf	___aomod@counter,f
  3680  050D                     l1646:	
  3681  050D  1FA7               	btfss	___aomod@divisor+7,7
  3682  050E  2D10               	goto	u1031
  3683  050F  2D11               	goto	u1030
  3684  0510                     u1031:	
  3685  0510  2D01               	goto	l1642
  3686  0511                     u1030:	
  3687  0511                     l1648:	
  3688  0511  0827               	movf	___aomod@divisor+7,w
  3689  0512  022F               	subwf	___aomod@dividend+7,w
  3690  0513  1D03               	skipz
  3691  0514  2D2F               	goto	u1045
  3692  0515  0826               	movf	___aomod@divisor+6,w
  3693  0516  022E               	subwf	___aomod@dividend+6,w
  3694  0517  1D03               	skipz
  3695  0518  2D2F               	goto	u1045
  3696  0519  0825               	movf	___aomod@divisor+5,w
  3697  051A  022D               	subwf	___aomod@dividend+5,w
  3698  051B  1D03               	skipz
  3699  051C  2D2F               	goto	u1045
  3700  051D  0824               	movf	___aomod@divisor+4,w
  3701  051E  022C               	subwf	___aomod@dividend+4,w
  3702  051F  1D03               	skipz
  3703  0520  2D2F               	goto	u1045
  3704  0521  0823               	movf	___aomod@divisor+3,w
  3705  0522  022B               	subwf	___aomod@dividend+3,w
  3706  0523  1D03               	skipz
  3707  0524  2D2F               	goto	u1045
  3708  0525  0822               	movf	___aomod@divisor+2,w
  3709  0526  022A               	subwf	___aomod@dividend+2,w
  3710  0527  1D03               	skipz
  3711  0528  2D2F               	goto	u1045
  3712  0529  0821               	movf	___aomod@divisor+1,w
  3713  052A  0229               	subwf	___aomod@dividend+1,w
  3714  052B  1D03               	skipz
  3715  052C  2D2F               	goto	u1045
  3716  052D  0820               	movf	___aomod@divisor,w
  3717  052E  0228               	subwf	___aomod@dividend,w
  3718  052F                     u1045:	
  3719  052F  1C03               	skipc
  3720  0530  2D32               	goto	u1041
  3721  0531  2D33               	goto	u1040
  3722  0532                     u1041:	
  3723  0532  2D43               	goto	l1652
  3724  0533                     u1040:	
  3725  0533                     l1650:	
  3726  0533  0820               	movf	___aomod@divisor,w
  3727  0534  02A8               	subwf	___aomod@dividend,f
  3728  0535  0821               	movf	___aomod@divisor+1,w
  3729  0536  3BA9               	subwfb	___aomod@dividend+1,f
  3730  0537  0822               	movf	___aomod@divisor+2,w
  3731  0538  3BAA               	subwfb	___aomod@dividend+2,f
  3732  0539  0823               	movf	___aomod@divisor+3,w
  3733  053A  3BAB               	subwfb	___aomod@dividend+3,f
  3734  053B  0824               	movf	___aomod@divisor+4,w
  3735  053C  3BAC               	subwfb	___aomod@dividend+4,f
  3736  053D  0825               	movf	___aomod@divisor+5,w
  3737  053E  3BAD               	subwfb	___aomod@dividend+5,f
  3738  053F  0826               	movf	___aomod@divisor+6,w
  3739  0540  3BAE               	subwfb	___aomod@dividend+6,f
  3740  0541  0827               	movf	___aomod@divisor+7,w
  3741  0542  3BAF               	subwfb	___aomod@dividend+7,f
  3742  0543                     l1652:	
  3743  0543  36A7               	lsrf	___aomod@divisor+7,f
  3744  0544  0CA6               	rrf	___aomod@divisor+6,f
  3745  0545  0CA5               	rrf	___aomod@divisor+5,f
  3746  0546  0CA4               	rrf	___aomod@divisor+4,f
  3747  0547  0CA3               	rrf	___aomod@divisor+3,f
  3748  0548  0CA2               	rrf	___aomod@divisor+2,f
  3749  0549  0CA1               	rrf	___aomod@divisor+1,f
  3750  054A  0CA0               	rrf	___aomod@divisor,f
  3751  054B  3001               	movlw	1
  3752  054C  02F1               	subwf	___aomod@counter,f
  3753  054D  1D03               	btfss	3,2
  3754  054E  2D50               	goto	u1051
  3755  054F  2D51               	goto	u1050
  3756  0550                     u1051:	
  3757  0550  2D11               	goto	l1648
  3758  0551                     u1050:	
  3759  0551                     l1654:	
  3760  0551  0872               	movf	___aomod@sign,w
  3761  0552  1903               	btfsc	3,2
  3762  0553  2D55               	goto	u1061
  3763  0554  2D56               	goto	u1060
  3764  0555                     u1061:	
  3765  0555  2D74               	goto	l609
  3766  0556                     u1060:	
  3767  0556                     l1656:	
  3768  0556  09A8               	comf	___aomod@dividend,f
  3769  0557  09A9               	comf	___aomod@dividend+1,f
  3770  0558  09AA               	comf	___aomod@dividend+2,f
  3771  0559  09AB               	comf	___aomod@dividend+3,f
  3772  055A  09AC               	comf	___aomod@dividend+4,f
  3773  055B  09AD               	comf	___aomod@dividend+5,f
  3774  055C  09AE               	comf	___aomod@dividend+6,f
  3775  055D  09AF               	comf	___aomod@dividend+7,f
  3776  055E  0AA8               	incf	___aomod@dividend,f
  3777  055F  1D03               	skipz
  3778  0560  2D74               	goto	u107lld
  3779  0561  0AA9               	incf	___aomod@dividend+1,f
  3780  0562  1D03               	skipz
  3781  0563  2D74               	goto	u107lld
  3782  0564  0AAA               	incf	___aomod@dividend+2,f
  3783  0565  1D03               	skipz
  3784  0566  2D74               	goto	u107lld
  3785  0567  0AAB               	incf	___aomod@dividend+3,f
  3786  0568  1D03               	skipz
  3787  0569  2D74               	goto	u107lld
  3788  056A  0AAC               	incf	___aomod@dividend+4,f
  3789  056B  1D03               	skipz
  3790  056C  2D74               	goto	u107lld
  3791  056D  0AAD               	incf	___aomod@dividend+5,f
  3792  056E  1D03               	skipz
  3793  056F  2D74               	goto	u107lld
  3794  0570  0AAE               	incf	___aomod@dividend+6,f
  3795  0571  1D03               	skipz
  3796  0572  2D74               	goto	u107lld
  3797  0573  0AAF               	incf	___aomod@dividend+7,f
  3798  0574                     u107lld:	
  3799  0574                     l609:	
  3800  0574  0020               	movlb	0	; select bank0
  3801  0575  0828               	movf	___aomod@dividend,w
  3802  0576  00A0               	movwf	?___aomod
  3803  0577  0829               	movf	___aomod@dividend+1,w
  3804  0578  00A1               	movwf	?___aomod+1
  3805  0579  082A               	movf	___aomod@dividend+2,w
  3806  057A  00A2               	movwf	?___aomod+2
  3807  057B  082B               	movf	___aomod@dividend+3,w
  3808  057C  00A3               	movwf	?___aomod+3
  3809  057D  082C               	movf	___aomod@dividend+4,w
  3810  057E  00A4               	movwf	?___aomod+4
  3811  057F  082D               	movf	___aomod@dividend+5,w
  3812  0580  00A5               	movwf	?___aomod+5
  3813  0581  082E               	movf	___aomod@dividend+6,w
  3814  0582  00A6               	movwf	?___aomod+6
  3815  0583  082F               	movf	___aomod@dividend+7,w
  3816  0584  00A7               	movwf	?___aomod+7
  3817  0585                     l610:	
  3818  0585  0008               	return
  3819  0586                     __end_of___aomod:	
  3820                           
  3821                           	psect	text13
  3822  0586                     __ptext13:	
  3823 ;; *************** function ___aodiv *****************
  3824 ;; Defined at:
  3825 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  divisor         8    0[BANK0 ] long long 
  3828 ;;  dividend        8    8[BANK0 ] long long 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  quotient        8    3[COMMON] long long 
  3831 ;;  sign            1    2[COMMON] unsigned char 
  3832 ;;  counter         1    1[COMMON] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  8    0[BANK0 ] long long 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3842 ;;      Params:         0      16       0       0       0       0       0       0
  3843 ;;      Locals:        10       0       0       0       0       0       0       0
  3844 ;;      Temps:          1       0       0       0       0       0       0       0
  3845 ;;      Totals:        11      16       0       0       0       0       0       0
  3846 ;;Total ram usage:       27 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_dtoa
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           
  3856                           ;psect for function ___aodiv
  3857  0586                     ___aodiv:	
  3858  0586                     l1590:	
  3859                           ;incstack = 0
  3860                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3861                           
  3862  0586  01F2               	clrf	___aodiv@sign
  3863  0587                     l1592:	
  3864  0587  3020               	movlw	low ___aodiv@divisor
  3865  0588  0086               	movwf	6
  3866  0589  3000               	movlw	high ___aodiv@divisor
  3867  058A  0087               	movwf	7
  3868  058B  3F47               	moviw [7]fsr1
  3869  058C  00F0               	movwf	??___aodiv
  3870  058D  1FF0               	btfss	??___aodiv,7
  3871  058E  2D90               	goto	u871
  3872  058F  2D91               	goto	u870
  3873  0590                     u871:	
  3874  0590  2DB2               	goto	l1596
  3875  0591                     u870:	
  3876  0591                     l1594:	
  3877  0591  0020               	movlb	0	; select bank0
  3878  0592  09A0               	comf	___aodiv@divisor,f
  3879  0593  09A1               	comf	___aodiv@divisor+1,f
  3880  0594  09A2               	comf	___aodiv@divisor+2,f
  3881  0595  09A3               	comf	___aodiv@divisor+3,f
  3882  0596  09A4               	comf	___aodiv@divisor+4,f
  3883  0597  09A5               	comf	___aodiv@divisor+5,f
  3884  0598  09A6               	comf	___aodiv@divisor+6,f
  3885  0599  09A7               	comf	___aodiv@divisor+7,f
  3886  059A  0AA0               	incf	___aodiv@divisor,f
  3887  059B  1D03               	skipz
  3888  059C  2DB0               	goto	u88lld
  3889  059D  0AA1               	incf	___aodiv@divisor+1,f
  3890  059E  1D03               	skipz
  3891  059F  2DB0               	goto	u88lld
  3892  05A0  0AA2               	incf	___aodiv@divisor+2,f
  3893  05A1  1D03               	skipz
  3894  05A2  2DB0               	goto	u88lld
  3895  05A3  0AA3               	incf	___aodiv@divisor+3,f
  3896  05A4  1D03               	skipz
  3897  05A5  2DB0               	goto	u88lld
  3898  05A6  0AA4               	incf	___aodiv@divisor+4,f
  3899  05A7  1D03               	skipz
  3900  05A8  2DB0               	goto	u88lld
  3901  05A9  0AA5               	incf	___aodiv@divisor+5,f
  3902  05AA  1D03               	skipz
  3903  05AB  2DB0               	goto	u88lld
  3904  05AC  0AA6               	incf	___aodiv@divisor+6,f
  3905  05AD  1D03               	skipz
  3906  05AE  2DB0               	goto	u88lld
  3907  05AF  0AA7               	incf	___aodiv@divisor+7,f
  3908  05B0                     u88lld:	
  3909  05B0  01F2               	clrf	___aodiv@sign
  3910  05B1  0AF2               	incf	___aodiv@sign,f
  3911  05B2                     l1596:	
  3912  05B2  3028               	movlw	low ___aodiv@dividend
  3913  05B3  0086               	movwf	6
  3914  05B4  3000               	movlw	high ___aodiv@dividend
  3915  05B5  0087               	movwf	7
  3916  05B6  3F47               	moviw [7]fsr1
  3917  05B7  00F0               	movwf	??___aodiv
  3918  05B8  1FF0               	btfss	??___aodiv,7
  3919  05B9  2DBB               	goto	u891
  3920  05BA  2DBC               	goto	u890
  3921  05BB                     u891:	
  3922  05BB  2DDF               	goto	l1602
  3923  05BC                     u890:	
  3924  05BC                     l1598:	
  3925  05BC  0020               	movlb	0	; select bank0
  3926  05BD  09A8               	comf	___aodiv@dividend,f
  3927  05BE  09A9               	comf	___aodiv@dividend+1,f
  3928  05BF  09AA               	comf	___aodiv@dividend+2,f
  3929  05C0  09AB               	comf	___aodiv@dividend+3,f
  3930  05C1  09AC               	comf	___aodiv@dividend+4,f
  3931  05C2  09AD               	comf	___aodiv@dividend+5,f
  3932  05C3  09AE               	comf	___aodiv@dividend+6,f
  3933  05C4  09AF               	comf	___aodiv@dividend+7,f
  3934  05C5  0AA8               	incf	___aodiv@dividend,f
  3935  05C6  1D03               	skipz
  3936  05C7  2DDB               	goto	u90lld
  3937  05C8  0AA9               	incf	___aodiv@dividend+1,f
  3938  05C9  1D03               	skipz
  3939  05CA  2DDB               	goto	u90lld
  3940  05CB  0AAA               	incf	___aodiv@dividend+2,f
  3941  05CC  1D03               	skipz
  3942  05CD  2DDB               	goto	u90lld
  3943  05CE  0AAB               	incf	___aodiv@dividend+3,f
  3944  05CF  1D03               	skipz
  3945  05D0  2DDB               	goto	u90lld
  3946  05D1  0AAC               	incf	___aodiv@dividend+4,f
  3947  05D2  1D03               	skipz
  3948  05D3  2DDB               	goto	u90lld
  3949  05D4  0AAD               	incf	___aodiv@dividend+5,f
  3950  05D5  1D03               	skipz
  3951  05D6  2DDB               	goto	u90lld
  3952  05D7  0AAE               	incf	___aodiv@dividend+6,f
  3953  05D8  1D03               	skipz
  3954  05D9  2DDB               	goto	u90lld
  3955  05DA  0AAF               	incf	___aodiv@dividend+7,f
  3956  05DB                     u90lld:	
  3957  05DB                     l1600:	
  3958  05DB  3001               	movlw	1
  3959  05DC  00F0               	movwf	??___aodiv
  3960  05DD  0870               	movf	??___aodiv,w
  3961  05DE  06F2               	xorwf	___aodiv@sign,f
  3962  05DF                     l1602:	
  3963  05DF  3073               	movlw	low ___aodiv@quotient
  3964  05E0  0086               	movwf	6
  3965  05E1  3000               	movlw	high ___aodiv@quotient
  3966  05E2  0087               	movwf	7
  3967  05E3  3008               	movlw	8
  3968  05E4  00F0               	movwf	??___aodiv
  3969  05E5  3000               	movlw	0
  3970  05E6                     u910:	
  3971  05E6  001E               	movwi fsr1++
  3972  05E7  0BF0               	decfsz	??___aodiv,f
  3973  05E8  2DE6               	goto	u910
  3974  05E9                     l1604:	
  3975  05E9  0020               	movlb	0	; select bank0
  3976  05EA  0820               	movf	___aodiv@divisor,w
  3977  05EB  0421               	iorwf	___aodiv@divisor+1,w
  3978  05EC  0422               	iorwf	___aodiv@divisor+2,w
  3979  05ED  0423               	iorwf	___aodiv@divisor+3,w
  3980  05EE  0424               	iorwf	___aodiv@divisor+4,w
  3981  05EF  0425               	iorwf	___aodiv@divisor+5,w
  3982  05F0  0426               	iorwf	___aodiv@divisor+6,w
  3983  05F1  0427               	iorwf	___aodiv@divisor+7,w
  3984  05F2  1903               	skipnz
  3985  05F3  2DF5               	goto	u921
  3986  05F4  2DF6               	goto	u920
  3987  05F5                     u921:	
  3988  05F5  2E52               	goto	l1624
  3989  05F6                     u920:	
  3990  05F6                     l1606:	
  3991  05F6  01F1               	clrf	___aodiv@counter
  3992  05F7  0AF1               	incf	___aodiv@counter,f
  3993  05F8  2E05               	goto	l1612
  3994  05F9                     l1608:	
  3995  05F9  35A0               	lslf	___aodiv@divisor,f
  3996  05FA  0DA1               	rlf	___aodiv@divisor+1,f
  3997  05FB  0DA2               	rlf	___aodiv@divisor+2,f
  3998  05FC  0DA3               	rlf	___aodiv@divisor+3,f
  3999  05FD  0DA4               	rlf	___aodiv@divisor+4,f
  4000  05FE  0DA5               	rlf	___aodiv@divisor+5,f
  4001  05FF  0DA6               	rlf	___aodiv@divisor+6,f
  4002  0600  0DA7               	rlf	___aodiv@divisor+7,f
  4003  0601                     l1610:	
  4004  0601  3001               	movlw	1
  4005  0602  00F0               	movwf	??___aodiv
  4006  0603  0870               	movf	??___aodiv,w
  4007  0604  07F1               	addwf	___aodiv@counter,f
  4008  0605                     l1612:	
  4009  0605  1FA7               	btfss	___aodiv@divisor+7,7
  4010  0606  2E08               	goto	u931
  4011  0607  2E09               	goto	u930
  4012  0608                     u931:	
  4013  0608  2DF9               	goto	l1608
  4014  0609                     u930:	
  4015  0609                     l1614:	
  4016  0609  35F3               	lslf	___aodiv@quotient,f
  4017  060A  0DF4               	rlf	___aodiv@quotient+1,f
  4018  060B  0DF5               	rlf	___aodiv@quotient+2,f
  4019  060C  0DF6               	rlf	___aodiv@quotient+3,f
  4020  060D  0DF7               	rlf	___aodiv@quotient+4,f
  4021  060E  0DF8               	rlf	___aodiv@quotient+5,f
  4022  060F  0DF9               	rlf	___aodiv@quotient+6,f
  4023  0610  0DFA               	rlf	___aodiv@quotient+7,f
  4024  0611                     l1616:	
  4025  0611  0827               	movf	___aodiv@divisor+7,w
  4026  0612  022F               	subwf	___aodiv@dividend+7,w
  4027  0613  1D03               	skipz
  4028  0614  2E2F               	goto	u945
  4029  0615  0826               	movf	___aodiv@divisor+6,w
  4030  0616  022E               	subwf	___aodiv@dividend+6,w
  4031  0617  1D03               	skipz
  4032  0618  2E2F               	goto	u945
  4033  0619  0825               	movf	___aodiv@divisor+5,w
  4034  061A  022D               	subwf	___aodiv@dividend+5,w
  4035  061B  1D03               	skipz
  4036  061C  2E2F               	goto	u945
  4037  061D  0824               	movf	___aodiv@divisor+4,w
  4038  061E  022C               	subwf	___aodiv@dividend+4,w
  4039  061F  1D03               	skipz
  4040  0620  2E2F               	goto	u945
  4041  0621  0823               	movf	___aodiv@divisor+3,w
  4042  0622  022B               	subwf	___aodiv@dividend+3,w
  4043  0623  1D03               	skipz
  4044  0624  2E2F               	goto	u945
  4045  0625  0822               	movf	___aodiv@divisor+2,w
  4046  0626  022A               	subwf	___aodiv@dividend+2,w
  4047  0627  1D03               	skipz
  4048  0628  2E2F               	goto	u945
  4049  0629  0821               	movf	___aodiv@divisor+1,w
  4050  062A  0229               	subwf	___aodiv@dividend+1,w
  4051  062B  1D03               	skipz
  4052  062C  2E2F               	goto	u945
  4053  062D  0820               	movf	___aodiv@divisor,w
  4054  062E  0228               	subwf	___aodiv@dividend,w
  4055  062F                     u945:	
  4056  062F  1C03               	skipc
  4057  0630  2E32               	goto	u941
  4058  0631  2E33               	goto	u940
  4059  0632                     u941:	
  4060  0632  2E44               	goto	l1622
  4061  0633                     u940:	
  4062  0633                     l1618:	
  4063  0633  0820               	movf	___aodiv@divisor,w
  4064  0634  02A8               	subwf	___aodiv@dividend,f
  4065  0635  0821               	movf	___aodiv@divisor+1,w
  4066  0636  3BA9               	subwfb	___aodiv@dividend+1,f
  4067  0637  0822               	movf	___aodiv@divisor+2,w
  4068  0638  3BAA               	subwfb	___aodiv@dividend+2,f
  4069  0639  0823               	movf	___aodiv@divisor+3,w
  4070  063A  3BAB               	subwfb	___aodiv@dividend+3,f
  4071  063B  0824               	movf	___aodiv@divisor+4,w
  4072  063C  3BAC               	subwfb	___aodiv@dividend+4,f
  4073  063D  0825               	movf	___aodiv@divisor+5,w
  4074  063E  3BAD               	subwfb	___aodiv@dividend+5,f
  4075  063F  0826               	movf	___aodiv@divisor+6,w
  4076  0640  3BAE               	subwfb	___aodiv@dividend+6,f
  4077  0641  0827               	movf	___aodiv@divisor+7,w
  4078  0642  3BAF               	subwfb	___aodiv@dividend+7,f
  4079  0643                     l1620:	
  4080  0643  1473               	bsf	___aodiv@quotient,0
  4081  0644                     l1622:	
  4082  0644  36A7               	lsrf	___aodiv@divisor+7,f
  4083  0645  0CA6               	rrf	___aodiv@divisor+6,f
  4084  0646  0CA5               	rrf	___aodiv@divisor+5,f
  4085  0647  0CA4               	rrf	___aodiv@divisor+4,f
  4086  0648  0CA3               	rrf	___aodiv@divisor+3,f
  4087  0649  0CA2               	rrf	___aodiv@divisor+2,f
  4088  064A  0CA1               	rrf	___aodiv@divisor+1,f
  4089  064B  0CA0               	rrf	___aodiv@divisor,f
  4090  064C  3001               	movlw	1
  4091  064D  02F1               	subwf	___aodiv@counter,f
  4092  064E  1D03               	btfss	3,2
  4093  064F  2E51               	goto	u951
  4094  0650  2E52               	goto	u950
  4095  0651                     u951:	
  4096  0651  2E09               	goto	l1614
  4097  0652                     u950:	
  4098  0652                     l1624:	
  4099  0652  0872               	movf	___aodiv@sign,w
  4100  0653  1903               	btfsc	3,2
  4101  0654  2E56               	goto	u961
  4102  0655  2E57               	goto	u960
  4103  0656                     u961:	
  4104  0656  2E75               	goto	l596
  4105  0657                     u960:	
  4106  0657                     l1626:	
  4107  0657  09F3               	comf	___aodiv@quotient,f
  4108  0658  09F4               	comf	___aodiv@quotient+1,f
  4109  0659  09F5               	comf	___aodiv@quotient+2,f
  4110  065A  09F6               	comf	___aodiv@quotient+3,f
  4111  065B  09F7               	comf	___aodiv@quotient+4,f
  4112  065C  09F8               	comf	___aodiv@quotient+5,f
  4113  065D  09F9               	comf	___aodiv@quotient+6,f
  4114  065E  09FA               	comf	___aodiv@quotient+7,f
  4115  065F  0AF3               	incf	___aodiv@quotient,f
  4116  0660  1D03               	skipz
  4117  0661  2E75               	goto	u97lld
  4118  0662  0AF4               	incf	___aodiv@quotient+1,f
  4119  0663  1D03               	skipz
  4120  0664  2E75               	goto	u97lld
  4121  0665  0AF5               	incf	___aodiv@quotient+2,f
  4122  0666  1D03               	skipz
  4123  0667  2E75               	goto	u97lld
  4124  0668  0AF6               	incf	___aodiv@quotient+3,f
  4125  0669  1D03               	skipz
  4126  066A  2E75               	goto	u97lld
  4127  066B  0AF7               	incf	___aodiv@quotient+4,f
  4128  066C  1D03               	skipz
  4129  066D  2E75               	goto	u97lld
  4130  066E  0AF8               	incf	___aodiv@quotient+5,f
  4131  066F  1D03               	skipz
  4132  0670  2E75               	goto	u97lld
  4133  0671  0AF9               	incf	___aodiv@quotient+6,f
  4134  0672  1D03               	skipz
  4135  0673  2E75               	goto	u97lld
  4136  0674  0AFA               	incf	___aodiv@quotient+7,f
  4137  0675                     u97lld:	
  4138  0675                     l596:	
  4139  0675  0873               	movf	___aodiv@quotient,w
  4140  0676  0020               	movlb	0	; select bank0
  4141  0677  00A0               	movwf	?___aodiv
  4142  0678  0874               	movf	___aodiv@quotient+1,w
  4143  0679  00A1               	movwf	?___aodiv+1
  4144  067A  0875               	movf	___aodiv@quotient+2,w
  4145  067B  00A2               	movwf	?___aodiv+2
  4146  067C  0876               	movf	___aodiv@quotient+3,w
  4147  067D  00A3               	movwf	?___aodiv+3
  4148  067E  0877               	movf	___aodiv@quotient+4,w
  4149  067F  00A4               	movwf	?___aodiv+4
  4150  0680  0878               	movf	___aodiv@quotient+5,w
  4151  0681  00A5               	movwf	?___aodiv+5
  4152  0682  0879               	movf	___aodiv@quotient+6,w
  4153  0683  00A6               	movwf	?___aodiv+6
  4154  0684  087A               	movf	___aodiv@quotient+7,w
  4155  0685  00A7               	movwf	?___aodiv+7
  4156  0686                     l597:	
  4157  0686  0008               	return
  4158  0687                     __end_of___aodiv:	
  4159                           
  4160                           	psect	text14
  4161  0294                     __ptext14:	
  4162 ;; *************** function _TC74_Temperature *****************
  4163 ;; Defined at:
  4164 ;;		line 76 in file "TC74.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  Obj             1    wreg     PTR struct .
  4167 ;;		 -> TC74Data(5), 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  Obj             1    9[BANK0 ] PTR struct .
  4170 ;;		 -> TC74Data(5), 
  4171 ;;  Digital_Temp    1   10[BANK0 ] unsigned char 
  4172 ;;  Temperature     1    8[BANK0 ] char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      char 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4182 ;;      Params:         0       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       3       0       0       0       0       0       0
  4184 ;;      Temps:          0       1       0       0       0       0       0       0
  4185 ;;      Totals:         0       4       0       0       0       0       0       0
  4186 ;;Total ram usage:        4 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    6
  4189 ;; This function calls:
  4190 ;;		_TC74_Read
  4191 ;;		_TC74_Ready
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _TC74_Temperature
  4199  0294                     _TC74_Temperature:	
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in _TC74_Temperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4203                           ;TC74_Temperature@Obj stored from wreg
  4204  0294  0020               	movlb	0	; select bank0
  4205  0295  00A9               	movwf	TC74_Temperature@Obj
  4206  0296                     l1886:	
  4207                           
  4208                           ;TC74.c: 77:     uint8_t Digital_Temperature = 0;
  4209  0296  01AA               	clrf	TC74_Temperature@Digital_Temperature
  4210  0297                     l1888:	
  4211                           
  4212                           ;TC74.c: 79:     if(TC74_Ready(Obj)) {
  4213  0297  0829               	movf	TC74_Temperature@Obj,w
  4214  0298  3181  2152  3182   	fcall	_TC74_Ready
  4215  029B  3A00               	xorlw	0
  4216  029C  1903               	skipnz
  4217  029D  2A9F               	goto	u1341
  4218  029E  2AA0               	goto	u1340
  4219  029F                     u1341:	
  4220  029F  2AAC               	goto	l1892
  4221  02A0                     u1340:	
  4222  02A0                     l1890:	
  4223                           
  4224                           ;TC74.c: 80:         Digital_Temperature = TC74_Read(Obj,TC74_RTR,1);
  4225  02A0  01FB               	clrf	TC74_Read@TC74_Register
  4226  02A1  01FC               	clrf	TC74_Read@amount
  4227  02A2  0AFC               	incf	TC74_Read@amount,f
  4228  02A3  0020               	movlb	0	; select bank0
  4229  02A4  0829               	movf	TC74_Temperature@Obj,w
  4230  02A5  3182  2240  3182   	fcall	_TC74_Read
  4231  02A8  0020               	movlb	0	; select bank0
  4232  02A9  00A7               	movwf	??_TC74_Temperature
  4233  02AA  0827               	movf	??_TC74_Temperature,w
  4234  02AB  00AA               	movwf	TC74_Temperature@Digital_Temperature
  4235  02AC                     l1892:	
  4236                           
  4237                           ;TC74.c: 83:     if(Digital_Temperature > 127){
  4238  02AC  3080               	movlw	128
  4239  02AD  0020               	movlb	0	; select bank0
  4240  02AE  022A               	subwf	TC74_Temperature@Digital_Temperature,w
  4241  02AF  1C03               	skipc
  4242  02B0  2AB2               	goto	u1351
  4243  02B1  2AB3               	goto	u1350
  4244  02B2                     u1351:	
  4245  02B2  2ABB               	goto	l1896
  4246  02B3                     u1350:	
  4247  02B3                     l1894:	
  4248                           
  4249                           ;TC74.c: 84:         Temperature = ((~Digital_Temperature) |0x01)*(-1) ;
  4250  02B3  092A               	comf	TC74_Temperature@Digital_Temperature,w
  4251  02B4  3801               	iorlw	1
  4252  02B5  3AFF               	xorlw	255
  4253  02B6  3E01               	addlw	1
  4254  02B7  00A7               	movwf	??_TC74_Temperature
  4255  02B8  0827               	movf	??_TC74_Temperature,w
  4256  02B9  00A8               	movwf	TC74_Temperature@Temperature
  4257                           
  4258                           ;TC74.c: 85:     }else Temperature = (int8_t)Digital_Temperature;
  4259  02BA  2ABF               	goto	l273
  4260  02BB                     l1896:	
  4261  02BB  082A               	movf	TC74_Temperature@Digital_Temperature,w
  4262  02BC  00A7               	movwf	??_TC74_Temperature
  4263  02BD  0827               	movf	??_TC74_Temperature,w
  4264  02BE  00A8               	movwf	TC74_Temperature@Temperature
  4265  02BF                     l273:	
  4266                           
  4267                           ;TC74.c: 87:     return Temperature;
  4268  02BF  0828               	movf	TC74_Temperature@Temperature,w
  4269  02C0                     l274:	
  4270  02C0  0008               	return
  4271  02C1                     __end_of_TC74_Temperature:	
  4272                           
  4273                           	psect	text15
  4274  0152                     __ptext15:	
  4275 ;; *************** function _TC74_Ready *****************
  4276 ;; Defined at:
  4277 ;;		line 68 in file "TC74.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  Obj             1    wreg     PTR struct .
  4280 ;;		 -> TC74Data(5), 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  Obj             1    5[BANK0 ] PTR struct .
  4283 ;;		 -> TC74Data(5), 
  4284 ;;  Ready           1    6[BANK0 ] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      unsigned char 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4294 ;;      Params:         0       0       0       0       0       0       0       0
  4295 ;;      Locals:         0       2       0       0       0       0       0       0
  4296 ;;      Temps:          1       0       0       0       0       0       0       0
  4297 ;;      Totals:         1       2       0       0       0       0       0       0
  4298 ;;Total ram usage:        3 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    5
  4301 ;; This function calls:
  4302 ;;		_TC74_Read
  4303 ;; This function is called by:
  4304 ;;		_TC74_Temperature
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           
  4309                           ;psect for function _TC74_Ready
  4310  0152                     _TC74_Ready:	
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _TC74_Ready: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4314                           ;TC74_Ready@Obj stored from wreg
  4315  0152  0020               	movlb	0	; select bank0
  4316  0153  00A5               	movwf	TC74_Ready@Obj
  4317  0154                     l1838:	
  4318  0154                     l1840:	
  4319                           
  4320                           ;TC74.c: 70:     Ready = TC74_Read(Obj,TC74_RWCR,1);
  4321  0154  01FB               	clrf	TC74_Read@TC74_Register
  4322  0155  0AFB               	incf	TC74_Read@TC74_Register,f
  4323  0156  01FC               	clrf	TC74_Read@amount
  4324  0157  0AFC               	incf	TC74_Read@amount,f
  4325  0158  0825               	movf	TC74_Ready@Obj,w
  4326  0159  3182  2240  3181   	fcall	_TC74_Read
  4327  015C  00FD               	movwf	??_TC74_Ready
  4328  015D  087D               	movf	??_TC74_Ready,w
  4329  015E  0020               	movlb	0	; select bank0
  4330  015F  00A6               	movwf	TC74_Ready@Ready
  4331  0160                     l1842:	
  4332                           
  4333                           ;TC74.c: 72:     return ( (Ready & 0x40)?1:0 );
  4334  0160  1B26               	btfsc	TC74_Ready@Ready,6
  4335  0161  2963               	goto	u1291
  4336  0162  2965               	goto	u1290
  4337  0163                     u1291:	
  4338  0163  3001               	movlw	1
  4339  0164  2966               	goto	u1300
  4340  0165                     u1290:	
  4341  0165  3000               	movlw	0
  4342  0166                     u1300:	
  4343  0166                     l268:	
  4344  0166  0008               	return
  4345  0167                     __end_of_TC74_Ready:	
  4346                           
  4347                           	psect	text16
  4348  0240                     __ptext16:	
  4349 ;; *************** function _TC74_Read *****************
  4350 ;; Defined at:
  4351 ;;		line 50 in file "TC74.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  Obj             1    wreg     PTR struct .
  4354 ;;		 -> TC74Data(5), 
  4355 ;;  TC74_Registe    1   11[COMMON] unsigned char 
  4356 ;;  amount          1   12[COMMON] unsigned char 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  Obj             1    4[BANK0 ] PTR struct .
  4359 ;;		 -> TC74Data(5), 
  4360 ;;  buffer          2    2[BANK0 ] unsigned char [2]
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      unsigned char 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4370 ;;      Params:         2       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       3       0       0       0       0       0       0
  4372 ;;      Temps:          0       2       0       0       0       0       0       0
  4373 ;;      Totals:         2       5       0       0       0       0       0       0
  4374 ;;Total ram usage:        7 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    4
  4377 ;; This function calls:
  4378 ;;		_Wrappers_I2CMaster_Read
  4379 ;; This function is called by:
  4380 ;;		_TC74_Ready
  4381 ;;		_TC74_Temperature
  4382 ;;		_TC74_Standby
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function _TC74_Read
  4388  0240                     _TC74_Read:	
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _TC74_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4392                           ;TC74_Read@Obj stored from wreg
  4393  0240  0020               	movlb	0	; select bank0
  4394  0241  00A4               	movwf	TC74_Read@Obj
  4395  0242                     l1738:	
  4396                           
  4397                           ;TC74.c: 51:  uint8_t buffer[2];;TC74.c: 52:  buffer[0] = TC74_Register;
  4398  0242  087B               	movf	TC74_Read@TC74_Register,w
  4399  0243  00A0               	movwf	??_TC74_Read
  4400  0244  0820               	movf	??_TC74_Read,w
  4401  0245  00A2               	movwf	TC74_Read@buffer
  4402  0246                     l1740:	
  4403                           
  4404                           ;TC74.c: 53:  if(Obj->I2CRead != ((void*)0)){
  4405  0246  0824               	movf	TC74_Read@Obj,w
  4406  0247  3E02               	addlw	2
  4407  0248  0086               	movwf	6
  4408  0249  0187               	clrf	7
  4409  024A  0016               	moviw fsr1++
  4410  024B  0401               	iorwf	1,w
  4411  024C  1903               	btfsc	3,2
  4412  024D  2A4F               	goto	u1241
  4413  024E  2A50               	goto	u1240
  4414  024F                     u1241:	
  4415  024F  2A66               	goto	l1744
  4416  0250                     u1240:	
  4417  0250                     l1742:	
  4418                           
  4419                           ;TC74.c: 54:         Obj->I2CRead( Obj->Dev_Addr, buffer, amount);
  4420  0250  0824               	movf	TC74_Read@Obj,w
  4421  0251  0086               	movwf	6
  4422  0252  0187               	clrf	7
  4423  0253  3F44               	moviw [4]fsr1
  4424  0254  00F6               	movwf	Wrappers_I2CMaster_Read@Address7b
  4425  0255  3022               	movlw	(low (TC74_Read@buffer| 0))& (0+255)
  4426  0256  00A0               	movwf	??_TC74_Read
  4427  0257  0820               	movf	??_TC74_Read,w
  4428  0258  00F7               	movwf	Wrappers_I2CMaster_Read@Register
  4429  0259  087C               	movf	TC74_Read@amount,w
  4430  025A  00A1               	movwf	??_TC74_Read+1
  4431  025B  0821               	movf	??_TC74_Read+1,w
  4432  025C  00F8               	movwf	Wrappers_I2CMaster_Read@amount
  4433  025D  0824               	movf	TC74_Read@Obj,w
  4434  025E  3E02               	addlw	2
  4435  025F  0086               	movwf	6
  4436  0260  0187               	clrf	7
  4437  0261  3F41               	moviw [1]fsr1
  4438  0262  008A               	movwf	10
  4439  0263  3F40               	moviw [0]fsr1
  4440  0264  000A               	callw
  4441  0265  3182               	pagesel	$
  4442  0266                     l1744:	
  4443                           
  4444                           ;TC74.c: 56:  return buffer[0];
  4445  0266  0020               	movlb	0	; select bank0
  4446  0267  0822               	movf	TC74_Read@buffer,w
  4447  0268                     l258:	
  4448  0268  0008               	return
  4449  0269                     __end_of_TC74_Read:	
  4450                           
  4451                           	psect	text17
  4452  0269                     __ptext17:	
  4453 ;; *************** function _Wrappers_I2CMaster_Read *****************
  4454 ;; Defined at:
  4455 ;;		line 108 in file "i2c.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  Address7b       1    6[COMMON] unsigned char 
  4458 ;;  Register        1    7[COMMON] PTR void 
  4459 ;;		 -> TC74_Read@buffer(2), 
  4460 ;;  amount          1    8[COMMON] unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  DatatoSend      1   10[COMMON] PTR unsigned char 
  4463 ;;		 -> TC74_Read@buffer(2), 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4473 ;;      Params:         3       0       0       0       0       0       0       0
  4474 ;;      Locals:         1       0       0       0       0       0       0       0
  4475 ;;      Temps:          1       0       0       0       0       0       0       0
  4476 ;;      Totals:         5       0       0       0       0       0       0       0
  4477 ;;Total ram usage:        5 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    3
  4480 ;; This function calls:
  4481 ;;		_I2C_RStart
  4482 ;;		_I2C_Read
  4483 ;;		_I2C_Start
  4484 ;;		_I2C_Stop
  4485 ;;		_I2C_Write
  4486 ;; This function is called by:
  4487 ;;		_main
  4488 ;;		_TC74_Read
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _Wrappers_I2CMaster_Read
  4494  0269                     _Wrappers_I2CMaster_Read:	
  4495  0269                     l1658:	
  4496                           ;incstack = 0
  4497                           ; Regs used in _Wrappers_I2CMaster_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4498                           
  4499                           
  4500                           ;i2c.c: 111: uint8_t *DatatoSend = (uint8_t *)Register;
  4501  0269  0877               	movf	Wrappers_I2CMaster_Read@Register,w
  4502  026A  00F9               	movwf	??_Wrappers_I2CMaster_Read
  4503  026B  0879               	movf	??_Wrappers_I2CMaster_Read,w
  4504  026C  00FA               	movwf	Wrappers_I2CMaster_Read@DatatoSend
  4505  026D                     l1660:	
  4506                           
  4507                           ;i2c.c: 112:     I2C_Start ();
  4508  026D  3180  20EA  3182   	fcall	_I2C_Start
  4509  0270                     l1662:	
  4510                           
  4511                           ;i2c.c: 113:     I2C_Write (Address7b<<1);
  4512  0270  3576               	lslf	Wrappers_I2CMaster_Read@Address7b,w
  4513  0271  3181  2109  3182   	fcall	_I2C_Write
  4514  0274                     l1664:	
  4515                           
  4516                           ;i2c.c: 115:      I2C_Write (*DatatoSend);
  4517  0274  087A               	movf	Wrappers_I2CMaster_Read@DatatoSend,w
  4518  0275  0086               	movwf	6
  4519  0276  0187               	clrf	7
  4520  0277  0801               	movf	1,w
  4521  0278  3181  2109  3182   	fcall	_I2C_Write
  4522  027B                     l1666:	
  4523                           
  4524                           ;i2c.c: 117:      I2C_RStart();
  4525  027B  3180  20DE  3182   	fcall	_I2C_RStart
  4526  027E                     l1668:	
  4527                           
  4528                           ;i2c.c: 118:      I2C_Write (Address7b<<1|0x01);
  4529  027E  1403               	setc
  4530  027F  0D76               	rlf	Wrappers_I2CMaster_Read@Address7b,w
  4531  0280  3181  2109  3182   	fcall	_I2C_Write
  4532  0283                     l1670:	
  4533                           
  4534                           ;i2c.c: 121:     *DatatoSend = I2C_Read (1);
  4535  0283  3001               	movlw	1
  4536  0284  00F0               	movwf	I2C_Read@ack
  4537  0285  3000               	movlw	0
  4538  0286  00F1               	movwf	I2C_Read@ack+1
  4539  0287  3181  21B3  3182   	fcall	_I2C_Read
  4540  028A  00F9               	movwf	??_Wrappers_I2CMaster_Read
  4541  028B  087A               	movf	Wrappers_I2CMaster_Read@DatatoSend,w
  4542  028C  0086               	movwf	6
  4543  028D  0187               	clrf	7
  4544  028E  0879               	movf	??_Wrappers_I2CMaster_Read,w
  4545  028F  0081               	movwf	1
  4546  0290                     l1672:	
  4547                           
  4548                           ;i2c.c: 122:     I2C_Stop ();
  4549  0290  3180  20F0  3182   	fcall	_I2C_Stop
  4550  0293                     l246:	
  4551  0293  0008               	return
  4552  0294                     __end_of_Wrappers_I2CMaster_Read:	
  4553                           
  4554                           	psect	text18
  4555  0109                     __ptext18:	
  4556 ;; *************** function _I2C_Write *****************
  4557 ;; Defined at:
  4558 ;;		line 77 in file "i2c.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  data            1    wreg     unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  data            1    0[COMMON] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2  236[None  ] int 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0, pclath, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4572 ;;      Params:         0       0       0       0       0       0       0       0
  4573 ;;      Locals:         1       0       0       0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0
  4575 ;;      Totals:         1       0       0       0       0       0       0       0
  4576 ;;Total ram usage:        1 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    1
  4579 ;; This function calls:
  4580 ;;		_I2C_Wait1
  4581 ;; This function is called by:
  4582 ;;		_Wrappers_I2CMaster_Write
  4583 ;;		_Wrappers_I2CMaster_Read
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function _I2C_Write
  4589  0109                     _I2C_Write:	
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  4593                           ;I2C_Write@data stored from wreg
  4594  0109  00F0               	movwf	I2C_Write@data
  4595  010A                     l1542:	
  4596                           
  4597                           ;i2c.c: 78:     I2C_Wait1();
  4598  010A  3181  2127  3181   	fcall	_I2C_Wait1
  4599  010D                     l1544:	
  4600                           
  4601                           ;i2c.c: 79:     SSPBUF = data;
  4602  010D  0870               	movf	I2C_Write@data,w
  4603  010E  0024               	movlb	4	; select bank4
  4604  010F  0091               	movwf	17	;volatile
  4605  0110                     l1546:	
  4606                           
  4607                           ;i2c.c: 82:     return SSPCON2bits.ACKSTAT;;	Return value of _I2C_Write is never used
  4608  0110  0816               	movf	22,w	;volatile
  4609  0111                     l237:	
  4610  0111  0008               	return
  4611  0112                     __end_of_I2C_Write:	
  4612                           
  4613                           	psect	text19
  4614  00F0                     __ptext19:	
  4615 ;; *************** function _I2C_Stop *****************
  4616 ;; Defined at:
  4617 ;;		line 63 in file "i2c.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, pclath, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4631 ;;      Params:         0       0       0       0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    1
  4638 ;; This function calls:
  4639 ;;		_I2C_Wait1
  4640 ;; This function is called by:
  4641 ;;		_Wrappers_I2CMaster_Write
  4642 ;;		_Wrappers_I2CMaster_Read
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _I2C_Stop
  4648  00F0                     _I2C_Stop:	
  4649  00F0                     l1538:	
  4650                           ;incstack = 0
  4651                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  4652                           
  4653                           
  4654                           ;i2c.c: 64:     I2C_Wait1();
  4655  00F0  3181  2127  3180   	fcall	_I2C_Wait1
  4656  00F3                     l1540:	
  4657                           
  4658                           ;i2c.c: 65:     SSPCON2bits.PEN = 1;
  4659  00F3  0024               	movlb	4	; select bank4
  4660  00F4  1516               	bsf	22,2	;volatile
  4661  00F5                     l231:	
  4662  00F5  0008               	return
  4663  00F6                     __end_of_I2C_Stop:	
  4664                           
  4665                           	psect	text20
  4666  00EA                     __ptext20:	
  4667 ;; *************** function _I2C_Start *****************
  4668 ;; Defined at:
  4669 ;;		line 52 in file "i2c.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, pclath, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4683 ;;      Params:         0       0       0       0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0
  4686 ;;      Totals:         0       0       0       0       0       0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    1
  4690 ;; This function calls:
  4691 ;;		_I2C_Wait1
  4692 ;; This function is called by:
  4693 ;;		_Wrappers_I2CMaster_Write
  4694 ;;		_Wrappers_I2CMaster_Read
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _I2C_Start
  4700  00EA                     _I2C_Start:	
  4701  00EA                     l1530:	
  4702                           ;incstack = 0
  4703                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  4704                           
  4705                           
  4706                           ;i2c.c: 53:     I2C_Wait1();
  4707  00EA  3181  2127  3180   	fcall	_I2C_Wait1
  4708  00ED                     l1532:	
  4709                           
  4710                           ;i2c.c: 54:     SSPCON2bits.SEN = 1;
  4711  00ED  0024               	movlb	4	; select bank4
  4712  00EE  1416               	bsf	22,0	;volatile
  4713  00EF                     l225:	
  4714  00EF  0008               	return
  4715  00F0                     __end_of_I2C_Start:	
  4716                           
  4717                           	psect	text21
  4718  01B3                     __ptext21:	
  4719 ;; *************** function _I2C_Read *****************
  4720 ;; Defined at:
  4721 ;;		line 85 in file "i2c.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  ack             2    0[COMMON] int 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  tempbuf         2    4[COMMON] int 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      unsigned char 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0, pclath, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4735 ;;      Params:         2       0       0       0       0       0       0       0
  4736 ;;      Locals:         2       0       0       0       0       0       0       0
  4737 ;;      Temps:          2       0       0       0       0       0       0       0
  4738 ;;      Totals:         6       0       0       0       0       0       0       0
  4739 ;;Total ram usage:        6 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    2
  4742 ;; This function calls:
  4743 ;;		_I2C_Send_ACK
  4744 ;;		_I2C_Wait1
  4745 ;; This function is called by:
  4746 ;;		_Wrappers_I2CMaster_Read
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _I2C_Read
  4752  01B3                     _I2C_Read:	
  4753  01B3                     l1550:	
  4754                           ;incstack = 0
  4755                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  4756                           
  4757                           
  4758                           ;i2c.c: 86:     int tempbuf;;i2c.c: 87:     I2C_Wait1();
  4759  01B3  3181  2127  3181   	fcall	_I2C_Wait1
  4760  01B6                     l1552:	
  4761                           
  4762                           ;i2c.c: 88:     SSPCON2bits.RCEN = 1;
  4763  01B6  0024               	movlb	4	; select bank4
  4764  01B7  1596               	bsf	22,3	;volatile
  4765                           
  4766                           ;i2c.c: 89:     I2C_Wait1();
  4767  01B8  3181  2127  3181   	fcall	_I2C_Wait1
  4768  01BB                     l1554:	
  4769                           
  4770                           ;i2c.c: 90:     tempbuf =SSPBUF;
  4771  01BB  0024               	movlb	4	; select bank4
  4772  01BC  0811               	movf	17,w	;volatile
  4773  01BD  00F2               	movwf	??_I2C_Read
  4774  01BE  01F3               	clrf	??_I2C_Read+1
  4775  01BF  0872               	movf	??_I2C_Read,w
  4776  01C0  00F4               	movwf	I2C_Read@tempbuf
  4777  01C1  0873               	movf	??_I2C_Read+1,w
  4778  01C2  00F5               	movwf	I2C_Read@tempbuf+1
  4779  01C3                     l1556:	
  4780                           
  4781                           ;i2c.c: 91:     I2C_Wait1();
  4782  01C3  3181  2127  3181   	fcall	_I2C_Wait1
  4783  01C6                     l1558:	
  4784                           
  4785                           ;i2c.c: 92:     ACKDT =ack;
  4786  01C6  1870               	btfsc	I2C_Read@ack,0
  4787  01C7  29C9               	goto	u801
  4788  01C8  29CC               	goto	u800
  4789  01C9                     u801:	
  4790  01C9  0024               	movlb	4	; select bank4
  4791  01CA  1696               	bsf	22,5	;volatile
  4792  01CB  29CE               	goto	u814
  4793  01CC                     u800:	
  4794  01CC  0024               	movlb	4	; select bank4
  4795  01CD  1296               	bcf	22,5	;volatile
  4796  01CE                     u814:	
  4797  01CE                     l1560:	
  4798                           
  4799                           ;i2c.c: 93:     I2C_Send_ACK();
  4800  01CE  3180  20E4  3181   	fcall	_I2C_Send_ACK
  4801  01D1                     l1562:	
  4802                           
  4803                           ;i2c.c: 94:     return tempbuf;
  4804  01D1  0874               	movf	I2C_Read@tempbuf,w
  4805  01D2                     l240:	
  4806  01D2  0008               	return
  4807  01D3                     __end_of_I2C_Read:	
  4808                           
  4809                           	psect	text22
  4810  00E4                     __ptext22:	
  4811 ;; *************** function _I2C_Send_ACK *****************
  4812 ;; Defined at:
  4813 ;;		line 69 in file "i2c.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4827 ;;      Params:         0       0       0       0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    1
  4834 ;; This function calls:
  4835 ;;		_I2C_Wait1
  4836 ;; This function is called by:
  4837 ;;		_I2C_Read
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _I2C_Send_ACK
  4843  00E4                     _I2C_Send_ACK:	
  4844  00E4                     l1508:	
  4845                           ;incstack = 0
  4846                           ; Regs used in _I2C_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  4847                           
  4848                           
  4849                           ;i2c.c: 70:     I2C_Wait1();
  4850  00E4  3181  2127  3180   	fcall	_I2C_Wait1
  4851  00E7                     l1510:	
  4852                           
  4853                           ;i2c.c: 71:     SSPCON2bits.ACKEN = 1 ;
  4854  00E7  0024               	movlb	4	; select bank4
  4855  00E8  1616               	bsf	22,4	;volatile
  4856  00E9                     l234:	
  4857  00E9  0008               	return
  4858  00EA                     __end_of_I2C_Send_ACK:	
  4859                           
  4860                           	psect	text23
  4861  00DE                     __ptext23:	
  4862 ;; *************** function _I2C_RStart *****************
  4863 ;; Defined at:
  4864 ;;		line 57 in file "i2c.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0, pclath, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4878 ;;      Params:         0       0       0       0       0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0
  4881 ;;      Totals:         0       0       0       0       0       0       0       0
  4882 ;;Total ram usage:        0 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    1
  4885 ;; This function calls:
  4886 ;;		_I2C_Wait1
  4887 ;; This function is called by:
  4888 ;;		_Wrappers_I2CMaster_Read
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _I2C_RStart
  4894  00DE                     _I2C_RStart:	
  4895  00DE                     l1534:	
  4896                           ;incstack = 0
  4897                           ; Regs used in _I2C_RStart: [wreg+status,2+status,0+pclath+cstack]
  4898                           
  4899                           
  4900                           ;i2c.c: 58:     I2C_Wait1();
  4901  00DE  3181  2127  3180   	fcall	_I2C_Wait1
  4902  00E1                     l1536:	
  4903                           
  4904                           ;i2c.c: 59:     SSPCON2bits.RSEN = 1;
  4905  00E1  0024               	movlb	4	; select bank4
  4906  00E2  1496               	bsf	22,1	;volatile
  4907  00E3                     l228:	
  4908  00E3  0008               	return
  4909  00E4                     __end_of_I2C_RStart:	
  4910                           
  4911                           	psect	text24
  4912  0127                     __ptext24:	
  4913 ;; *************** function _I2C_Wait1 *****************
  4914 ;; Defined at:
  4915 ;;		line 42 in file "i2c.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;		None
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4929 ;;      Params:         0       0       0       0       0       0       0       0
  4930 ;;      Locals:         0       0       0       0       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0       0       0       0
  4932 ;;      Totals:         0       0       0       0       0       0       0       0
  4933 ;;Total ram usage:        0 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_I2C_Start
  4939 ;;		_I2C_RStart
  4940 ;;		_I2C_Stop
  4941 ;;		_I2C_Send_ACK
  4942 ;;		_I2C_Write
  4943 ;;		_I2C_Read
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           
  4948                           ;psect for function _I2C_Wait1
  4949  0127                     _I2C_Wait1:	
  4950  0127                     l1490:	
  4951                           ;incstack = 0
  4952                           ; Regs used in _I2C_Wait1: [wreg+status,2]
  4953                           
  4954  0127                     l213:	
  4955                           ;i2c.c: 44:     while( (SSPSTAT & 0x04) || (SSPCON2 & 0b00011111)) ;
  4956                           
  4957  0127  0024               	movlb	4	; select bank4
  4958  0128  1914               	btfsc	20,2	;volatile
  4959  0129  292B               	goto	u721
  4960  012A  292C               	goto	u720
  4961  012B                     u721:	
  4962  012B  2927               	goto	l213
  4963  012C                     u720:	
  4964  012C                     l1492:	
  4965  012C  0816               	movf	22,w	;volatile
  4966  012D  391F               	andlw	31
  4967  012E  1D03               	btfss	3,2
  4968  012F  2931               	goto	u731
  4969  0130  2932               	goto	u730
  4970  0131                     u731:	
  4971  0131  2927               	goto	l213
  4972  0132                     u730:	
  4973  0132                     l216:	
  4974  0132  0008               	return
  4975  0133                     __end_of_I2C_Wait1:	
  4976                           
  4977                           	psect	text25
  4978  0167                     __ptext25:	
  4979 ;; *************** function _TC74_Initialize *****************
  4980 ;; Defined at:
  4981 ;;		line 28 in file "TC74.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  Obj             1    wreg     PTR struct .
  4984 ;;		 -> TC74Data(5), 
  4985 ;;  AddrSlave       1    0[COMMON] enum E34
  4986 ;;  write_fcn       2    1[COMMON] PTR FTN(unsigned char ,P
  4987 ;;		 -> Wrappers_I2CMaster_Write(1), 
  4988 ;;  read_fcn        2    3[COMMON] PTR FTN(unsigned char ,P
  4989 ;;		 -> Wrappers_I2CMaster_Read(1), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  Obj             1    6[COMMON] PTR struct .
  4992 ;;		 -> TC74Data(5), 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5002 ;;      Params:         5       0       0       0       0       0       0       0
  5003 ;;      Locals:         1       0       0       0       0       0       0       0
  5004 ;;      Temps:          1       0       0       0       0       0       0       0
  5005 ;;      Totals:         7       0       0       0       0       0       0       0
  5006 ;;Total ram usage:        7 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _TC74_Initialize
  5017  0167                     _TC74_Initialize:	
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _TC74_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
  5021                           ;TC74_Initialize@Obj stored from wreg
  5022  0167  00F6               	movwf	TC74_Initialize@Obj
  5023  0168                     l1880:	
  5024                           
  5025                           ;TC74.c: 30:     Obj->I2CWrite = write_fcn;
  5026  0168  0876               	movf	TC74_Initialize@Obj,w
  5027  0169  0086               	movwf	6
  5028  016A  0187               	clrf	7
  5029  016B  0871               	movf	TC74_Initialize@write_fcn,w
  5030  016C  3FC0               	movwi [0]fsr1
  5031  016D  0872               	movf	TC74_Initialize@write_fcn+1,w
  5032  016E  3FC1               	movwi [1]fsr1
  5033  016F                     l1882:	
  5034                           
  5035                           ;TC74.c: 31:     Obj->I2CRead = read_fcn;
  5036  016F  0876               	movf	TC74_Initialize@Obj,w
  5037  0170  3E02               	addlw	2
  5038  0171  0086               	movwf	6
  5039  0172  0187               	clrf	7
  5040  0173  0873               	movf	TC74_Initialize@read_fcn,w
  5041  0174  3FC0               	movwi [0]fsr1
  5042  0175  0874               	movf	TC74_Initialize@read_fcn+1,w
  5043  0176  3FC1               	movwi [1]fsr1
  5044  0177                     l1884:	
  5045                           
  5046                           ;TC74.c: 32:     Obj->Dev_Addr = AddrSlave;
  5047  0177  0870               	movf	TC74_Initialize@AddrSlave,w
  5048  0178  00F5               	movwf	??_TC74_Initialize
  5049  0179  0876               	movf	TC74_Initialize@Obj,w
  5050  017A  3E04               	addlw	4
  5051  017B  0086               	movwf	6
  5052  017C  0187               	clrf	7
  5053  017D  0875               	movf	??_TC74_Initialize,w
  5054  017E  0081               	movwf	1
  5055  017F                     l249:	
  5056  017F  0008               	return
  5057  0180                     __end_of_TC74_Initialize:	
  5058                           
  5059                           	psect	text26
  5060  0133                     __ptext26:	
  5061 ;; *************** function _SYSTEM_Initialize *****************
  5062 ;; Defined at:
  5063 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0, pclath, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5077 ;;      Params:         0       0       0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    2
  5084 ;; This function calls:
  5085 ;;		_EUSART_Initialize
  5086 ;;		_OSCILLATOR_Initialize
  5087 ;;		_PIN_MANAGER_Initialize
  5088 ;;		_WDT_Initialize
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _SYSTEM_Initialize
  5096  0133                     _SYSTEM_Initialize:	
  5097  0133                     l1870:	
  5098                           ;incstack = 0
  5099                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5100                           
  5101                           
  5102                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5103  0133  3181  21D3  3181   	fcall	_PIN_MANAGER_Initialize
  5104                           
  5105                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5106  0136  3181  2102  3181   	fcall	_OSCILLATOR_Initialize
  5107                           
  5108                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5109  0139  3180  20C8  3181   	fcall	_WDT_Initialize
  5110                           
  5111                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  5112  013C  3181  21F5  3181   	fcall	_EUSART_Initialize
  5113  013F                     l113:	
  5114  013F  0008               	return
  5115  0140                     __end_of_SYSTEM_Initialize:	
  5116                           
  5117                           	psect	text27
  5118  00C8                     __ptext27:	
  5119 ;; *************** function _WDT_Initialize *****************
  5120 ;; Defined at:
  5121 ;;		line 69 in file "mcc_generated_files/mcc.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;		None
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5135 ;;      Params:         0       0       0       0       0       0       0       0
  5136 ;;      Locals:         0       0       0       0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0
  5138 ;;      Totals:         0       0       0       0       0       0       0       0
  5139 ;;Total ram usage:        0 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_SYSTEM_Initialize
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _WDT_Initialize
  5150  00C8                     _WDT_Initialize:	
  5151  00C8                     l1836:	
  5152                           ;incstack = 0
  5153                           ; Regs used in _WDT_Initialize: [wreg]
  5154                           
  5155                           
  5156                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  5157  00C8  3016               	movlw	22
  5158  00C9  0021               	movlb	1	; select bank1
  5159  00CA  0097               	movwf	23	;volatile
  5160  00CB                     l119:	
  5161  00CB  0008               	return
  5162  00CC                     __end_of_WDT_Initialize:	
  5163                           
  5164                           	psect	text28
  5165  01D3                     __ptext28:	
  5166 ;; *************** function _PIN_MANAGER_Initialize *****************
  5167 ;; Defined at:
  5168 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5182 ;;      Params:         0       0       0       0       0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0       0
  5185 ;;      Totals:         0       0       0       0       0       0       0       0
  5186 ;;Total ram usage:        0 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_SYSTEM_Initialize
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _PIN_MANAGER_Initialize
  5197  01D3                     _PIN_MANAGER_Initialize:	
  5198  01D3                     l1802:	
  5199                           ;incstack = 0
  5200                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5201                           
  5202                           
  5203                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5204  01D3  0022               	movlb	2	; select bank2
  5205  01D4  0190               	clrf	16	;volatile
  5206                           
  5207                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5208  01D5  018F               	clrf	15	;volatile
  5209                           
  5210                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5211  01D6  018C               	clrf	12	;volatile
  5212                           
  5213                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5214  01D7  018D               	clrf	13	;volatile
  5215                           
  5216                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5217  01D8  018E               	clrf	14	;volatile
  5218  01D9                     l1804:	
  5219                           
  5220                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  5221  01D9  300F               	movlw	15
  5222  01DA  0021               	movlb	1	; select bank1
  5223  01DB  0090               	movwf	16	;volatile
  5224  01DC                     l1806:	
  5225                           
  5226                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5227  01DC  30FF               	movlw	255
  5228  01DD  008C               	movwf	12	;volatile
  5229  01DE                     l1808:	
  5230                           
  5231                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  5232  01DE  30FF               	movlw	255
  5233  01DF  008D               	movwf	13	;volatile
  5234  01E0                     l1810:	
  5235                           
  5236                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  5237  01E0  30BF               	movlw	191
  5238  01E1  008E               	movwf	14	;volatile
  5239  01E2                     l1812:	
  5240                           
  5241                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  5242  01E2  30FF               	movlw	255
  5243  01E3  008F               	movwf	15	;volatile
  5244  01E4                     l1814:	
  5245                           
  5246                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5247  01E4  30FF               	movlw	255
  5248  01E5  0023               	movlb	3	; select bank3
  5249  01E6  008F               	movwf	15	;volatile
  5250  01E7                     l1816:	
  5251                           
  5252                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
  5253  01E7  303F               	movlw	63
  5254  01E8  008D               	movwf	13	;volatile
  5255  01E9                     l1818:	
  5256                           
  5257                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  5258  01E9  3007               	movlw	7
  5259  01EA  0090               	movwf	16	;volatile
  5260  01EB                     l1820:	
  5261                           
  5262                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3F;
  5263  01EB  303F               	movlw	63
  5264  01EC  008C               	movwf	12	;volatile
  5265  01ED                     l1822:	
  5266                           
  5267                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  5268  01ED  0024               	movlb	4	; select bank4
  5269  01EE  0190               	clrf	16	;volatile
  5270  01EF                     l1824:	
  5271                           
  5272                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  5273  01EF  018D               	clrf	13	;volatile
  5274  01F0                     l1826:	
  5275                           
  5276                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  5277  01F0  0021               	movlb	1	; select bank1
  5278  01F1  1795               	bsf	21,7	;volatile
  5279  01F2                     l1828:	
  5280                           
  5281                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  5282  01F2  0022               	movlb	2	; select bank2
  5283  01F3  019D               	clrf	29	;volatile
  5284  01F4                     l158:	
  5285  01F4  0008               	return
  5286  01F5                     __end_of_PIN_MANAGER_Initialize:	
  5287                           
  5288                           	psect	text29
  5289  0102                     __ptext29:	
  5290 ;; *************** function _OSCILLATOR_Initialize *****************
  5291 ;; Defined at:
  5292 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5306 ;;      Params:         0       0       0       0       0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0
  5309 ;;      Totals:         0       0       0       0       0       0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_SYSTEM_Initialize
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           
  5320                           ;psect for function _OSCILLATOR_Initialize
  5321  0102                     _OSCILLATOR_Initialize:	
  5322  0102                     l1830:	
  5323                           ;incstack = 0
  5324                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5325                           
  5326                           
  5327                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x7A;
  5328  0102  307A               	movlw	122
  5329  0103  0021               	movlb	1	; select bank1
  5330  0104  0099               	movwf	25	;volatile
  5331  0105                     l1832:	
  5332                           
  5333                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  5334  0105  0198               	clrf	24	;volatile
  5335  0106                     l1834:	
  5336                           
  5337                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  5338  0106  0022               	movlb	2	; select bank2
  5339  0107  0196               	clrf	22	;volatile
  5340  0108                     l116:	
  5341  0108  0008               	return
  5342  0109                     __end_of_OSCILLATOR_Initialize:	
  5343                           
  5344                           	psect	text30
  5345  01F5                     __ptext30:	
  5346 ;; *************** function _EUSART_Initialize *****************
  5347 ;; Defined at:
  5348 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5362 ;;      Params:         0       0       0       0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0
  5365 ;;      Totals:         0       0       0       0       0       0       0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    1
  5369 ;; This function calls:
  5370 ;;		_EUSART_SetErrorHandler
  5371 ;;		_EUSART_SetFramingErrorHandler
  5372 ;;		_EUSART_SetOverrunErrorHandler
  5373 ;; This function is called by:
  5374 ;;		_SYSTEM_Initialize
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           
  5379                           ;psect for function _EUSART_Initialize
  5380  01F5                     _EUSART_Initialize:	
  5381  01F5                     l1792:	
  5382                           ;incstack = 0
  5383                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5384                           
  5385                           
  5386                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5387  01F5  3008               	movlw	8
  5388  01F6  0023               	movlb	3	; select bank3
  5389  01F7  009F               	movwf	31	;volatile
  5390                           
  5391                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  5392  01F8  3080               	movlw	128
  5393  01F9  009D               	movwf	29	;volatile
  5394                           
  5395                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5396  01FA  3024               	movlw	36
  5397  01FB  009E               	movwf	30	;volatile
  5398                           
  5399                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xA0;
  5400  01FC  30A0               	movlw	160
  5401  01FD  009B               	movwf	27	;volatile
  5402                           
  5403                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  5404  01FE  3001               	movlw	1
  5405  01FF  009C               	movwf	28	;volatile
  5406  0200                     l1794:	
  5407                           
  5408                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5409  0200  3000               	movlw	0
  5410  0201  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5411  0202  3000               	movlw	0
  5412  0203  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5413  0204  3180  20D2  3181   	fcall	_EUSART_SetFramingErrorHandler
  5414  0207                     l1796:	
  5415                           
  5416                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5417  0207  3000               	movlw	0
  5418  0208  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5419  0209  3000               	movlw	0
  5420  020A  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5421  020B  3180  20D8  3181   	fcall	_EUSART_SetOverrunErrorHandler
  5422  020E                     l1798:	
  5423                           
  5424                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5425  020E  3000               	movlw	0
  5426  020F  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5427  0210  3000               	movlw	0
  5428  0211  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5429  0212  3180  20CC  3181   	fcall	_EUSART_SetErrorHandler
  5430  0215                     l1800:	
  5431                           
  5432                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5433  0215  0021               	movlb	1	; select bank1
  5434  0216  01A8               	clrf	_eusartRxLastError^(0+128)	;volatile
  5435  0217                     l43:	
  5436  0217  0008               	return
  5437  0218                     __end_of_EUSART_Initialize:	
  5438                           
  5439                           	psect	text31
  5440  00D8                     __ptext31:	
  5441 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5442 ;; Defined at:
  5443 ;;		line 170 in file "mcc_generated_files/eusart.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5446 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5458 ;;      Params:         2       0       0       0       0       0       0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0
  5461 ;;      Totals:         2       0       0       0       0       0       0       0
  5462 ;;Total ram usage:        2 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_EUSART_Initialize
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _EUSART_SetOverrunErrorHandler
  5473  00D8                     _EUSART_SetOverrunErrorHandler:	
  5474  00D8                     l1734:	
  5475                           ;incstack = 0
  5476                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5477                           
  5478                           
  5479                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  5480  00D8  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5481  00D9  0021               	movlb	1	; select bank1
  5482  00DA  00D1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5483  00DB  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5484  00DC  00D0               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5485  00DD                     l91:	
  5486  00DD  0008               	return
  5487  00DE                     __end_of_EUSART_SetOverrunErrorHandler:	
  5488                           
  5489                           	psect	text32
  5490  00D2                     __ptext32:	
  5491 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5492 ;; Defined at:
  5493 ;;		line 166 in file "mcc_generated_files/eusart.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5496 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		wreg
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5508 ;;      Params:         2       0       0       0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0
  5511 ;;      Totals:         2       0       0       0       0       0       0       0
  5512 ;;Total ram usage:        2 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_EUSART_Initialize
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           
  5522                           ;psect for function _EUSART_SetFramingErrorHandler
  5523  00D2                     _EUSART_SetFramingErrorHandler:	
  5524  00D2                     l1732:	
  5525                           ;incstack = 0
  5526                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5527                           
  5528                           
  5529                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  5530  00D2  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5531  00D3  0021               	movlb	1	; select bank1
  5532  00D4  00D3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5533  00D5  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5534  00D6  00D2               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5535  00D7                     l88:	
  5536  00D7  0008               	return
  5537  00D8                     __end_of_EUSART_SetFramingErrorHandler:	
  5538                           
  5539                           	psect	text33
  5540  00CC                     __ptext33:	
  5541 ;; *************** function _EUSART_SetErrorHandler *****************
  5542 ;; Defined at:
  5543 ;;		line 174 in file "mcc_generated_files/eusart.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5546 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5558 ;;      Params:         2       0       0       0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0
  5561 ;;      Totals:         2       0       0       0       0       0       0       0
  5562 ;;Total ram usage:        2 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_EUSART_Initialize
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           
  5572                           ;psect for function _EUSART_SetErrorHandler
  5573  00CC                     _EUSART_SetErrorHandler:	
  5574  00CC                     l1736:	
  5575                           ;incstack = 0
  5576                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5577                           
  5578                           
  5579                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  5580  00CC  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5581  00CD  0021               	movlb	1	; select bank1
  5582  00CE  00CF               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5583  00CF  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5584  00D0  00CE               	movwf	_EUSART_ErrorHandler^(0+128)
  5585  00D1                     l94:	
  5586  00D1  0008               	return
  5587  00D2                     __end_of_EUSART_SetErrorHandler:	
  5588                           
  5589                           	psect	text34
  5590  011C                     __ptext34:	
  5591 ;; *************** function _I2C_Initialize *****************
  5592 ;; Defined at:
  5593 ;;		line 29 in file "i2c.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5607 ;;      Params:         0       0       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_main
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           
  5621                           ;psect for function _I2C_Initialize
  5622  011C                     _I2C_Initialize:	
  5623  011C                     l1872:	
  5624                           ;incstack = 0
  5625                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  5626                           
  5627                           
  5628                           ;i2c.c: 31:     TRISC4 = 1;
  5629  011C  0021               	movlb	1	; select bank1
  5630  011D  160E               	bsf	14,4	;volatile
  5631                           
  5632                           ;i2c.c: 32:     TRISC3 = 1;
  5633  011E  158E               	bsf	14,3	;volatile
  5634  011F                     l1874:	
  5635                           
  5636                           ;i2c.c: 34:     SSPCON1 = 0B00101000 ;
  5637  011F  3028               	movlw	40
  5638  0120  0024               	movlb	4	; select bank4
  5639  0121  0095               	movwf	21	;volatile
  5640                           
  5641                           ;i2c.c: 35:     SSPADD = (unsigned char)((16000000/4000/100)-1);
  5642  0122  3027               	movlw	39
  5643  0123  0092               	movwf	18	;volatile
  5644  0124                     l1876:	
  5645                           
  5646                           ;i2c.c: 37:     SSPCON2 = 0x00;
  5647  0124  0196               	clrf	22	;volatile
  5648  0125                     l1878:	
  5649                           
  5650                           ;i2c.c: 38:     SSPSTAT =0x00;
  5651  0125  0194               	clrf	20	;volatile
  5652  0126                     l210:	
  5653  0126  0008               	return
  5654  0127                     __end_of_I2C_Initialize:	
  5655  007E                     btemp	set	126	;btemp
  5656  007E                     wtemp0	set	126


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         46
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      0      52
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    TC74_Standby@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Standby@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Temperature@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Temperature@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Ready@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Ready@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 0
		 -> Wrappers_I2CMaster_Write(), 

    write_fcn$1	PTR void  size(1) Largest target is 2
		 -> TC74_Write@buffer(COMMON[2]), 

    read_fcn$1	PTR void  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    S287$1$1	PTR void  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    S287$0$1	PTR void  size(1) Largest target is 2
		 -> TC74_Write@buffer(COMMON[2]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1059_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    TC74_Temperature@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    TC74_Ready@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    TC74_Read@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Read@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Read@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    TC74_Write@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Write@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Initialize@read_fcn	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Initialize@Obj.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74_Initialize@Obj.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Initialize@write_fcn	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74_Initialize@Obj	PTR struct . size(1) Largest target is 5
		 -> TC74Data(BANK1[5]), 

    Wrappers_I2CMaster_Read@Register	PTR void  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    Wrappers_I2CMaster_Read@DatatoSend	PTR unsigned char  size(1) Largest target is 2
		 -> TC74_Read@buffer(BANK0[2]), 

    S287$I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    TC74Data.I2CRead	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Read(), 

    S287$I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    TC74Data.I2CWrite	PTR FTN(unsigned char ,PTR void ,unsigned char ,)void  size(2) Largest target is 1
		 -> Wrappers_I2CMaster_Write(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _TC74_Temperature->_TC74_Ready
    _TC74_Ready->_TC74_Read
    _TC74_Read->_Wrappers_I2CMaster_Read
    _Wrappers_I2CMaster_Read->_I2C_Read
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _TC74_Temperature->_TC74_Ready
    _TC74_Ready->_TC74_Read

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9124
                                             78 BANK0      2     2      0
                     _I2C_Initialize
                  _SYSTEM_Initialize
                    _TC74_Initialize
                   _TC74_Temperature
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5936
                                             70 BANK0      8     4      4
                   _TC74_Temperature (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5806
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5478
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4133
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2510
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     812
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _TC74_Temperature                                     4     4      0    2501
                                              7 BANK0      4     4      0
                          _TC74_Read
                         _TC74_Ready
 ---------------------------------------------------------------------------------
 (2) _TC74_Ready                                           3     3      0    1205
                                             13 COMMON     1     1      0
                                              5 BANK0      2     2      0
                          _TC74_Read
 ---------------------------------------------------------------------------------
 (3) _TC74_Read                                            7     5      2    1126
                                             11 COMMON     2     0      2
                                              0 BANK0      5     5      0
            _Wrappers_I2CMaster_Read *
 ---------------------------------------------------------------------------------
 (4) _Wrappers_I2CMaster_Read                              5     2      3     413
                                              6 COMMON     5     2      3
                         _I2C_RStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_Read                                             6     4      2     121
                                              0 COMMON     6     4      2
                       _I2C_Send_ACK
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (6) _I2C_Send_ACK                                         0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (5) _I2C_RStart                                           0     0      0       0
                          _I2C_Wait1
 ---------------------------------------------------------------------------------
 (6) _I2C_Wait1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TC74_Initialize                                      7     2      5     393
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _TC74_Initialize
   _TC74_Temperature
     _TC74_Read
       _Wrappers_I2CMaster_Read *
         _I2C_RStart
           _I2C_Wait1
         _I2C_Read
           _I2C_Send_ACK
             _I2C_Wait1
           _I2C_Wait1
         _I2C_Start
           _I2C_Wait1
         _I2C_Stop
           _I2C_Wait1
         _I2C_Write
           _I2C_Wait1
     _TC74_Ready
       _TC74_Read
         _Wrappers_I2CMaster_Read *
           _I2C_RStart
             _I2C_Wait1
           _I2C_Read
             _I2C_Send_ACK
               _I2C_Wait1
             _I2C_Wait1
           _I2C_Start
             _I2C_Wait1
           _I2C_Stop
             _I2C_Wait1
           _I2C_Write
             _I2C_Wait1
   _printf
     _TC74_Temperature (ARG)
       _TC74_Read
         _Wrappers_I2CMaster_Read *
           _I2C_RStart
             _I2C_Wait1
           _I2C_Read
             _I2C_Send_ACK
               _I2C_Wait1
             _I2C_Wait1
           _I2C_Start
             _I2C_Wait1
           _I2C_Stop
             _I2C_Wait1
           _I2C_Write
             _I2C_Wait1
       _TC74_Ready
         _TC74_Read
           _Wrappers_I2CMaster_Read *
             _I2C_RStart
               _I2C_Wait1
             _I2C_Read
               _I2C_Send_ACK
                 _I2C_Wait1
               _I2C_Wait1
             _I2C_Start
               _I2C_Wait1
             _I2C_Stop
               _I2C_Wait1
             _I2C_Write
               _I2C_Wait1
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      92       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      34       8       65.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      92      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 18 18:53:29 2020

                                  ?_TC74_Ready 0070                             __size_of_I2C_Wait1 000C  
                     TC74_Initialize@AddrSlave 0070                             __size_of_I2C_Start 0006  
                                  __CFG_CP$OFF 0000                             __size_of_I2C_Write 0009  
                                           l43 0217                                             l70 011B  
                                           l91 00DD                                             l67 0113  
                                           l76 00FB                                             l94 00D1  
                                           l88 00D7                            __size_of_I2C_RStart 0006  
                                  __CFG_LVP$ON 0000                                            l113 013F  
                                          l210 0126                                            l116 0108  
                                          l213 0127                                            l119 00CB  
                                          l231 00F5                                            l216 0132  
                                          l240 01D2                                            l225 00EF  
                                          l234 00E9                                            l228 00E3  
                                          l237 0111                                            l158 01F4  
                                          l246 0293                                            l249 017F  
                                          l273 02BF                                            l258 0268  
                                          l274 02C0                                            l610 0585  
                                          l450 03A6                                            l451 03B4  
                                          l268 0166                                            l452 03C0  
                                          l460 06F6                                            l461 070E  
                                          l447 0384                                            l455 06D0  
                                          l464 077E                                            l456 06D9  
                                          l609 0574                                            l492 02F1  
                                          l485 049B                                            l478 07F4  
                                          l596 0675                                            l597 0686  
                                          l950 01B2                                            l953 01B2  
                                          l980 0151                                            l965 0367  
                                          l973 023F                                            l986 0198  
                                 __CFG_CPD$OFF 0000                                            u710 0118  
                                          u711 0117                                            u720 012C  
                                          u800 01CC                                            u721 012B  
                                          u801 01C9                                            u730 0132  
                                          u731 0131                                            u740 032E  
                                          u820 036F                                            u741 032D  
                                          u821 036E                                            u814 01CE  
                                          u910 05E6                                            u750 0333  
                                          u830 037D                                            u751 0332  
                                          u831 037C                                            u920 05F6  
                                          u760 0342                                            u840 03A6  
                                          u921 05F5                                            u761 0341  
                                          u841 03A5                                            u930 0609  
                                          u770 035F                                            u850 03AB  
                                          u931 0608                                            u771 035E  
                                          u851 03AA                                            u940 0633  
                                          u860 01A6                                            u780 023F  
                                          u941 0632                                            u861 01A5  
                                          u781 023E                                            u845 03A2  
                                          u950 0652                                            u870 0591  
                                          u790 0192                                            u951 0651  
                                          u871 0590                                            u775 035B  
                                          u791 0191                                            u960 0657  
                                          u961 0656                                            u945 062F  
                                          u865 01A2                                            u890 05BC  
                                          u891 05BB                                            u980 04A7  
                                          u981 04A6                                            _abs 0199  
                                          _pad 0368                 ?_EUSART_SetFramingErrorHandler 0070  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                        __end_of_TC74_Initialize 0180  
                                         ?_abs 0073                                           l1500 0338  
                                         l1510 00E7                                           l1502 0342  
                                         l1600 05DB                                           l1504 035F  
                                         l1512 021A                                           l1520 0181  
                                         l1530 00EA                                           l1610 0601  
                                         l1602 05DF                                           l1514 021D  
                                         l1522 0186                                           l1508 00E4  
                                         l1532 00ED                                           l1540 00F3  
                                         l1620 0643                                           l1612 0605  
                                         l1604 05E9                                           l1516 022B  
                                         l1524 018A                                           l1700 0749  
                                         l1534 00DE                                           l1550 01B3  
                                         l1542 010A                                           l1622 0644  
                                         l1614 0609                                           l1606 05F6  
                                         l1630 049D                                           l1518 0230  
                                         l1526 0192                                           l1710 07A6  
                                         l1702 074D                                           l1800 0215  
                                         l1536 00E1                                           l1560 01CE  
                                         l1552 01B6                                           l1544 010D  
                                         l1616 0611                                           l1608 05F9  
                                         l1624 0652                                           l1640 04FE  
                                         l1632 04A7                                           l1720 07CA  
                                         l1712 07B4                                           l1704 0751  
                                         l1810 01E0                                           l1802 01D3  
                                         l1490 0127                                           l1562 01D1  
                                         l1554 01BB                                           l1538 00F0  
                                         l1546 0110                                           l1626 0657  
                                         l1618 0633                                           l1650 0533  
                                         l1642 0501                                           l1634 04C8  
                                         l1570 0378                                           l1722 07D0  
                                         l1706 078C                                           l1714 07B9  
                                         l1732 00D2                                           l1820 01EB  
                                         l1812 01E2                                           l1804 01D9  
                                         l1492 012C                                           l1556 01C3  
                                         l1660 026D                                           l1740 0246  
                                         l1652 0543                                           l1644 0509  
                                         l1636 04D2                                           l1628 049C  
                                         l1484 0113                                           l1580 0398  
                                         l1572 037D                                           l1724 07D5  
                                         l1716 07C0                                           l1708 0799  
                                         l1900 0140                                           l1734 00D8  
                                         l1830 0102                                           l1822 01ED  
                                         l1814 01E4                                           l1806 01DC  
                                         l1558 01C6                                           l1670 0283  
                                         l1662 0270                                           l1742 0250  
                                         l1590 0586                                           l1646 050D  
                                         l1654 0551                                           l1638 04F1  
                                         l1486 0118                                           l1494 0329  
                                         l1582 03AB                                           l1574 0382  
                                         l1566 036A                                           l1726 07D9  
                                         l1718 07C5                                           l1750 03D4  
                                         l1902 0145                                           l1910 02F2  
                                         l1736 00CC                                           l1832 0105  
                                         l1824 01EF                                           l1816 01E7  
                                         l1808 01DE                                           l1672 0290  
                                         l1664 0274                                           l1744 0266  
                                         l1840 0154                                           l1592 0587  
                                         l1656 0556                                           l1648 0511  
                                         l1488 00F7                                           l1496 032E  
                                         l1576 0387                                           l1568 036F  
                                         l1728 07E1                                           l1680 06B2  
                                         l1760 0408                                           l1752 03DC  
                                         l1912 02F8                                           l1834 0106  
                                         l1826 01F0                                           l1818 01E9  
                                         l1666 027B                                           l1658 0269  
                                         l1738 0242                                           l1842 0160  
                                         l1594 0591                                           l1586 0199  
                                         l1498 0333                                           l1578 0393  
                                         l1690 0704                                           l1682 06D5  
                                         l1674 0689                                           l1770 0454  
                                         l1762 0410                                           l1754 03E1  
                                         l1850 02CB                                           l1914 0309  
                                         l1828 01F2                                           l1836 00C8  
                                         l1668 027E                                           l1596 05B2  
                                         l1588 01A6                                           l1692 0709  
                                         l1684 06E8                                           l1676 0699  
                                         l1780 0475                                           l1772 045C  
                                         l1764 0429                                           l1756 03E5  
                                         l1748 03C3                                           l1852 02DF  
                                         l1916 0315                                           l1870 0133  
                                         l1838 0154                                           l1598 05BC  
                                         l1694 0713                                           l1686 06EE  
                                         l1678 06AC                                           l1774 0467  
                                         l1758 03F7                                           l1854 02E9  
                                         l1846 02C3                                           l1872 011C  
                                         l1792 01F5                                           l1880 0168  
                                         l1696 0716                                           l1688 06FE  
                                         l1768 0443                                           l1784 0478  
                                         l1848 02C7                                           l1874 011F  
                                         l1794 0200                                           l1882 016F  
                                         l1890 02A0                                           l1698 071B  
                                         l1786 0491                                           l1778 046D  
                                         l1876 0124                                           l1796 0207  
                                         l1884 0177                                           l1892 02AC  
                                         l1878 0125                                           l1798 020E  
                                         l1894 02B3                                           l1886 0296  
                                         ?_pad 0024                                           l1896 02BB  
                                         l1888 0297                                           STR_1 0800  
                                         u1000 04D2                                           u1001 04D1  
                                         u1020 04FE                                           u1100 06B2  
                                         u1021 04FD                                           u1101 06B1  
                                         u1030 0511                                           u1031 0510  
                                         u1040 0533                                           u1200 07B9  
                                         u1120 06D5                                           u1041 0532  
                                         u1201 07B8                                           u1121 06D4  
                                         u1050 0551                                           u1210 07C0  
                                         u1130 06E8                                           u1051 0550  
                                         u1211 07BF                                           u1131 06E7  
                                         u1300 0166                                           u1060 0556  
                                         u1220 07C5                                           u1140 0704  
                                         u1061 0555                                           u1045 052F  
                                         u1221 07C4                                           u1141 0703  
                                         u1230 07D0                                           u1150 0709  
                                         u1310 02E9                                           u1231 07CF  
                                         u1151 0708                                           u1135 06E4  
                                         u1311 02E8                                           u1240 0250  
                                         u1160 078C                                           u1080 06A4  
                                         u1241 024F                                           u1161 078B  
                                         u1081 06A2                                           u1170 0799  
                                         u1090 06A5                                           u1250 03D4  
                                         u1171 0798                                           u1251 03D3  
                                         u1340 02A0                                           u1180 07A6  
                                         u1260 03F7                                           u1341 029F  
                                         u1181 07A5                                           u1165 0788  
                                         u1261 03F6                                           _LATA 010C  
                                         u1350 02B3                                           u1190 07B4  
                                         u1270 0408                                           _LATB 010D  
                                         u1351 02B2                                           u1191 07B3  
                                         u1271 0407                                           _LATC 010E  
                                         u1280 0454                                           _LATD 010F  
                                         u1185 07A2                                           u1281 0453  
                                         _LATE 0110                                           u1290 0165  
                                         u1291 0163                                           u1195 07B0  
                                         u1377 030F                                           _WPUB 020D  
                                         _WPUE 0210                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 0073  
                                         _dbuf 00A9                                           _main 02F2  
                                         _dtoa 0687                                           _prec 00A4  
                             __end_of_I2C_Read 01D3                                           _nout 00A0  
                                         pad@i 0028                                           pad@p 0025  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 002A                             __size_of_TC74_Read 0029  
                                         btemp 007E                               __end_of_I2C_Stop 00F6  
                                __CFG_BOREN$ON 0000                          __size_of_I2C_Send_ACK 0006  
                                         start 0002                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 0075                                          ??_pad 0027  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0109                                __end_of___aodiv 0687  
                                        ?_main 0070                                          ?_dtoa 0030  
                              __end_of___aomod 0586                                          _ACKDT 10B5  
                                __CFG_WDTE$OFF 0000                                          _RCREG 0199  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 004E  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISD 008F  
                                        _TRISE 0090                                          _TXREG 019A  
                                        _TXSTA 019E                                          u90lld 05DB  
                                        u88lld 05B0                                          u97lld 0675  
                                        u99lld 04C6                                          _flags 00A6  
                               _WDT_Initialize 00C8                                          _fputc 0329  
                                        _fputs 0218                                   TC74_Read@Obj 0024  
                                 _I2C_Send_ACK 00E4                                          pad@fp 002C  
                                        _width 00A2                              __end_of_I2C_Wait1 0133  
                                        _putch 00F6                                          dtoa@d 0030  
                                        dtoa@i 004C                                          dtoa@n 0044  
                                        dtoa@p 003D                            __size_of_TC74_Ready 0015  
                                        dtoa@s 0042                                          dtoa@w 0040  
                            __end_of_I2C_Start 00F0                              __end_of_I2C_Write 0112  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                         TC74_Read@TC74_Register 007B  
                              __initialization 07F5                                   __end_of_main 0329  
                                 __end_of_dtoa 07F5                                 ??_EUSART_Write 0070  
                                       ??_main 006E                                         ??_dtoa 0038  
                            __end_of_TC74_Read 0269                                 __CFG_PLLEN$OFF 0000  
                       __end_of_WDT_Initialize 00CC                               ?_TC74_Initialize 0070  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00D0  
                                 ??_I2C_RStart 0070                                         ?_fputc 0072  
                                       ?_fputs 007A                                         _APFCON 011D  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELD 018F  
                                       _ANSELE 0190                                         _BORCON 0116  
                                       u101lld 04F1                                         _OSCCON 0099  
                                       u111lld 06D0                                         u107lld 0574  
                     __end_of_TC74_Temperature 02C1                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _TRISC3 0473  
                                       _TRISC4 0474                                         _SSPBUF 0211  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 0064  
                                    ??___aodiv 0070                                      ??___aomod 0070  
                               __CFG_STVREN$ON 0000                             __end_of_I2C_RStart 00E4  
                      __size_of_I2C_Initialize 000B                                         _printf 0140  
                                       pad@buf 0024               __size_of_Wrappers_I2CMaster_Read 002B  
                                       dtoa@fp 003F                                         _strlen 0180  
                                       fputc@c 0072                                         fputs@c 0020  
                                       fputs@i 0021                                         fputs@s 0023  
                                TC74_Ready@Obj 0025                                      ?_I2C_Read 0070  
                                    ?_I2C_Stop 0070                                ?_WDT_Initialize 0070  
                             __end_of_vfprintf 02F2                  Wrappers_I2CMaster_Read@amount 0078  
                            _SYSTEM_Initialize 0133                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                             TC74_Initialize@Obj 0076  
                               __pcstackCOMMON 0070                                   ??_TC74_Ready 007D  
                          ??_SYSTEM_Initialize 0072                       TC74_Initialize@write_fcn 0071  
                                __end_of_fputc 0368                                  __end_of_fputs 0240  
                                __end_of_putch 00FC                                 _OPTION_REGbits 0095  
                                   ??_I2C_Read 0072                                     ??_I2C_Stop 0070  
              ??_EUSART_SetOverrunErrorHandler 0072                                        ??_fputc 0075  
                    __end_of_SYSTEM_Initialize 0140                                        ??_fputs 007B  
                                      ??_putch 0071                                     __pbssBANK1 00A0  
                           __end_of_TC74_Ready 0167                           __end_of_EUSART_Write 011C  
                              __CFG_VCAPEN$OFF 0000                                     __pmaintext 02F2  
                                      _BAUDCON 019F                                        ?_printf 0066  
                                      ?_strlen 0070                             __size_of_vfpfcnvrt 00DB  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                                      _I2C_Wait1 0127  
                                    _I2C_Start 00EA                                      _I2C_Write 0109  
                                      ___aodiv 0586                                        ___aomod 049C  
          TC74_Temperature@Digital_Temperature 002A                                      ?_vfprintf 005E  
                      _Wrappers_I2CMaster_Read 0269                                 _I2C_Initialize 011C  
                                      __ptext1 0140                                        __ptext2 02C1  
                                      __ptext3 03C1                                        __ptext4 0687  
                                      __ptext5 0368                                        __ptext6 0180  
                                      __ptext7 0218                                        __ptext8 0329  
                                      __ptext9 00F6                                __size_of_printf 0012  
                              __size_of_strlen 0019                          _OSCILLATOR_Initialize 0102  
                                 __size_of_abs 001A                                   __size_of_pad 0059  
                     ??_PIN_MANAGER_Initialize 0070                                      _TC74_Read 0240  
                   __size_of_SYSTEM_Initialize 000D                                        clrloop0 00FD  
                         end_of_initialization 07FD          __end_of_EUSART_SetOverrunErrorHandler 00DE  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 00D8  
                                      fputc@fp 0074                                        fputs@fp 007A  
                            ?_TC74_Temperature 0070                                     ?_I2C_Wait1 0070  
                                   ?_I2C_Start 0070                                     ?_I2C_Write 0070  
                            _EUSART_Initialize 01F5                             ??_TC74_Temperature 0027  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 049C  
                                    _RCSTAbits 019D                         __end_of_I2C_Initialize 0127  
                                   ??_vfprintf 0061                                        strlen@a 0073  
                                      strlen@s 0074                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                            TC74_Temperature@Obj 0029  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 000A  
                                   ?_TC74_Read 007B                              __size_of_I2C_Read 0020  
                            __size_of_I2C_Stop 0006                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 0218                       __size_of_TC74_Initialize 0019  
                                    _TXSTAbits 019E                Wrappers_I2CMaster_Read@Register 0077  
                    ??_Wrappers_I2CMaster_Read 0079                                ?_I2C_Initialize 0070  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 004F  
                                  vfpfcnvrt@fp 005D                                    vfpfcnvrt@ll 0055  
                                 _EUSART_Write 0112                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 0152                                 __end_of_strlen 0199  
                          start_initialization 07F5                __size_of_PIN_MANAGER_Initialize 0022  
                                  __end_of_abs 01B3                                    __end_of_pad 03C1  
             Wrappers_I2CMaster_Read@Address7b 0076                                    putch@txData 0071  
                                  ??_I2C_Wait1 0070                                    ??_I2C_Start 0070  
                                  ??_I2C_Write 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  vfprintf@fmt 005E                     _EUSART_FramingErrorHandler 00D2  
                      TC74_Initialize@read_fcn 0073                         _EUSART_SetErrorHandler 00CC  
                                     ??_printf 006A                                       ??_strlen 0072  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                             ___aodiv@dividend 0028                                    ??_TC74_Read 0020  
              __end_of_Wrappers_I2CMaster_Read 0294                                  ?_I2C_Send_ACK 0070  
                   __size_of_EUSART_Initialize 0023                                      __pnvBANK1 00CE  
                       _PIN_MANAGER_Initialize 01D3                                    I2C_Read@ack 0070  
                            ??_TC74_Initialize 0075                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0073  
                            __size_of_vfprintf 0031                                I2C_Read@tempbuf 0074  
                                     _I2C_Read 01B3                                       _I2C_Stop 00F0  
                               ??_I2C_Send_ACK 0070                                 __size_of_fputc 003F  
                               __size_of_fputs 0028                                 __size_of_putch 0006  
                                     _TC74Data 00C9         EUSART_SetErrorHandler@interruptHandler 0070  
                                    clear_ram0 00FC                              _eusartRxLastError 00A8  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
            _EUSART_DefaultOverrunErrorHandler 0000                                      _vfpfcnvrt 03C1  
                    __size_of_TC74_Temperature 002D              Wrappers_I2CMaster_Read@DatatoSend 007A  
                                   _I2C_RStart 00DE                               ??_I2C_Initialize 0070  
                                   vfprintf@ap 0060                                     vfprintf@fp 0063  
                                I2C_Write@data 0070                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 00CE                               __size_of___aodiv 0101  
                             __size_of___aomod 00EA                                     ?_vfpfcnvrt 004E  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0071  
                                     _dtoa$760 003B                       _Wrappers_I2CMaster_Write 0000  
                                     __ptext10 0112                                       __ptext11 0199  
                                     __ptext20 00EA                                       __ptext12 049C  
                                     __ptext21 01B3                                       __ptext13 0586  
                                     __ptext30 01F5                                       __ptext22 00E4  
                                     __ptext14 0294                                       __ptext31 00D8  
                                     __ptext23 00DE                                       __ptext15 0152  
                                     __ptext32 00D2                                       __ptext24 0127  
                                     __ptext16 0240                                       __ptext33 00CC  
                                     __ptext25 0167                                       __ptext17 0269  
                                     __ptext34 011C                                       __ptext26 0133  
                                     __ptext18 0109                                       __ptext27 00C8  
                                     __ptext19 00F0                                       __ptext28 01D3  
                                     __ptext29 0102                                  __size_of_main 0037  
                                __size_of_dtoa 016E                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                     _TC74_Ready 0152  
                         __end_of_I2C_Send_ACK 00EA                                TC74_Read@amount 007C  
                              TC74_Read@buffer 0022                                       _vfprintf 02C1  
                                    printf@fmt 0066          __end_of_EUSART_SetFramingErrorHandler 00D8  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 00D2  
                             ___aomod@dividend 0028                                    ?_I2C_RStart 0070  
                              TC74_Ready@Ready 0026                        __size_of_WDT_Initialize 0004  
                              _TC74_Initialize 0167                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 00D2                              __CFG_CLKOUTEN$OFF 0000  
                     ?_Wrappers_I2CMaster_Read 0076                                       printf@ap 006D  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                ___aomod@divisor 0020  
                                  ??_vfpfcnvrt 0050                                ___aomod@counter 0071  
                             _TC74_Temperature 0294                                  __pstringtext1 0800  
                                __pstringtext2 0000                                    _SSPCON2bits 0216  
                           EUSART_Write@txData 0070                                   ___aodiv@sign 0072  
                  TC74_Temperature@Temperature 0028                 __end_of_PIN_MANAGER_Initialize 01F5  
                                 ___aomod@sign 0072  
